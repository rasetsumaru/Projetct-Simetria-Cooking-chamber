<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>VisiWinNET.Compact.Forms</name>
  </assembly>
  <members>
    <member name="T:VisiWinNET.Forms.AnalogItemEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.AnalogValueBinding">
      <summary>Kapselt die Informationen zur Bindung einer Steuerelementeeigenschaft an einen Prozessvariablenwert,. Der Datentyp der Eigenschaft muss dabei numerisch sein. Der Prozessvariablenwert wird über eine lineare Gleichung umgerechnet und auf den Eigenschaftenwert geschrieben</summary>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.#ctor(System.String,VisiWinNET.DataAccess.AnalogItem,VisiWinNET.Forms.PropertyBinding.LinearConverter,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initialisiert eine neue Instanz der 'AnalogValueBinding'-Klasse.unter Angabe mehrerer Eigenschaftenwerte</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="linearConverter">Wert für die 'LinearConverter'-Eigenschaft</param>
      <param name="itemMinValue">Wert für die 'ItemMinValue'-Eigenschaft</param>
      <param name="itemMaxValue">Wert für die 'ItemMaxValue'-Eigenschaft</param>
      <param name="minValue">Wert für die 'MinValue'-Eigenschaft</param>
      <param name="maxValue">Wert für die 'MaxValue'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'AnalogValueBinding'-Klasse.unter Angabe des Eigenschaftennamens</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der 'AnalogValueBinding'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.FormulaFactor">
      <summary>Gibt die Steigung der Geradengleichung an,die zur Umrechnung verwendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.FormulaOffset">
      <summary>Gibt den Offset der Geradengleichung an,die zur Umrechnung verwendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.ItemMaxValue">
      <summary>Gibt die obere Grenze für den Variablenwert an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.ItemMinValue">
      <summary>Gibt die untere Grenze für den Variablenwert an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.LinearConverter">
      <summary>Legt eine 'LinearConverter'-Komponente fest, die (alternativ zur Verwendung der Eigenschaften 'MinValue'/ 'MaxValue'/ 'ItemMinValue'/ 'ItemMaxValue') die lineare Umrechnung definiert. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.MaxValue">
      <summary>Gibt die obere Grenze für den Eigenschaftenwert an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.MinValue">
      <summary>Gibt die untere Grenze für den Eigenschaftenwert an
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.Value">
      <summary>Legt den umgerechneten Eigenschaftenwert fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.AnalogValueBinding.VWItem">
      <summary>Auswahl einer Prozessvariablen, deren Wert mit der gewählten Eigenschaft verknüpft wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft  enthält</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.AnalogValueBinding.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="T:VisiWinNET.Forms.ApplicationCommand">
      <summary>Klasse, die die Funktion eines 'CommandButton'-Steuerelementes beschreibt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ApplicationCommand.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ApplicationCommand'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ApplicationCommand.Command">
      <summary>Legt die Funktion fest, die durch einen Klick auf das 'CommandButton'-Steuerelement ausgeführt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ApplicationCommand.Param">
      <summary>Legt zusätzliche Parameter zu der über die Eigenschaft 'Command' gewählte Funktion fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ApplicationCommand.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Zeichenkette die die Funktion des Objektes beschreibt, z.B.: "ShowForm(FCentral)"</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Bar">
      <summary>Steuerelement, das eine Füllstandsanzeige darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Bar.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Bar'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ChangeMono">
      <summary>Legt fest, ob die als einfarbig eingestellte Füllstandsanzeige ihre Farbe beim Erreichen einer Grenze wechselt
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.DataBackColor">
      <summary>Legt die Hintergrundfarbe der Füllstandsanzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.DataBorder">
      <summary>Legt die Umrandung der Variablenwertanzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Direction">
      <summary>Legt die Ausrichtung der Füllstandsanzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.DisplayGradient">
      <summary>Legt fest, ob ein fließender Farbverlauf zwischen den einzelnen Wertebereichen dargestellt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Format">
      <summary>Legt das Format für die numerische Prozesswertdarstellung im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.InnerMargin">
      <summary>Legt einen festen Abstand zwischen den Steuerelementeabmessungen und den Anzeigeelementen (Füllstandsanzeige, Skala, Textfeld) des Steuerelementes fest. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Label">
      <summary>Ermöglicht die Darstellung eines festen Textes oder eines Textes aus der Sprachumschaltung im Steuerelement</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.LabelPosition">
      <summary>Legt die Position der Textausgabe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.LimitLineColor">
      <summary>Legt fest, in welcher Farbe die Linien für die Grenzwerte dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Limits">
      <summary>Legt die Wertebereiche für die farbliche Darstellung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.MaxValue">
      <summary>Legt den Wert fest, bei dem die Füllstandsanzeige den maximalen Wert anzeigt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.MinValue">
      <summary>Legt den Wert fest, bei dem die Füllstandsanzeige den minimalen Wert anzeigt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Mono">
      <summary>Legt fest, ob die Füllstandsanzeige ein- oder mehrfarbig dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Padding">
      <summary>Legt den Abstand zwischen Füllstandsanzeige und Skala (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ReferenceLineColor">
      <summary>Legt die Farbe der Referenzlinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ReferenceLineWidth">
      <summary>Legt die Breite der Referenzlinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ReferenceValue">
      <summary>Legt den Referenzwert fest, von dem aus die Füllstandsanzeige dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.Scale">
      <summary>Legt die Darstellung der Skala im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ScalePosition">
      <summary>Legt die Position der Skala im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ShowLimits">
      <summary>Legt fest, ob die über 'Limits' eingestellten Grenzwerte in der Füllstandsanzeige durch eine Linie markiert werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ShowNumericValue">
      <summary>Legt fest, ob der Wert der angebundenen Prozessvariable zusätzlich numerisch angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.UseItemUnit">
      <summary>Legt fest, ob als Einheitentext der Text der aktiven Einheitenumrechnung angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.UseReference">
      <summary>Legt fest, ob die Darstellung der Füllstandsanzeige in zwei Richtungen (vom Referenzwert ausgehend) angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.ValueText">
      <summary>Gibt zur Laufzeit den Inhalt der numerischen Prozesswertdarstellung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Bar.VWItem">
      <summary>Legt den Prozesswert fest, dessen Wert als Füllstandsanzeige dargestellt werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Bar.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Bar.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Bar.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Bar.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Bar.ValueToPixel(System.Double)">
      <summary>Rechnet den übergebenen Wert in die entsprechende Füllstandskoordinate um</summary>
      <returns>Angabe des Pixelwertes ausgehend von der Kante des Steuerelementes, an die der Minimalwert grenzt</returns>
      <param name="svalue">Umzurechnender Variablenwert</param>
    </member>
    <member name="E:VisiWinNET.Forms.Bar.Change">
      <summary>Wird ausgelöst, wenn sich der angebundene Prozessvariablenwert ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Bar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Bar.Limit">
      <summary>Wird ausgelöst, wenn der Variablenwert einen Wertebereich verlässt oder genau auf der Grenze liegt.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Bar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'LimitEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Bar.MaxValueChange">
      <summary>Wird ausgelöst, wenn sich der maximal anzuzeigende Wert (Eigenschaft 'MaxValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Bar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Bar.MinValueChange">
      <summary>Wird ausgelöst, wenn sich der minimal anzuzeigende Wert (Eigenschaft 'MinValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Bar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.BaseForm">
      <summary>Basisformular mit blockweiser Variablen(de-)aktivierung</summary>
    </member>
    <member name="M:VisiWinNET.Forms.BaseForm.#ctor">
      <summary>Initialisiert eine neue Instanz der 'BaseForm'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.BaseForm.Font">
      <summary>Legt die Schriftart für das Formular fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.BaseForm.VariableActivationMode">
      <summary>Legt fest, ob die Anmeldung der Variablen auf dem Formular beim Laden oder beim Anzeigen erfolgen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.BaseForm.VariableDeactivationMode">
      <summary>Legt fest, wann und wie die auf dem Formular verwendeten Prozessvariablen beim Variablenkern abgemeldet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.BaseForm.AttachItems">
      <summary>Ruft in allen enthaltenen Steuerelementen und Komponenten die 'AttachItems'-Methode auf</summary>
    </member>
    <member name="M:VisiWinNET.Forms.BaseForm.DetachItems">
      <summary>Ruft in allen enthaltenen Steuerelementen und Komponenten die 'DetachItems'-Methode auf</summary>
    </member>
    <member name="E:VisiWinNET.Forms.BaseForm.FormChanged">
      <summary>Wird ausgelöst, nachdem ein Formularwechsel ausgeführt wurde.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'FormChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.BaseForm.FormChanging">
      <summary>Wird ausgelöst, bevor ein Formularwechsel ausgeführt wird.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'FormChangingEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.BaseForm.PaintBackground">
      <summary>Wird ausgelöst, wenn der Hintergrund des Steuerelementes gezeichnet wird.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ PaintEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.BitChangeEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ButtonBorder">
      <summary>Klasse, die die äußere Umrandung eines Schaltflächensteuerelementes festlegt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ButtonBorder.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ButtonBorder'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ButtonBorder.CalculatedWidth">
      <summary>Gibt die gesamte Breite des Rahmens (in Pixeln) zurück.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ButtonBorder.Color1">
      <summary>Legt in Abhängigkeit vom Wert der 'Style'-Eigenschaft eine Farbe in der Umrandung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ButtonBorder.Color2">
      <summary>Legt in Abhängigkeit vom Wert der 'Style'-Eigenschaft eine Farbe in der Umrandung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ButtonBorder.Color3">
      <summary>Legt in Abhängigkeit vom Wert der 'Style'-Eigenschaft eine Farbe in der Umrandung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ButtonBorder.Style">
      <summary>Festlegung des generellen Aussehens der Umrandung</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ButtonBorder.Width">
      <summary>Legt in Abhängigkeit von der 'Style'-Eigenschaft die Breite der Umrandung fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ButtonBorder.DrawBorder(System.Drawing.Graphics,outSystem.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Die Methode 'DrawBorder' zeichnet die Umrandung in das angegebene grafische Objekt.</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
      <param name="rcBounds">Objekt vom Typ 'Rectangle', das die Abmessungen des Rahmens festlegt</param>
      <param name="inflate">True: das im Parameter 'rcBounds' übergebene Objekt wird um die Rahmenabmessungen verkleinert.False: das im Parameter 'rcBounds' übergebene Objekt wird nicht verändert.</param>
      <param name="down">True: Der Rahmen wird so gezeichnet, als ob das Steuerelement durch einen Mausklick gedrückt wirdFalse: Der Rahmen wird für ein Steuerelement im nichtbedienten Zustand gezeichnet</param>
      <param name="selected">True: Der Rahmen wird gezeichnet, als ob das Steuerelement den Eingabefokus hat (durch eine gepunktete Linie gekennzeichnet)False: Der Rahmen wird für ein nicht selektiertes Steuerelement gezeichnet</param>
    </member>
    <member name="M:VisiWinNET.Forms.ButtonBorder.DrawBorder(System.Drawing.Graphics,outSystem.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>Die Methode 'DrawBorder' zeichnet die Umrandung in das angegebene grafische Objekt.</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
      <param name="rcBounds">Objekt vom Typ 'Rectangle', das die Abmessungen des Rahmens festlegt</param>
      <param name="down">True: Der Rahmen wird so gezeichnet, als ob das Steuerelement durch einen Mausklick gedrückt wirdFalse: Der Rahmen wird für ein Steuerelement im nichtbedienten Zustand gezeichnet</param>
      <param name="selected">True: Der Rahmen wird gezeichnet, als ob das Steuerelement den Eingabefokus hat (durch eine gepunktete Linie gekennzeichnet)False: Der Rahmen wird für ein nicht selektiertes Steuerelement gezeichnet</param>
    </member>
    <member name="M:VisiWinNET.Forms.ButtonBorder.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Konstantenname der 'Style'-Eigenschaft</returns>
    </member>
    <member name="E:VisiWinNET.Forms.ButtonBorder.PropertyChanged">
      <summary>Tritt auf, wenn sich ein Eigenschaftenwert ändert.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ButtonBorder.ViewChanged">
      <summary>Wird ausgelöst, wenn sich die Umrandungsdarstellung durch die Änderung einer Eigenschaft geändert hat.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ButtonBorder', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ButtonControlEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.CellChangedEventArgs">
      <summary>Stellt Daten für das 'CellChanged'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.CellChangedEventArgs.#ctor(VisiWinNET.Forms.ListViewItem,VisiWinNET.Forms.ListViewColumn)">
      <summary>Initialisiert eine neue Instanz der 'CellChangedEventArgs'-Klasse.</summary>
      <param name="item">Angabe des Wertes für die Eigenschaft 'Item'</param>
      <param name="column">Angabe des Wertes für die Eigenschaft 'Column'</param>
    </member>
    <member name="P:VisiWinNET.Forms.CellChangedEventArgs.Column">
      <summary>Gibt die Spalte an, in der sich die Zelle befindet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CellChangedEventArgs.Item">
      <summary>Gibt die Zeile an, in der sich die Zelle befindet</summary>
    </member>
    <member name="T:VisiWinNET.Forms.CheckBox">
      <summary>Steuerelement, das ein Kontrollkästchen mit erweiterten Funktionen darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.CheckBox.#ctor">
      <summary>Erzeugt eine neue Instanz der Checkbox-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.BackColorCheck">
      <summary>Legt die Hintergrundfarbe im Kontrollkästchen für den '0'-Zustand (wenn der Kontrollhaken nicht gesetzt ist) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.BackColorCheckGrayed">
      <summary>Legt die Hintergrundfarbe im Kontrollkästchen für den 'Grayed'-Zustand (wenn die 'Grayed'-Eigenschaft den Wert 'True' einnimmt) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.BackColorCheckOn">
      <summary>Legt die Hintergrundfarbe im Kontrollkästchen für den '1'-Zustand (wenn der Kontrollhaken gesetzt ist)(wenn der Kontrollhaken gesetzt ist) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.CheckAlign">
      <summary>Legt die Position des Kontrollkästchens im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.CheckSize">
      <summary>Legt die Abmessungen des Kontrollkästchens im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.CheckStyle">
      <summary>Legt die Form des Kontrollhakens fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.EditControl">
      <summary>Legt fest, ob das Steuerelement direkt auf die angeschlossene Prozessvariable schreibt oder ob eine Editierkopie angelegt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.ForeColorCheckGrayed">
      <summary>Legt die Farbe des Kontrollhäkchens fest, wenn die 'Grayed' Eigenschaft gesetzt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.ForeColorChecking">
      <summary>Legt die Farbe des Kontrollhäkchens fest, die eine begonnene Eingabe kennzeichnet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.ForeColorCheckOn">
      <summary>Legt die Farbe des Kontrollhäkchens für den Zustand '1' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.Grayed">
      <summary>Ermöglicht die Anzeige eines 'teilweise selektierten Zustandes'</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.ImageDisabledOn">
      <summary>Legt die Grafik fest, die angezeigt wird, wenn die angebundene Prozessvariable den Wert 'True' hat und das Steuerelement deaktiv ist (Enabled = 'False').
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.ImageOn">
      <summary>Legt die Grafik fest, die angezeigt wird, wenn die angebundene Prozessvariable den Wert 'True' hat.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CheckBox.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.CheckBox.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.CheckBox.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.CheckBox.StartEdit">
      <summary>Startet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.CheckBox.StopEdit(System.Boolean)">
      <summary>Beendet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
      <param name="transmitEditResult">True: Der Wert der Editierkopie wird zum Variablenkern übertragenFalse: Der Wert der Editierkopie wird verworfen. Der aktuelle Variablenwert aus dem Variablenkern wird in das Steuerelement zurückgeladen.</param>
    </member>
    <member name="E:VisiWinNET.Forms.CheckBox.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des  Steuerelementes verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Checkbox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.CheckBox.EditStateChange">
      <summary>Wird ausgelöst, wenn das Objekt den Editierstatus ändert.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Checkbox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EditStateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.CheckBox.VerifyEditValue">
      <summary>Ereignis zur Überprüfung des Eingabewertes.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Checkbox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VerifyDigitalEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ColorBinding">
      <summary>Kapselt die Informationen zur Bindung einer Steuerelementeeigenschaft an einen Prozessvariablenwert,. Der Datentyp der Eigenschaft muss dabei 'Color' sein. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.Forms.ColorCollection)">
      <summary>Initialisiert eine neue Instanz der 'ColorBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="colors">Wert für die 'Colors'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'ColorBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ColorBinding'-Klasse.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.DataAccess.DigitalItem,VisiWinNET.Forms.ColorCollection)">
      <summary>Initialisiert eine neue Instanz der 'ColorBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="vwItemfault">Wert für die 'VWItemFault'-Eigenschaft</param>
      <param name="colors">Wert für die 'Colors'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.Forms.PropertyBinding.IColorList)">
      <summary>Initialisiert eine neue Instanz der 'ColorBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="colorList">Wert für die 'ColorList'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.DataAccess.DigitalItem,VisiWinNET.Forms.PropertyBinding.IColorList)">
      <summary>Initialisiert eine neue Instanz der 'ColorBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="vwItemfault">Wert für die 'VWItemFault'-Eigenschaft</param>
      <param name="colorList">Wert für die 'ColorList'-Eigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.ColorBinding.ColorList">
      <summary>Legt eine 'ColorList'-Komponente fest, die (alternativ zur Verwendung der 'Colors'-Eigenschaft) die Zuordnung von Farben zu Prozessvariablenwerten definiert. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.ColorBinding.Colors">
      <summary>Beschreibt eine Liste von Farbwerten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ColorBinding.Value">
      <summary>Legt den zum Prozesvariablenwert zugeordneten Eigenschaftenwert fest oder gibt ihn zurück

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ColorBinding.VWItem">
      <summary>Auswahl einer Prozessvariablen, deren Wert mit der gewählten Eigenschaft verknüpft wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ColorBinding.VWItemFault">
      <summary>Legt eine zweite Prozessvariable fest, deren Wert eine zusätzliche Auswahl aus den Texten einer 'ColorList'-Komponente erlaubt. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft enthält</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorBinding.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="T:VisiWinNET.Forms.ColorCollection">
      <summary>Auflistung von Farben, die den einzelnen Zuständen zugeordnet sind</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.#ctor">
      <summary>Erzeugt eine neue Instanz der ColorCollection-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.#ctor(System.Drawing.Color[])">
      <summary>Erzeugt eine neue Instanz der ColorCollection-Klasse.</summary>
      <param name="colors">Angabe von Farben als Array</param>
    </member>
    <member name="P:VisiWinNET.Forms.ColorCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Elementes innerhalb der Auflistung</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.Add(System.Drawing.Color)">
      <summary>Fügt der Auflistung an letzter Stelle einen neuen Farbwert hinzu</summary>
      <param name="color">Objekt vom Typ 'System.Drawing.Color', das die Farbeigenschaften enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.AddRange(System.Drawing.Color[])">
      <summary>Fügt der Auflistung mehrere Farbwerte hinzu</summary>
      <param name="colors">Feld von Objekten des Typs 'System.Drawing.Color', das die hinzuzufügenden Farbeigenschaften enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.Remove(System.Drawing.Color)">
      <summary>Löscht einen Farbwert aus der Auflistung</summary>
      <param name="color">Angabe des zu löschenden Farbwertes über ein 'System.Drawing.Color'-Objekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.RemoveAll(System.Drawing.Color)">
      <summary>Löscht alle Elemente des angegebenen Farbwertes aus der Auflistung
</summary>
      <param name="color">Angabe des zu löschenden Farbwertes über ein 'System.Drawing.Color'-Objekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.ToArray">
      <summary>Wandelt die enthaltenen Elemente in ein Feld von 'Color'-Objekten um</summary>
      <returns>Feld von 'Color'-Objekten</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ColorCollection.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt alle Farben, durch ein Semikolon getrennt, zurück</returns>
    </member>
    <member name="E:VisiWinNET.Forms.ColorCollection.CollectionChanged">
      <summary>Wird ausgelöst, nachdem eine Änderung in den Elementen der Auflistung vorgenommen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ColorCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Angabe des Elementeindex. Der Index kann dazu verwendet werden, über die Item-Eigenschaft auf die neuen Werte des Elementes zuzugreifen.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ComboBox">
      <summary>Steuerelement, das ein Kombinationsfeld mit Prozessanbindung darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ComboBox'-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.BackColor">
      <summary>Legt die Hintergrundfarbe des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.BackColorButton">
      <summary>Legt die Hintergrundfarbe der Schaltfläche zum Öffnen der Auswahlliste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.BackColorSelected">
      <summary>Legt die Hintergrundfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ClearText">
      <summary>Legt fest, ob der  im Textfeld dargestellte Text zurückgesetzt wird, wenn die 'SelectedIndex'-Eigenschaft den Wert -1 einnimmt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Editable">
      <summary>Legt fest, ob das Textfeld des Steuerelementes editierbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.FocusRect">
      <summary>Legt fest, ob die Eingabemarke (Fokus) durch ein gestricheltes Rechteck innerhalb des Steuerelementes angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Font">
      <summary>Legt die Schriftart für das Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ForeColor">
      <summary>Legt die Schriftfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ForeColorButton">
      <summary>Legt die Farbe des Pfeils auf der Schaltfläche zum Öffnen der Auswahlliste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ForeColorSelected">
      <summary>Legt die Schriftfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.HorizontalScrollBar">
      <summary>Legt fest, ob eine horizontale Bildlaufleiste angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ItemHeight">
      <summary>Legt die minimale Höhe der Listenelemente fest oder gibt sie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Items">
      <summary>Auflistung der Listenelemente</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.MaxDropDownItems">
      <summary>Anzahl der maximal sichtbaren Listenelemente nach dem Öffnen der Auswahlliste</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Mode">
      <summary>Gibt an, ob die Liste automatisch (aus den Texten der Sprachumschaltung) oder manuell (über die 'Add'-Methode der Items-Auflistung) mit Listenelementen gefüllt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Multiline">
      <summary>Legt fest, ob ein Zeilenumbruch in den Listenelementen zulässig ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ScrollAlwaysVisible">
      <summary>Legt fest, ob die vertikale Bildlaufleiste immer sichtbar sein soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ScrollBarProperties">
      <summary>Legt fest, wie die Bildlaufleisten des Steuerelementes dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ScrollBarStyle">
      <summary>Bestimmt das Aussehen der Bildlaufleisten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.SelectedIndex">
      <summary>Legt den Index des selektierten Listenelementes fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.SelectedItem">
      <summary>Gibt das selektierte Listenelement zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ShowListModal">
      <summary>Legt fest, ob die Auswahlliste im Steuerelement modal sein soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Sorted">
      <summary>Legt fest, ob die Listenelemente alphabetisch sortiert werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.Text">
      <summary>Legt den aktuell im Textfeld angezeigten Text fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.TextAlign">
      <summary>Legt die Textausrichtung der Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.TextGroup">
      <summary>Legt den vollständigen Bezeichner der Textgruppe aus der Sprachumschaltung fest, aus der die Texte geladen werden sollen.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.TextPrefix">
      <summary>Bestimmt einen Filter für einen Textbereich innerhalb einer Gruppe</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.TextType">
      <summary>Legt fest, wo die angegebenen Texte gesucht werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.ThumbActive">
      <summary>Legt fest, ob die Bedienung der Bildlaufleisten über Positionsleiste oder Positionierungszeiger erlaubt sind</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.UseTouchKeyboard">
      <summary>Legt fest, ob für das Steuerelement die Bildschirmtastatur zur Verfügung stehen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ComboBox.VWItem">
      <summary>Verbindet die Auswahl eines Listenelementes im Steuerelement mit einem Prozesswert.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.BeginUpdate">
      <summary>Unterdrückt das Neuzeichnen des Steuerelementes bis zum Aufruf von 'EndUpdate'</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.Clear">
      <summary>Löscht alle Listenelemente aus dem Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.ClearSelection">
      <summary>Löscht den Selektionszustand aller Listenelemente im Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.EndUpdate">
      <summary>Beendet das über 'BeginUpdate' ausgelöste Unterdrücken des Neuzeichnens</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ComboBox.RemoveSelected">
      <summary>Löscht alle selektierten Listenelemente aus dem Steuerelement
</summary>
    </member>
    <member name="E:VisiWinNET.Forms.ComboBox.BitChange">
      <summary>Wird ausgelöst, wenn sich das über 'WatchedBitNo' festgelegte Bit in der Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ComboBox.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariable ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ComboBox.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des  Steuerelementes verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ComboBox.DropDown">
      <summary>Wird ausgelöst, wenn sich die Auswahlliste im Kombinationsfeld schließt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ComboBox.DropDownClosed">
      <summary>Wird ausgelöst, wenn sich die Auswahlliste im Kombinationsfeld schließt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ComboBox.SelectedIndexChanged">
      <summary>Wird ausgelöst, wenn sich die Auswahl im Steuerelement ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.CommandButton">
      <summary>Steuerelement, das eine Funktionsschaltfläche darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.CommandButton.#ctor">
      <summary>Erzeugt eine neue Instanz der CommandButton-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CommandButton.BackColorDown">
      <summary>Legt die Hintergrundfarbe des Steuerelementes im gedrückten Zustand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CommandButton.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CommandButton.Command">
      <summary>Legt die Funktion fest, die durch einen Klick auf die Schaltfläche ausgeführt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CommandButton.DialogResult">
      <summary>Ruft einen Wert ab, der beim Klicken auf die Schaltfläche an das übergeordnete Formular zurückgegeben wird, oder legt diesen fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CommandButton.ForeColorDown">
      <summary>Legt die Schriftfarbe des Steuerelementes im gedrückten Zustand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CommandButton.OffsetText">
      <summary>Legt fest, ob bei gedrückter Taste der Text um jeweils ein Pixel nach unten und rechts gerückt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.CommandButton.PasswordInput">
      <summary>Legt fest, ob die grafische Oberfläche sich beim Bedienen ändern soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.CommandButton.NotifyDefault(System.Boolean)">
      <summary>Benachrichtigt die Schaltfläche, dass sie ggf. als Standardschaltfläche fungiert, so dass ihre Darstellung entsprechend angepasst werden kann.
</summary>
      <param name="value">'True', wenn die Schaltfläche als Standardschaltfläche dargestellt werden soll, andernfalls 'False'. </param>
    </member>
    <member name="T:VisiWinNET.Forms.ControlBorder">
      <summary>Legt die äußere Umrandung eines Steuerelementes fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlBorder.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ControlBorder'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlBorder.#ctor(VisiWinNET.Forms.BorderStyle)">
      <summary>Erzeugt eine neue Instanz der 'ControlBorder'-Klasse mit der Angabe eines Rahmenstiles.
</summary>
      <param name="defaultStyle">Wert für die Eigenschaft 'Style'.</param>
    </member>
    <member name="P:VisiWinNET.Forms.ControlBorder.CalculatedWidth">
      <summary>Gibt die gesamte Breite des Rahmens (in Pixeln) zurück </summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlBorder.Color1">
      <summary>Erster Farbwert, der in Abhängigkeit von der 'Style'-Eigenschaft eine Farbe in der Umrandung festlegt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlBorder.Color2">
      <summary>Zweiter Farbwert, der in Abhängigkeit von der 'Style'-Eigenschaft eine Farbe in der Umrandung festlegt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlBorder.Color3">
      <summary>Dritter Farbwert, der in Abhängigkeit von der 'Style'-Eigenschaft eine Farbe in der Umrandung festlegt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlBorder.Style">
      <summary>Legt das generelle Aussehen der Umrandung fest. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlBorder.Width">
      <summary>legt in Abhängigkeit vom Wert der 'Style'-Eigenschaft die Breite der Umrandung fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlBorder.ContentEquals(VisiWinNET.Forms.ControlBorder)">
      <summary>Gibt zurück, ob die Eigenschaftenwerte des Objektes mit denen eines Vergleichsobjektes identisch sind.
</summary>
      <returns>True: Die Eigenschaftenwerte sind identisch, ansonsten false.</returns>
      <param name="other">Das Vergleichsobjekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ControlBorder.DrawBorder(System.Drawing.Graphics,outSystem.Drawing.Rectangle)">
      <summary>Die Methode 'DrawBorder' zeichnet die Umrandung in das angegebene grafische Objekt.</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
      <param name="rcBounds">Objekt vom Typ 'Rectangle', das die Abmessungen des Rahmens festlegt</param>
    </member>
    <member name="M:VisiWinNET.Forms.ControlBorder.DrawBorder(System.Drawing.Graphics,outSystem.Drawing.Rectangle,System.Boolean)">
      <summary>Die Methode 'DrawBorder' zeichnet die Umrandung in das angegebene grafische Objekt.</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
      <param name="rcBounds">Objekt vom Typ 'Rectangle', das die Abmessungen des Rahmens festlegt</param>
      <param name="bInflate">True: das im Parameter 'rcBounds' übergebene Objekt wird um die Rahmenabmessungen verkleinertFalse: das im Parameter 'rcBounds' übergebene Objekt wird nicht verändert</param>
    </member>
    <member name="M:VisiWinNET.Forms.ControlBorder.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Konstantenname der 'Style'-Eigenschaft</returns>
    </member>
    <member name="E:VisiWinNET.Forms.ControlBorder.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert und dadurch ein erneutes Auslesen/ Auswerten notwendig wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ControlBorder.ViewChanged">
      <summary>Wird ausgelöst, wenn sich die Umrandungsdarstellung durch die Änderung einer Eigenschaft geändert hat.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ControlBorder', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ControlEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ControlScale">
      <summary>Klasse, die eine Skala in einem Steuerelement beschreibt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlScale.#ctor(System.Windows.Forms.Control)">
      <summary>Erzeugt eine neue Instanz der 'ControlScale'-Klasse</summary>
      <param name="parent">Steuerelement, das die Skala enthält.</param>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.AutoAlignment">
      <summary>Gibt ein Objekt zurück, dass eine automatische Skalierung unterstützt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.DecPoint">
      <summary>Legt die Anzahl der Nachkommastellen fest oder verschiebt ganzzahlige Werte um die angegebene Anzahl von Dezimalstellen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.Display">
      <summary>Legt fest, welche Bestandteile (Skala/Skalenwerte) im Steuerelement dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.EndArrow">
      <summary>Legt fest, ob ein Pfeil am Ende des Lineals angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.EndArrowSize">
      <summary>Legt die Größe des Pfeils (in Pixeln) am Ende des Lineals fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.Font">
      <summary>Legt die Schriftart für die Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.ForeColorRuler">
      <summary>Legt die Farbe des Lineals und der Skalenstriche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.ForeColorScale">
      <summary>Legt die Farbe der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.Format">
      <summary>Legt das Zahlenformat der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.LimitsVisibility">
      <summary>Legt fest, wie die Grenzen des Wertebereiches auf der Skala aufgeführt werden </summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.LineWidthMajor">
      <summary>Legt die Breite der Skalenlinien des Hauptrasters (in Pixeln) fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.LineWidthMinor">
      <summary>Legt die Breite der Skalenlinien des Unterrasters (in Pixeln) fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.Logarithm">
      <summary>Legt fest, ob die Skalenaufteilung logarithmisch oder linear eingeteilt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.Position">
      <summary>Legt die Anordnung von Skala und Skalenwerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.RulerMajorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Hauptrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.RulerMinorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Unterrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.RulerType">
      <summary>Legt fest, welche Bestandteile der Skala gezeichnet werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.ScaleAlign">
      <summary>Gibt die Schrittweite der Skalenwerte an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.ScaleSizeRatio">
      <summary>Legt das Größenverhältnis zwischen Rasterlinien und Skalenwerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.SizeRatio">
      <summary>Legt die Größe der Skala im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.TextAlign">
      <summary>Legt die Ausrichtung der Skalenwerte in der Skala fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.Unit">
      <summary>Bestimmt Aussehen und Inhalt des Bereiches, der den Einheitentext darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.UnitLayout">
      <summary>Legt fest, wo der Einheitentext in der Skala angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ControlScale.Visible">
      <summary>Legt fest, ob die Skala im Steuerelement sichtbar sein soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlScale.BeginInit">
      <summary>Leitet die Initialisierungsphase des Steuerelementes ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlScale.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlScale.EndInit">
      <summary>Beendet die Initialisierungsphase des Steuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ControlScale.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>In diesem Fall wird eine leere Zeichenkette zurückgegeben</returns>
    </member>
    <member name="E:VisiWinNET.Forms.ControlScale.ViewChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft der Klasse geändert hat</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ControlScale', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeIn">
      <summary>Steuerelement, dass die Eingabe von (sprachabhängig) formatierten Eingaben von Datums-/Zeitwerten ermöglicht</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeIn.#ctor">
      <summary>Erzeugt eine neue Instanz der 'DateTimeIn'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.BackColor">
      <summary>Legt die Hintergrundfarbe im Steuerelemenet fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.BackColorButton">
      <summary>Legt die Hintergrundfarbe der Schaltflächen im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.ButtonPosition">
      <summary>Legt fest, wo die Schltflächen im Steuerelement dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.ButtonWidth">
      <summary>Legt die Breite der Schaltflächen im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.DateTimeFormat">
      <summary>Legt das Format der Datums-/Zeitwerte im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.EditableValue">
      <summary>Gibt den Wert während des Editierens zurück, wenn eine entkoppelte Eingabe über 'EditControl' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.EditControl">
      <summary>Legt fest, wann die Eingaben im Steuerelement als geändert gemeldet werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.ForeColor">
      <summary>Legt die Schriftfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.ForeColorButton">
      <summary>Legt die Textfarbe der Schaltflächen im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.LeftRightStyle">
      <summary>Legt die Anordnung der Schaltflächen fest, die zum Verschieben der Eingabemarke im Steuerelement dienen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.ShowEnter">
      <summary>Legt fest, ob die Schaltfläche zum Bestätigen der Eingaben im Steuerelement angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.ShowLeftRight">
      <summary>Legt fest, ob die Schaltflächen zum Verschieben der Eingabemarke im Steuerelement angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.ShowUpDown">
      <summary>Legt fest, ob die Schaltflächen zum inkrementieren/dekrementieren der einzelnen Datums-/Zeitangaben angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.TextAlign">
      <summary>Legt die Textausrichtung im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.TimeSettings">
      <summary>Legt fest, wie der Wert bei gedrückter Up-/Down-Schaltfläche geändert wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.UpDownStyle">
      <summary>Legt die Anordnung der Schaltflächen fest, die zum inkrementieren/dekrementieren der Datums-/Zeitangaben im Steuerelement dienen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.Value">
      <summary>Legt den Wert der Datums-/Zeitangabe fest, der im Steuerelement zum Bearbeiten angezeigt wird </summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeIn.VWItem">
      <summary>Legt die Variable vom Datentyp VT_DATE fest, deren Wert im Steuerelement angezeigt oder geschrieben werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeIn.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeIn.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeIn.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeIn.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeIn.StopEdit(System.Boolean)">
      <summary>Beendet die Eingabe</summary>
      <param name="transmitEditResult">True: Der Wert wird geschriebenFalse: Die Eingabe wird verworfen. Der Wert aus dem Variablenkern wird wieder in die Anzeige geladen</param>
    </member>
    <member name="E:VisiWinNET.Forms.DateTimeIn.Change">
      <summary>Wird ausgelöst, wenn sich der Datums-/Zeitwert im Steuerelement ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'DateTimeIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DateTimeInChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.DateTimeIn.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des  Steuerelementes verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'DateTimeIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.DateTimeIn.VerifyEditValue">
      <summary>Ereignis zur Überprüfung des Eingabewertes</summary>
      <param name="sender">Angabe des Objektes vom Typ 'DateTimeIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DateTimeInVerifyEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeInChangeEventArgs">
      <summary>Stellt Daten für das 'Change'-Ereignis bereit</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeInChangeEventArgs.#ctor(System.DateTime,System.DateTime)">
      <summary>Erzeugt eine neue Instanz der 'DateTimeInChangeEventArgs'-Klasse.</summary>
      <param name="val">Wert der Eigenschaft 'Value'</param>
      <param name="previousVal">Wert der Eigenschaft 'PreviousValue'</param>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInChangeEventArgs.PreviousValue">
      <summary>Gibt die Datums-/Zeitangabe vor dem Bearbeiten zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInChangeEventArgs.Value">
      <summary>Gibt die Datums-/Zeitangabe nach dem Bearbeiten zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeInProperties">
      <summary>Kapselt die Eigenschaften eines DateTimeIn-Steuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeInProperties.#ctor(System.Windows.Forms.Control,VisiWinNET.Forms.DateTimeIn)">
      <summary>Initialisiert eine neue Instanz der 'DateTimeInProperties'-Klasse unter Angabe der Verweise auf das DateTimeIn-Steuerelement und dessen Container.</summary>
      <param name="parent">Der Container, also das Steuerelement, das ein DateTimeIn Steuerelemente enthält, dessen Eigenschaften über diese Instanz parametriert werden.</param>
      <param name="dateTimeIn">Das enthaltene, zu parametrierende DateTimeIn-Steuerelement.</param>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.BackColor">
      <summary>Ruft die Hintergrundfarbe für das Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.DateTimeFormat">
      <summary>Legt das Format der Datums-/Zeitwerte im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.ForeColor">
      <summary>Ruft die Schriftfarbe des Steuerelements ab oder legt diese fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.LeftRightStyle">
      <summary>Legt die Anordnung der Schaltflächen fest, die zum Verschieben der Eingabemarke im Steuerelement dienen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.ShowEnter">
      <summary>Legt fest, ob die Schaltfläche zum Bestätigen der Eingaben im Steuerelement angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.ShowLeftRight">
      <summary>Legt fest, ob die Schaltflächen zum Verschieben der Eingabemarke im Steuerelement angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.ShowUpDown">
      <summary>Legt fest, ob die Schaltflächen zum inkrementieren/dekrementieren der einzelnen Datums-/Zeitangaben angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.UpDownStyle">
      <summary>Legt die Anordnung der Schaltflächen fest, die zum inkrementieren/dekrementieren der Datums-/Zeitangaben im Steuerelement dienen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInProperties.Value">
      <summary>Legt den Wert der Datums-/Zeitangabe fest, der im Steuerelement zum Bearbeiten angezeigt wird </summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeInVerifyEditValueEventArgs">
      <summary>Stellt Daten für das 'VerifyEditValue'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeInVerifyEditValueEventArgs.#ctor(System.Boolean,System.DateTime)">
      <summary>Erzeugt eine neue Instanz der 'DateTimeInVerifyEditValueEventArgs'-Klasse.</summary>
      <param name="cancel">Wert der Eigenschaft 'Cancel'</param>
      <param name="editedValue">Wert der Eigenschaft 'EditedValue'</param>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInVerifyEditValueEventArgs.Cancel">
      <summary>Bricht den Schreibvorgang ab</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeInVerifyEditValueEventArgs.EditedValue">
      <summary>Gibt den Wert zurück, der im Steuerelement eingegeben wurde</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeOut">
      <summary>Steuerelement zur Ausgabe von Datum und Uhrzeit</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeOut.#ctor">
      <summary>Erzeugt eine neue Instanz der 'DateTimeOut'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.DateTimeFormat">
      <summary>Legt das Format der Datums-/Zeitangabe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.Mode">
      <summary>Legt fest, welcher Datums-/Uhrzeit-Wert im Steuerelement dargestellt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.Value">
      <summary>Legt den Wert fest, der im Steuerelement angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.VWItem">
      <summary>Anbindung an eine Prozessvariable</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeOut.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeOut.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeOut.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeOut.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.DateTimeOut.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariablen ändert.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'ChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.DateTimeOut.ValueChanged">
      <summary>Wird ausgelöst, wenn sich der angezeigte Wert ändert.

</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'ValueChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeOut.ValueChangedEventArgs">
      <summary>Stellt Daten für das DateTimeOut.ValueChanged-Ereignis bereit.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.DateTimeOut.ValueChangedEventArgs.#ctor(System.DateTime,System.DateTime)">
      <summary>Erzeugt eine neue Instanz der 'DateTimeOut.ValueChangedEventArgs'-Klasse</summary>
      <param name="value">Neu anzuzeigender Wert.</param>
      <param name="previousValue">Zuletzt angezeigter Wert.</param>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.ValueChangedEventArgs.PreviousValue">
      <summary>Gibt den zuletzt angezeigten Wert zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.DateTimeOut.ValueChangedEventArgs.Value">
      <summary>Gibt den neu anzuzeigenden Wert zurück.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DigitalItemEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.EnumBinding">
      <summary>Kapselt die Informationen zur Bindung einer Steuerelementeeigenschaft an einen Prozessvariablenwert,. Der Datentyp der Eigenschaft muss dabei ein Aufzählungstyp sein. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.DataAccess.DigitalItem,VisiWinNET.Forms.PropertyBinding.EnumList)">
      <summary>Initialisiert eine neue Instanz der 'EnumBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="vwItemfault">Wert für die 'VWItemFault'-Eigenschaft</param>
      <param name="enumList">Wert für die 'EnumList'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der 'EnumBinding'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der 'EnumBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="enumType">Aufzählungstyp</param>
    </member>
    <member name="P:VisiWinNET.Forms.EnumBinding.EnumList">
      <summary>Legt eine 'EnumList'-Komponente fest, die die Zuordnung von Aufzählungselementen zu Prozessvariablenwerten definiert. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.EnumBinding.Value">
      <summary>Legt den zum Prozesvariablenwert zugeordneten Eigenschaftenwert fest oder gibt ihn zurück

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.EnumBinding.VWItem">
      <summary>Auswahl einer Prozessvariablen, deren Wert mit der gewählten Eigenschaft verknüpft wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.EnumBinding.VWItemFault">
      <summary>Legt eine zweite Variable fest, deren Wert eine zusätzliche Auswahl aus den Werten einer 'EnumList'-Komponente erlaubt. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft  enthält</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.EnumBinding.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="T:VisiWinNET.Forms.EnumerableForms">
      <summary>Auflistung der Formulare, die zur Zeit geladen sind</summary>
    </member>
    <member name="P:VisiWinNET.Forms.EnumerableForms.Count">
      <summary>Gibt die Anzahl der Elemente in der Auflistung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.EnumerableForms.Item(System.String)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="name">Angabe des zu lesenden Elementes über den Formularnamen</param>
    </member>
    <member name="M:VisiWinNET.Forms.EnumerableForms.GetEnumerator">
      <summary>Gibt einen Verweis auf eine IEnumerator-Schnittstelle aus, die Zugriff auf die Elemente einer Auflistung (Enumeration) gewährleistet. </summary>
      <returns>Ein Objekt vom Typ System.Collections.IEnumerator, dass alle 'Form'-Objekte enthält</returns>
    </member>
    <member name="T:VisiWinNET.Forms.EventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.EventAgentCollection">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ExtendedSlider">
      <summary>Steuerelement, dass einen Schieberegler mit Hintergrund darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ExtendedSlider.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ExtendedSlider'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.AcceptControlKeys">
      <summary>Legt fest, ob der Schieberegler über die Navigationstasten (Pfeil hoch/runter/links/rechts) zu bedienen ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.Direction">
      <summary>Legt die Bewegungsrichtung des Schiebereglers fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.EditControl">
      <summary>Legt fest, ob das Steuerelement direkt auf die angeschlossene Prozessvariable schreibt oder ob eine Editierkopie angelegt wird, die erst durch eine weitere Aktion (Bedienung der Enter-Taste) in die Prozessdatenbank übernommen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.FocusRect">
      <summary>Legt fest, ob die Eingabemarke (Fokus) durch ein gestricheltes Rechteck innerhalb des Steuerelementes angezeigt werden soll.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.Image">
      <summary>Legt die Grafik auf dem Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.ImageDisabled">
      <summary>Legt die Grafik für den Status "deaktiviert" fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.ImageSizeMode">
      <summary>Legt fest, wie sich die Größe von Steuerelement und Grafik beim Laden eines neuen Bildes aneinander anpassen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.InnerMargin">
      <summary>Legt einen Abstand zwischen Skalenenden und Steuerelementeabmessungen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.KeyChange">
      <summary>Legt die Schrittweite der Wertänderung fest, wenn das Steuerelement über die Tastatur bedient wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.Label">
      <summary>Ermöglicht die Darstellung eines Textes im Steuerelement</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.LabelPosition">
      <summary>Legt fest, wo der beschreibende Text im Steuerelement eingeblendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.MaxValue">
      <summary>Legt den Wert fest, bei dem der Schieberegler den maximalen Ausschlag zeigt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.MinValue">
      <summary>Legt den Wert fest, bei dem der Schieberegler an der ursprünglichen Position angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.MouseChange">
      <summary>Legt die Schrittweite der Wertänderung fest, wenn das Steuerelement über die Maus bedient wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.MouseWrite">
      <summary>Legt fest, wann der Wert in die angebundene Prozessvariable geschrieben wird, wenn das Steuerelement über die Maus bedient wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.Padding">
      <summary>Legt den Abstand zwischen Schieberegler und Skala (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.RestoreOnLostFocus">
      <summary>Legt fest, ob die Schiebereglerposition zurückgestellt werden soll, wenn das Steuerelement die Eingabemarke verliert, ohne dass die Eingabe über die Enter-Taste beendet wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.Scale">
      <summary>Legt die Darstellung der Skala im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.ScalePosition">
      <summary>Legt die Position der Skala im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.SliderSize">
      <summary>Die Eigenschaft 'SliderSize' legt die Größe ( Bei vertikaler Ausrichtung die Höhe, bei horizontaler Ausrichtung die Breite) des Schiebereglerknopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.SliderStyle">
      <summary>Legt die grafische Oberfläche des Schiebereglerknopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.UseItemUnit">
      <summary>Legt fest, ob als Einheitentext der Text der aktiven Einheitenumrechnung angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.ValueDirection">
      <summary>Legt die Richtung der Anzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ExtendedSlider.VWItem">
      <summary>Legt die Prozessvariable fest, die die Verschiebung des Schiebereglers bewirkt oder deren Wert durch die Bewegung des Schiebereglers manipuliert wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ExtendedSlider.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ExtendedSlider.Decrement(System.Double)">
      <summary>Setzt den Wert des Schiebereglers um den vorgegebenen Wert runter</summary>
      <param name="value">zu dekrementierender Wert</param>
    </member>
    <member name="M:VisiWinNET.Forms.ExtendedSlider.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ExtendedSlider.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ExtendedSlider.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ExtendedSlider.Increment(System.Double)">
      <summary>Setzt den Wert des Schiebereglers um den vorgegebenen Wert hoch</summary>
      <param name="value">zu inkrementierender Wert</param>
    </member>
    <member name="E:VisiWinNET.Forms.ExtendedSlider.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariablen ändert
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ExtendedSlider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ExtendedSlider.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des Steuerelementes verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ExtendedSlider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ExtendedSlider.EditStateChange">
      <summary>Wird ausgelöst, wenn das Objekt über 'StartEdit' oder 'StopEdit' den Editierstatus ändert
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ExtendedSlider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EditStateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ExtendedSlider.MaxValueChange">
      <summary>Wird ausgelöst, wenn sich der maximal anzuzeigende Wert (Eigenschaft 'MaxValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ExtendedSlider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogValueChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ExtendedSlider.MinValueChange">
      <summary>Wird ausgelöst, wenn sich der minimal anzuzeigende Wert (Eigenschaft 'MinValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ExtendedSlider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogValueChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ExtendedSlider.Scroll">
      <summary>Wird ausgelöst, wenn der Schieberegler durch Benutzereingaben bewegt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ExtendedSlider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'SliderScrollEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ExtendedSlider.VerifyEditValue">
      <summary>Wird nach dem Aufruf der Methode 'StopEdit' und vor dem Herunterschreiben in den Variablenkern ausgelöst
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ExtendedSlider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VerifyAnalogEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.FormChangedEventArgs">
      <summary>Stellt Daten für das FormChanged-Ereignis zur Verfügung.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.FormChangedEventArgs.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Erzeugt eine neue Instanz der 'FormChangedEventArgs'-Klasse</summary>
      <param name="previousForm">Name des Formulars, das vor dem Wechsel angezeigt wurde.</param>
      <param name="canForward">Gibt an, ob über die 'Forward'-Methode zu einem anderen Formular vorgeblättert werden kann.</param>
      <param name="canBack">Gibt an, ob über die 'Back'-Methode zu einem anderen Formular zurückgeblättert werden kann.</param>
    </member>
    <member name="P:VisiWinNET.Forms.FormChangedEventArgs.CanBack">
      <summary>Gibt zurück, ob über die 'ProjectForms.Back'-Methode zu einem anderen Formular zurückgeblättert werden kann.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.FormChangedEventArgs.CanForward">
      <summary>Gibt zurück, ob über die 'ProjectForms.Forward'-Methode zu einem anderen Formular vorgeblättert werden kann.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.FormChangedEventArgs.PreviousForm">
      <summary>Gibt den Namen des Formulars an, das vor dem Wechsel angezeigt wurde.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.FormChangingEventArgs">
      <summary>Stellt Daten für das FormChanging-Ereignis zur Verfügung.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.FormChangingEventArgs.#ctor(System.String)">
      <summary>Erzeugt eine neue Instanz der 'FormChangingEventArgs'-Klasse</summary>
      <param name="newForm">Name des Formulars, das neu angezeigt werden soll.</param>
    </member>
    <member name="P:VisiWinNET.Forms.FormChangingEventArgs.Cancel">
      <summary>Legt fest, ob der Formularwechsel abgebrochen werden soll.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.FormChangingEventArgs.NewForm">
      <summary>Gibt den Namen des Formulars an, das neu angezeigt werden soll.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.FormEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GroupBox">
      <summary>Steuerelement, das einen Gruppenfeld darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GroupBox.#ctor">
      <summary>Initialisiert eine neue Instanz der 'GroupBox'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GroupBox.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GroupBox.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GroupBox.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GroupBox.LocalizedText">
      <summary>Legt den auf dem Steuerelement angezeigten festen oder sprachgesteuerten Text fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GroupBox.Text">
      <summary>Legt den im Steuerelement anzuzeigenden festen Text fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GroupBox.TextAlign">
      <summary>Legt fest, wo der in der 'Text'-Eigenschaft angegebene Text im Steuerelement platziert wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GroupBox.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GroupBox.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab.
</summary>
    </member>
    <member name="E:VisiWinNET.Forms.GroupBox.PaintBackground">
      <summary>Wird ausgelöst, wenn der Hintergrund des Steuerelementes gezeichnet wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ PaintEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.GuiConfiguration">
      <summary>Unterstützt Funktionen, die ohne Client in der Applikation zur Verfügung stehen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GuiConfiguration.#ctor">
      <summary>Initialisiert eine neue Instanz der 'GuiConfiguration'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GuiConfiguration.Initialize(System.Reflection.Assembly)">
      <summary>Die Methode 'Initialize' initialisiert das Objekt.</summary>
      <param name="assembly">Angabe des Assemblynamens (Nur für "Compact"-Produktvariante)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GuiConfiguration.Initialize">
      <summary>Die Methode 'Initialize' initialisiert das Objekt.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Header">
      <summary>Kapselt die Funktion eines Tabellen- oder Listenkopfes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Header.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Header'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.Alignment">
      <summary>Legt die Ausrichtung der Inhalte für alle Spalten im Steuerelement gemeinsam fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.AutoHeight">
      <summary>Legt fest, ob sich die Höhe des Tabellen-/ Listenkopfes automatisch an seinen Inhalt anpasst.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.BackColor">
      <summary>Legt die Hintergrundfarbe des Tabellenkopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.Font">
      <summary>Legt die Schriftart im Tabellenkopf fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.ForeColor">
      <summary>Legt die Schriftfarbe des Tabellenkopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.Height">
      <summary>Legt die Höhe des Tabellenkopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.Left">
      <summary>Legt die horizontale Position des Tabellenkopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.Resizable">
      <summary>Legt fest, ob die Spaltenbreiten zur Laufzeit über Mausbedienung verändert werden können</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.Top">
      <summary>Legt die vertikale Position des Tabellenkopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.UseHeaderAlignment">
      <summary>Legt fest, ob die in 'Alignment' vorgenommene Eigenschaft eine Funktion hat</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Header.Visible">
      <summary>Legt fest, ob der Tabellenkopf sichtbar sein soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Header.ContentEquals(VisiWinNET.Forms.Header)">
      <summary>Gibt zurück, ob die Eigenschaftenwerte des Objektes mit denen eines Vergleichsobjektes identisch sind.
</summary>
      <returns>True: Die Eigenschaftenwerte sind identisch, ansonsten false.</returns>
      <param name="other">Das Vergleichsobjekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Header.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Header.GetHeight">
      <summary>Gibt die aus dem Inhalt errechnete Höhe des Objektes zurück.</summary>
      <returns>Die errechnete Höhe.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Header.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Ein Wert der die Einstellungen des Header im Eigenschaftenfenster repräsentiert</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Header.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert und dadurch ein erneutes Auslesen/ Auswerten notwendig wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Header.ViewChanged">
      <summary>Wird ausgelöst, wenn sich Informationen im Objekt ändern, die im Steuerelement angezeigt werden</summary>
      <param name="sender">Header-Objekt, das das Ereignis auslöst</param>
      <param name="e">keine weiteren Informationen</param>
    </member>
    <member name="T:VisiWinNET.Forms.ImageBinding">
      <summary>Kapselt die Informationen zur Bindung einer Steuerelementeeigenschaft an einen Prozessvariablenwert,. Der Datentyp der Eigenschaft muss dabei ein 'Image' sein. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.DataAccess.DigitalItem,VisiWinNET.Forms.ImageCollection)">
      <summary>Initialisiert eine neue Instanz der 'ImageBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="vwItemfault">Wert für die 'VWItemFault'-Eigenschaft</param>
      <param name="images">Wert für die 'Images'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.DataAccess.DigitalItem,VisiWinNET.Forms.PropertyBinding.ImageList)">
      <summary>Initialisiert eine neue Instanz der 'ImageBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="vwItemfault">Wert für die 'VWItemFault'-Eigenschaft</param>
      <param name="imageList">Wert für die 'ImageList'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'ImageBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ImageBinding'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ImageBinding.ImageList">
      <summary>Legt eine 'ImageList'-Komponente fest, die (alternativ zur Verwendung der 'Images'-Eigenschaft) die Zuordnung von Grafiken zu Prozessvariablenwerten definiert. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ImageBinding.Images">
      <summary>Beschreibt eine Liste von Grafiken</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ImageBinding.Value">
      <summary>Legt den zum Prozesvariablenwert zugeordneten Eigenschaftenwert fest oder gibt ihn zurück

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ImageBinding.VWItem">
      <summary>Auswahl einer Prozessvariablen, deren Wert mit der gewählten Eigenschaft verknüpft wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ImageBinding.VWItemFault">
      <summary>Legt eine zweite Variable fest, deren Wert eine zusätzliche Auswahl aus den Bildern einer 'ImageList'-Komponente erlaubt. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft enthält
</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.ImageBinding.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="T:VisiWinNET.Forms.ImageCollection">
      <summary>Auflistung von Grafiken, die den einzelnen Zuständen zugeordnet sind</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageCollection.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ImageCollection'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageCollection.#ctor(System.Drawing.Image[])">
      <summary>Erzeugt eine neue Instanz der 'ImageCollection'-Klasse. </summary>
      <param name="images">Feld vom Datentyp Image, das die in der Liste enthaltenen Bilddaten beinhaltet</param>
    </member>
    <member name="P:VisiWinNET.Forms.ImageCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Elementes innerhalb der Auflistung</param>
    </member>
    <member name="M:VisiWinNET.Forms.ImageCollection.Add(System.Drawing.Image)">
      <summary>Fügt der Auflistung eine neue Grafik hinzu</summary>
      <param name="image">Objekt vom Typ 'System.Drawing.Image', das die Grafik enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ImageCollection.AddRange(System.Drawing.Image[])">
      <summary>Fügt der Auflistung mehrere Grafiken hinzu</summary>
      <param name="images">Feld von Objekten des Typs 'System.Drawing.Image', das die hinzuzufügenden Grafiken enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ImageCollection.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ImageCollection.ToArray">
      <summary>Konvertiert den Inhalt der Liste zu einem Feld</summary>
      <returns>Feld vom Datentyp Image, das die in der Liste enthaltenen Bilddaten beinhaltet</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ImageCollection.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Ein Text, der die Einstellungen des Objektes beschreibt </returns>
    </member>
    <member name="E:VisiWinNET.Forms.ImageCollection.CollectionChanged">
      <summary>Wird ausgelöst, nachdem eine Änderung in den Elementen der Auflistung vorgenommen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ImageCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Angabe des Elementeindex. Der Index kann dazu verwendet werden, über die Item-Eigenschaft auf die neuen Werte des Elementes zuzugreifen.</param>
    </member>
    <member name="T:VisiWinNET.Forms.InputControlEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ItemEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ItemServer">
      <summary>Komponente zum Zugriff auf einen Prozesswert ohne bestimmte Interpretation</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ItemServer'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.#ctor(System.ComponentModel.IContainer)">
      <summary>Erzeugt eine neue Instanz der 'ItemServer'-Klasse.</summary>
      <param name="container">Containerobjekt, auf dem die Komponente liegen soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.ItemServer.Events">
      <summary>Verknüpft die Ereignisse der Komponente mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ItemServer.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ItemServer.VWItem">
      <summary>Anbindung an die Prozessdatenbank
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ItemServer.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.ItemServer.Change">
      <summary>Wird ausgelöst, wenn der Wert im Variablenkern geändert wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ItemServer', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Key">
      <summary>Steuerelement, das eine Schaltfläche darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Key.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Key'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.BackColorDown">
      <summary>Legt die Hintergrundfarbe des Steuerelementes im gedrückten Zustand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.BackColorOn">
      <summary>Legt die Hintergrundfarbe fest, die verwendet wird, wenn die in 'VWItemMonitor' angegebene Prozessvariable den Wert '1' annimmt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.EditControl">
      <summary>Bestimmt, ob das Steuerelement direkt auf die angeschlossene Prozessvariable schreibt oder ob eine Editierkopie angelegt wird, die erst durch eine weitere Aktion (Methodenaufruf 'StopEdit') in die Prozessdatenbank übernommen wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.ForeColorDown">
      <summary>Legt die Schriftfarbe des Steuerelementes im gedrückten Zustand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.ForeColorOn">
      <summary>Legt die Vordergrundfarbe (Textfarbe) fest, die verwendet wird, wenn die in 'VWItemMonitor' angegebene Prozessvariable den Wert '1' annimmt.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.ImageDisabledOn">
      <summary>Legt die Grafik fest, die angezeigt wird, wenn die angebundene Prozessvariable den Wert 'True' hat und das Steuerelement deaktiv ist (Enabled = 'False').
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.ImageOn">
      <summary>Legt die Grafik fest, die verwendet wird, wenn die in 'VWItemMonitor' angegebene Prozessvariable den Wert '1' annimmt.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.MonitorLED">
      <summary>Zugriff auf ein Objekt, das als Kontroll-LED in der oberen linken Ecke des Steuerelementes dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.OffsetText">
      <summary>Legt fest, ob bei gedrückter Taste der Text um jeweils ein Pixel nach unten und rechts gerückt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.SetMode">
      <summary>Legt fest, wie die angebundene Prozessvariable bei Bedienung beeinflusst wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Key.VWItemMonitor">
      <summary>Legt die Prozessvariable fest, die für die Monitorfunktion genutzt wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Key.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Key.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Key.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Key.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Key.StartEdit">
      <summary>Startet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Key.StopEdit(System.Boolean)">
      <summary>Beendet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
      <param name="transmitEditResult">True: Der Wert der Editierkopie wird zum Variablenkern übertragenFalse: Der Wert der Editierkopie wird verworfen. Der aktuelle Variablenwert aus dem Variablenkern wird in das Steuerelement zurückgeladen.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Key.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des Steuerelementes verändert wird. 
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Key', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Key.ChangeMonitor">
      <summary>Meldet die Änderung der über 'VWItemMonitor' festgelegten Variablen</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Key', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Key.VerifyEditValue">
      <summary>Wird nach dem Aufruf der Methode 'StopEdit' und vor dem Herunterschreiben in den Variablenkern ausgelöst</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Key', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VerifyDigitalEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Label">
      <summary>Steuerelement, das einen Text (fest, variablenwertbezogen und/oder sprachumgeschaltet) darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Label.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Label'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.BackColorOn">
      <summary>Legt die Hintergrundfarbe für den Zustand "&lt;&gt;0" fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.ForeColorOn">
      <summary>Legt die Schriftfarbe für den Zustand "&lt;&gt;0" fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.LocalizedText">
      <summary>Legt den auf dem Steuerelement angezeigten festen, sprach- oder variablengesteuerten Text fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.Text">
      <summary>Legt den im Steuerelement anzuzeigenden festen Text fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.UseItemText">
      <summary>Legt fest, dass das Steuerelement nur den zur angebundenen Prozessvariablen festgelegten sprachumschaltbaren Text anzeigen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Label.VWItem">
      <summary>Legt die Prozessvariable fest, deren Wertänderung die Auswahl des anzuzeigenden Textes ändert oder deren sprachumschaltbarer Text im Steuerelement dargestellt werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Label.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Label.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Label.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariable ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Label', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Language">
      <summary>Komponente zur Steuerung der Sprache in der Applikation</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Language.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Language'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Language.#ctor(System.ComponentModel.IContainer)">
      <summary>Erzeugt eine neue Instanz der 'Language'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Language.Culture">
      <summary>Ermöglicht den Zugriff auf die systemabhängigen Informationen der aktuell eingestellten Applikationssprache</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Language.LCID">
      <summary>Legt die eindeutige Kennung (locale Identifier) einer Sprache fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Language.ProjectLanguages">
      <summary>Gibt als Auflistung die im Projekt vorhandenen Sprachen zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Language.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Language.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Language.GetFont(System.String)">
      <summary>Gibt die Schriftart zurück, die in der angegeben Fontklasse für die aktuelle Sprache festgelegt wurde</summary>
      <returns>Objekt, das die angeforderten Schriftarteninformationen enthält</returns>
      <param name="fontClass">Name der Fontklasse</param>
    </member>
    <member name="M:VisiWinNET.Forms.Language.GetText(VisiWinNET.LanguageSwitching.TextTypes,System.String)">
      <summary>Fragt einen Indextext in der aktuell im Projekt eingestellten Sprache ab</summary>
      <returns>Die Rückgabe enthält den abgefragten Text in der aktuell in der Applikation eingestellten Sprache</returns>
      <param name="textType">Der hier übergebene Wert legt fest, wo der Text gesucht wird. In einer Client-Server-Applikation kann ein Text sowohl client- als auch serverseitig projektiert sein. ...System und ...Applikation unterscheiden zwischen den Zweigen "Komponenten"/"Dialoge" und Benutzertexte" der Sprachumschaltung.</param>
      <param name="name">Name des Indextextes. Als Name wird der vollständige Bezeichner über alle Indextextgruppen (ähnlich einer Pfadangabe) bis zum Namen des Indextextes erwartet. Dabei werden die angegebenen Namen jeweils durch einen Punkt voneinander getrennt. </param>
    </member>
    <member name="M:VisiWinNET.Forms.Language.GetText(System.String)">
      <summary>Fragt einen Indextext in der aktuell im Projekt eingestellten Sprache ab</summary>
      <returns>Die Rückgabe enthält den abgefragten Text in der aktuell in der Applikation eingestellten Sprache</returns>
      <param name="name">Name des Indextextes. Als Name wird der vollständige Bezeichner über alle Indextextgruppen (ähnlich einer Pfadangabe) bis zum Namen des Indextextes erwartet. Dabei werden die angegebenen Namen jeweils durch einen Punkt voneinander getrennt. </param>
    </member>
    <member name="E:VisiWinNET.Forms.Language.LanguageChange">
      <summary>Meldet einen Wechsel der Applikationssprache</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Language', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ProjectLanguage.LanguageChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.LimitCollection">
      <summary>Auflistung von Wertebereichen einer Füllstandsanzeige</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LimitCollection.#ctor">
      <summary>Erzeugt eine neue Instanz der 'LimitCollection'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LimitCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Elementes, das zurückgegeben werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.LimitCollection.Add(VisiWinNET.Forms.LimitItem)">
      <summary>Fügt der Auflistung als letztes Element einen neuen Wertebereich hinzu</summary>
      <param name="limit">Objekt vom Typ 'LimitItem', das die Wertebereichseigenschaften enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.LimitCollection.AddRange(VisiWinNET.Forms.LimitItem[])">
      <summary>Fügt der Auflistung mehrere Wertebereiche hinzu</summary>
      <param name="limits">Feld von Objekten des Typs 'LimitItem', das die hinzuzufügenden Wertebereichseigenschaften enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.LimitCollection.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LimitCollection.Remove(VisiWinNET.Forms.LimitItem)">
      <summary>Löscht einen Wertebereich aus der Auflistung</summary>
      <param name="limit">Angabe des zu löschenden Wertebereiches über ein 'LimitItem'-Objekt.</param>
    </member>
    <member name="E:VisiWinNET.Forms.LimitCollection.CollectionChanged">
      <summary>Wird ausgelöst, nachdem eine Änderung in den Elementen der Auflistung vorgenommen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LimitCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Angabe des Listenelementes, das geändert wurde </param>
    </member>
    <member name="E:VisiWinNET.Forms.LimitCollection.ViewChanged">
      <summary>Wird ausgelöst, nachdem eine Änderung in den Elementen der Auflistung vorgenommen wurde, die ein Neuzeichnen eines Steuerelementes bewirkt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LimitCollection', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.LimitEventArgs">
      <summary>Stellt Daten für das 'Limit'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LimitEventArgs.#ctor(System.Double,System.Int32,System.Double)">
      <summary>Erzeugt eine neue Instanz der 'LimitEventArgs'-Klasse.</summary>
      <param name="dblValue">Wert, der in der Eigenschaft 'Value' angegeben werden soll</param>
      <param name="iDirection">Wert, der in der Eigenschaft 'Direction' angegeben werden soll</param>
      <param name="dblLimit">Wert, der in der Eigenschaft 'Limit' angegeben werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.LimitEventArgs.Direction">
      <summary>Gibt die Richtung an, in der die angegebene Wertebereichsgrenze überschritten wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LimitEventArgs.Limit">
      <summary>Gibt den Wert der Grenze an, die über-/unterschritten wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LimitEventArgs.Value">
      <summary>Gibt den Wert der Prozessvariable an, der die Über-/Unterschreitung des Grenzwertes verursachte</summary>
    </member>
    <member name="T:VisiWinNET.Forms.LimitItem">
      <summary>Legt einen Wertebereich in der Wertebereichsauflistung fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LimitItem.#ctor">
      <summary>Erzeugt eine neue Instanz der 'LimitItem'-Klasse</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LimitItem.#ctor(System.Double,System.Drawing.Color,System.Boolean,System.String)">
      <summary>Erzeugt eine neue Instanz der 'LimitItem'-Klasse</summary>
      <param name="val">Wert, der in der Eigenschaft 'Value' angegeben werden soll</param>
      <param name="clr">Wert, der in der Eigenschaft 'Color' angegeben werden soll</param>
      <param name="recipeMember">Wert, der in der Eigenschaft 'RecipeItem' angegeben werden soll</param>
      <param name="vwItem">Wert, der in der Eigenschaft 'VWItem' angegeben werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.LimitItem.Color">
      <summary>Definiert die Farbe für den Wertebereich</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LimitItem.VWItem">
      <summary>Gibt den Namen einer Prozessvariablen an, deren Wert als Eingabegrenze verwendet wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LimitItem.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Zeichenkette, die die Eigenschaftenwerte des 'LimitItem'-Objektes beschreibt, z.B.: "Limit = 6, Color [Red]"</returns>
    </member>
    <member name="E:VisiWinNET.Forms.LimitItem.ViewChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft der Klasse geändert hat</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LimitItem', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ListBox">
      <summary>Steuerelement, das ein Listenfeld darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ListBox'-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.BackColor">
      <summary>Legt die Hintergrundfarbe des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.BackColorSelected">
      <summary>Legt die Hintergrundfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.CurrentBackColor">
      <summary>Gibt die aktuelle Hintergrundfarbe des ListBox-Steuerelementes zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.CurrentBackColorSelected">
      <summary>Gibt die aktuelle Hintergrundfarbe des ListBox-Steuerelementes für ein selektiertes Listenelement zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.CurrentForeColor">
      <summary>Gibt die aktuelle Textfarbe des ListBox-Steuerelementes für ein selektiertes Listenelement zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.CurrentForeColorSelected">
      <summary>Gibt die aktuelle Textfarbe des ListBox-Steuerelementes für ein selektiertes Listenelement zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.FocusRect">
      <summary>Legt fest, ob um das zuletzt selektierte Element ein Markierungsrahmen gezeichnet wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.Font">
      <summary>Legt die Schriftart im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ForeColorSelected">
      <summary>Legt die Schriftfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.HorizontalScrollBar">
      <summary>Legt fest, ob eine horizontale Bildlaufleiste angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.IntegralHeight">
      <summary>Ruft einen Wert ab, der angibt, ob die Größe des Steuerelements automatisch so angepasst wird, dass keine Elemente abgeschnitten werden, oder legt diesen fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ItemHeight">
      <summary>Legt die minimale Höhe der Listenelemente fest oder gibt sie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.Items">
      <summary>Ermöglicht den Zugriff auf die Listenelemente des Steuerelementes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.Mode">
      <summary>Gibt an, ob die Listenelemente automatisch (aus den Texten der Sprachumschaltung) oder manuell (über die 'Add'-Methode der Items-Auflistung oder die AddItem-Methode des Steuerelementes) gefüllt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.Multiline">
      <summary>Legt fest, ob Feldinhalte, die mehrere Zeilen einnehmen, abgeschnitten werden.

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ScrollAlwaysVisible">
      <summary>Legt fest, ob die vertikale Bildlaufleiste immer sichtbar sein soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ScrollBarIsVisible">
      <summary>Gibt zurück, ob die Bildlaufleiste zur Zeit sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ScrollBarProperties">
      <summary>Legt fest, wie die Bildlaufleisten des Steuerelementes dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ScrollBarSize">
      <summary>Gibt die Breite der Bildlaufleiste (in Pixeln) an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ScrollBarStyle">
      <summary>Bestimmt das Aussehen der Bildlaufleisten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.SelectedIndex">
      <summary>Gibt den Index des selektierten Listenelementes an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.SelectedIndices">
      <summary>Gibt die Indizes der selektierten Listenelemente bei Mehrfachselektion an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.SelectionMode">
      <summary>Gibt an, wie Listenelemente vom Bediener selektiert werden können</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.Sorted">
      <summary>Legt fest, ob und wie die Listenelemente alphabetisch sortiert werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.Text">
      <summary>Gibt den Text des selektierten Elementes wieder</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.TextAlign">
      <summary>Legt die Textausrichtung der Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.TextGroup">
      <summary>Legt den vollständigen Bezeichner der Textgruppe aus der Sprachumschaltung fest, aus der die Texte geladen werden sollen.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.TextPrefix">
      <summary>Bestimmt einen Filter für einen Textbereich innerhalb einer Gruppe</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.TextType">
      <summary>Legt fest, wo die angegebenen Texte gesucht werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.ThumbActive">
      <summary>Legt fest, ob die Bedienung der Bildlaufleisten über Positionsleiste oder Positionierungszeiger erlaubt sind</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListBox.VWItem">
      <summary>Verbindet die Selektion im Steuerelement mit einem Prozesswert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.AddItem(System.Object)">
      <summary>Fügt der Elementeliste am Ende ein neues Element hinzu.</summary>
      <returns>True: Das Listenelement wurde hinzugefügt False: Das Hinzufügen schlug fehl</returns>
      <param name="value">Beachten Sie: Als textuelle Ausgabe wird implizit vom Steuerelement das Ergebnis der 'ToString'-Methode verwendet. </param>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.BeginUpdate">
      <summary>Unterdrückt das Neuzeichnen des Steuerelementes bis zum Aufruf von 'EndUpdate'
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.Clear">
      <summary>Löscht alle Listenelemente aus dem Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.ClearSelected">
      <summary>Setzt die Selektion zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.DeleteSelection">
      <summary>Löscht das selektierte Listenelement/ die selektierten Listenelemente.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.EndUpdate">
      <summary>Beendet das über 'BeginUpdate' ausgelöste Unterdrücken des Neuzeichnens</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.FindAndSelectValue(System.String,System.Boolean)">
      <summary>Selektiert/ deselektiert das Listenelement mit dem angegebenen Text</summary>
      <returns>Index des selektierten Elementes. Wird kein entsprechendes Element gefunden, wird der Wert "-1" zurückgegeben.</returns>
      <param name="s">Zeichenkette, nach der zu suchen ist</param>
      <param name="select">True: das Element soll selektiert werdenFalse: das Element soll deselektiert werden</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.GetSelected(System.Int32)">
      <summary>Gibt zurück, ob das angegebene Listenelement selektiert ist</summary>
      <returns>True: Das über Index angegebene Listenelement ist selektiert False: Das über Index angegebene Listenelement ist nicht selektiert</returns>
      <param name="index">Angabe des Index des Listenelementes, dessen Selektionszustand zurückgegeben werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.HasTooWideItems">
      <summary>Gibt zurück, ob ein oder mehrere Elemente zu breit für die Darstellung im Steuerelement sind.</summary>
      <returns>True: Ein oder mehrere Elemente benötigen mehr Platz, als durch die Breite des Steuerelementes vorgegeben ist.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.InsertItem(System.Int32,System.Object)">
      <summary>Fügt ein neues Listenelement ein</summary>
      <returns>True: Das Listenelement wurde hinzugefügt False: Das Hinzufügen schlug fehl</returns>
      <param name="index">Position des hinzuzufügenden Elementes. Die Position kann im Bereich von 0 bis zur Anzahl der Listenelemente sein.</param>
      <param name="value">Neu hinzuzufügendes Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.ScrollToIndex(System.Int32)">
      <summary>Führt einen Bildlauf zum angegebenen Element aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das angegebene Element wurde nicht gefunden.</returns>
      <param name="index">Angabe des Elementeindex, zu dem der Bildlauf erfolgen soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListBox.SetSelected(System.Int32,System.Boolean)">
      <summary>Selektiert/ deselektiert das angegebene Listenelement</summary>
      <param name="index">Index des zu selektierenden/deselektierenden Listenelementes</param>
      <param name="value">true: Element wird selektiert.false: Element wird deselekiert.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListBox.BitChange">
      <summary>Wird ausgelöst, wenn sich das über 'WatchedBitNo' festgelegte Bit in der Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListBox.Change">
      <summary>Wird ausgelöst, wenn sich der angebundene Prozessvariablenwert ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListBox.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des Steuerelementes verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListBox.SelectedIndexChanged">
      <summary>Wird ausgelöst, wenn sich der Selektionszustand im Steuerelement ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListBox.TextGroupChanged">
      <summary>Wird ausgelöst, nachdem sich der Wert der Eigenschaft 'TextGroup' geändert hat</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ListItem">
      <summary>Repräsentiert ein Listenelement aus der Ausflistung 'ListItemCollection'</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListItem.#ctor">
      <summary>Erzeugt ein neues Objekt der 'ListItem'-Klasse</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListItem.#ctor(System.Object,System.Int32,System.Drawing.Color,System.Drawing.Color)">
      <summary>Erzeugt ein neues Objekt der 'ListItem'-Klasse unter Angabe des darzustellenden Wertes, der Elementehöhe, der Hintergund- und der Vordergrundfarbe.
</summary>
      <param name="value">Darzustellender Elementewert.</param>
      <param name="height">Höhe des Elementes.</param>
      <param name="backColor">Hintergrundfarbe.</param>
      <param name="foreColor">Textfarbe.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItem.#ctor(System.Object)">
      <summary>Erzeugt ein neues Objekt der 'ListItem'-Klasse unter Angabe des darzustellenden Wertes.
</summary>
      <param name="value">Darzustellender Elementewert.</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.BackColor">
      <summary>legt die Hintergrundfarbe des Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.BackColorSelected">
      <summary>Legt die Hintergrundfarbe für Selected= 'True' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.DisplayText">
      <summary>Legt den anzuzeigenden Text für das Element fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.ForeColor">
      <summary>Legt die Schriftfarbe des Listenelementes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.ForeColorSelected">
      <summary>Legt die Schriftfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.Height">
      <summary>Legt die Höhe des Listenelementes fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.ItemHeight">
      <summary>Obsolet. Verwenden Sie stattdessen 'Height'.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.ListBox">
      <summary>Legt einen Verweis auf die IListBox-Schnittstelle fest, über die das Element Zugriff auf Einstellungen des Steuerelementes hat, in dem es enthalten ist.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.ScaledHeight">
      <summary>Gibt die Höhe des Elementes zurück, dessen Abmessungen über Form.Scale manipuliert wurde.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.Selected">
      <summary>Legt den Selektionszustand des Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.State">
      <summary>Legt den Wert fest, der bei 'Mode'= 'automatic' auf die 'VWItem.State'-Eigenschaft geschrieben wird, wenn das Element selektiert wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.Tag">
      <summary>Legt eine frei wählbare Zusatzinformation zum Listenelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.Text">
      <summary>Legt den Text des Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItem.Value">
      <summary>Legt das Element fest.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListItem.CompareTo(System.Object)">
      <summary>Vergleicht diese Instanz mit dem als obj übergebenen Objekt.</summary>
      <returns>&lt;0: Diese Instanz ist kleiner als obj.= 0: diese Instanz ist gleich obj.&gt; 0: diese Instanz ist größer als obj.</returns>
      <param name="obj">Objekt, mit dem verglichen wird.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListItem.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert und dadurch ein erneutes Auslesen/ Auswerten notwendig wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListItem.PropertyChanging">
      <summary>Wird ausgelöst, bevor der geänderte Wert einer Eigenschaft im Objekt übernommen wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangingEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ListItemCollection">
      <summary>Enthält die Listenelemente einer 'ListBox'/'Combobox'</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.#ctor">
      <summary>Erzeugt ein neues Objekt der 'ListItemCollection'-Klasse</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.#ctor(VisiWinNET.Forms.IListBox)">
      <summary>Erzeugt ein neues Objekt der 'ListItemCollection'-Klasse unter Angabe des Elternelementes, das die Liste beinhaltet.
</summary>
      <param name="parent">Das Elternelement.</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListItemCollection.BackColor">
      <summary>Legt die Hintergrundfarbe für alle Elemente der Auflistung gemeinsam fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItemCollection.BackColorSelected">
      <summary>Legt die Hintergrundfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItemCollection.ForeColor">
      <summary>Legt die Textfarbe für alle Elemente der Auflistung gemeinsam fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItemCollection.ForeColorSelected">
      <summary>Legt die Schriftfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListItemCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Listenelementes, das zurückgegeben werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListItemCollection.ItemHeight">
      <summary>Legt die minimale Höhe der Listenelemente fest oder gibt sie zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.Add(System.Object)">
      <summary>Fügt ein neues Listenelement am Ende der Liste an. 
</summary>
      <param name="value">Hinzuzufügendes Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.Add(System.Object,System.Object)">
      <summary>Fügt ein neues Listenelement am Ende der Liste an. 
</summary>
      <param name="value">Hinzuzufügendes Element.</param>
      <param name="tag">Ein beliebiges Objekt, das als Tag-Eigenschaft des 'ListItem'-Objektes gespeichert wird</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.Add(VisiWinNET.Forms.ListItem)">
      <summary>Fügt ein neues Listenelement am Ende der Liste an. 
</summary>
      <param name="listItem">Alternativ zum 'Item'-Parameter ein 'ListItem'-Objekt</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.AddRange(VisiWinNET.Forms.ListItem[])">
      <summary>Fügt der Auflistung mehrere Listenelemente hinzu. </summary>
      <param name="listItems">Feld von 'ListItem'-Objekten, das die neuen Listenelemente enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.AddRange(System.Object[])">
      <summary>Fügt der Auflistung mehrere Listenelemente hinzu. </summary>
      <param name="items">Feld von Strings, dass die Texte der neuen Listenelemente enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.IndexOf(VisiWinNET.Forms.ListItem)">
      <summary>Gibt den (0-idizierten) Listenindex des abgefragten Elementes zurück.</summary>
      <returns>Der Index des abgefragten Elementes oder -1, wenn das Element nicht in der Liste enthalten ist.</returns>
      <param name="item">Das Element, dessen Index zu ermitteln ist.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.Insert(System.Int32,System.Object,System.Object)">
      <summary>Die Methode 'Insert' fügt ein neues Listenelement ein. 
Dabei muss die 'Mode'-Eigenschaft des Listbox-Steuerelementes auf den Wert 'manual' eingestellt sein.</summary>
      <param name="index">Position des hinzuzufügenden Elementes. Die Position kann im Bereich von 0 bis zur Anzahl der Listenelemente sein.</param>
      <param name="value">Hinzuzufügendes Element.</param>
      <param name="tag">Ein beliebiges Objekt, das als Tag-Eigenschaft des 'ListItem'-Objektes gespeichert wird</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.Insert(System.Int32,VisiWinNET.Forms.ListItem)">
      <summary>Die Methode 'Insert' fügt ein neues Listenelement ein. 
Dabei muss die 'Mode'-Eigenschaft des Listbox-Steuerelementes auf den Wert 'manual' eingestellt sein.</summary>
      <param name="index">Position des hinzuzufügenden Elementes. Die Position kann im Bereich von 0 bis zur Anzahl der Listenelemente sein.</param>
      <param name="listItem">Alternativ zum 'Item'-Parameter ein 'ListItem'-Objekt</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.Insert(System.Int32,System.Object)">
      <summary>Die Methode 'Insert' fügt ein neues Listenelement ein. 
Dabei muss die 'Mode'-Eigenschaft des Listbox-Steuerelementes auf den Wert 'manual' eingestellt sein.</summary>
      <param name="index">Position des hinzuzufügenden Elementes. Die Position kann im Bereich von 0 bis zur Anzahl der Listenelemente sein.</param>
      <param name="value">Hinzuzufügendes Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.Remove(System.Object)">
      <summary>Löscht ein Listenelement aus der Auflistung</summary>
      <param name="listItem">Zu löschendes Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.RemoveAt(System.Int32)">
      <summary>Löscht ein Listenelementes anhand des Index</summary>
      <param name="index">Angabe des Index des zu löschenden Listenelementes. Die Angabe erfolgt "0"-indiziert, d.h. das erste Element wird über den Index "0" angesprochen.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListItemCollection.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Zeichenkette, die die aktuellen Einstellungen des Objektes beschreibt.</returns>
    </member>
    <member name="E:VisiWinNET.Forms.ListItemCollection.CollectionChanged">
      <summary>Meldet die Änderung eines Elementes in der Auflistung </summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListItemCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Index des geänderten Listenelementes </param>
    </member>
    <member name="E:VisiWinNET.Forms.ListItemCollection.CollectionCleared">
      <summary>Meldet das Löschen aller Elemente aus der Auflistung</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListItemCollection', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListItemCollection.ItemPropertyChanged">
      <summary>Wird ausgelöst, wenn ein Element der Liste ein PropertyChanged auslöst.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ListItemCollection.ItemPropertyChanging">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft in einem Element der Liste ändert.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangingEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ListView">
      <summary>Steuerelement, das ein mehrspaltiges Listenfeld darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListView.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListView'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListView.Columns">
      <summary>Gibt die Spalten des Listensteuerelementes als Auflistung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListView.Items">
      <summary>Gibt die Zeilen des Listensteuerelementes als Auflistung zurück
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListView.SelectedItem">
      <summary>Gibt die im Steuerelement selektierte Zeile zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListView.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListView.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="E:VisiWinNET.Forms.ListView.CellChanged">
      <summary>Wird ausgelöst, wenn sich der Inhalt des Steuerelementes durch eine Oberflächeninteraktion ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListView', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'CellChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewCheckBoxColumn">
      <summary>Beschreibt eine Spalte in einem Listensteuerelement, deren Feldwerte als Ja-/Nein-Werte über ein Kontrollkästchen dargestellt werden.

</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewCheckBoxColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean,System.Short,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewCheckBoxColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="editable">Die Werte der Spalte sollen durch Klicken auf die Kontrollkästchen änderbar sein</param>
      <param name="checkSize">Größe der Kontrollkästchen (in Pixeln)</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewCheckBoxColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean,System.Short)">
      <summary>Initialisiert eine neue Instanz der 'ListViewCheckBoxColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="editable">Die Werte der Spalte sollen durch Klicken auf die Kontrollkästchen änderbar sein</param>
      <param name="checkSize">Größe der Kontrollkästchen (in Pixeln)</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewCheckBoxColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean,System.Short)">
      <summary>Initialisiert eine neue Instanz der 'ListViewCheckBoxColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="editable">Die Werte der Spalte sollen durch Klicken auf die Kontrollkästchen änderbar sein</param>
      <param name="checkSize">Größe der Kontrollkästchen (in Pixeln)</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewCheckBoxColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean,System.Short,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewCheckBoxColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="editable">Die Werte der Spalte sollen durch Klicken auf die Kontrollkästchen änderbar sein</param>
      <param name="checkSize">Größe der Kontrollkästchen (in Pixeln)</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewCheckBoxColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewCheckBoxColumn'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewCheckBoxColumn.CheckSize">
      <summary>Legt die Größe der Kontrollkästchen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewCheckBoxColumn.Editable">
      <summary>Legt fest, ob die Werte in der als Kontrollkästchen dargestellten Spalte bearbeitet werden können</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewCheckBoxColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewCheckBoxColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewColumn">
      <summary>Bildet die Basisklasse für alle spezifischen Spaltentypen (Text, numerisch, ...) eines Listensteuerelementes
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewColumn'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewColumn.ColumnType">
      <summary>Gibt den spezifischen Spaltentyp zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt den Spaltentyp zurück</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewDateColumn">
      <summary>Beschreibt eine Spalte in einem Listensteuerelement, deren Feldwerte als Datums-Zeitwerte formatiert dargestellt werden.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der 'ListViewDateColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="dateFormat">Datumsformat für die Feldwerte als Zeichenkette </param>
      <param name="timeFormat">Zeitformat für die Feldwerte als Zeichenkette </param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewDateColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,VisiWinNET.LanguageSwitching.DateTimeFormat)">
      <summary>Initialisiert eine neue Instanz der 'ListViewDateColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="dtFormat">Angabe der Formatierung</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der 'ListViewDateColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="dateFormat">Datumsformat für die Feldwerte als Zeichenkette </param>
      <param name="timeFormat">Zeitformat für die Feldwerte als Zeichenkette </param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewDateColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="dateFormat">Datumsformat für die Feldwerte als Zeichenkette </param>
      <param name="timeFormat">Zeitformat für die Feldwerte als Zeichenkette </param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewDateColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizedHeaderText' verwendeten 'LocalizedText'-Objektes.</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizedHeaderText' verwendeten 'LocalizedText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist).</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizedHeaderText' verwendeten 'LocalizedText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="dateFormat">Datumsformat für die Feldwerte als Zeichenkette </param>
      <param name="timeFormat">Zeitformat für die Feldwerte als Zeichenkette </param>
      <param name="visible">True: Die Spalte wird sichtbar.False: Die Spalte wird ausgeblendet.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.String,System.String,VisiWinNET.LanguageSwitching.DateTimeMode,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewDateColumn'-Klasse.
</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizedHeaderText' verwendeten 'LocalizedText'-Objektes.</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizedHeaderText' verwendeten 'LocalizedText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist).</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizedHeaderText' verwendeten 'LocalizedText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="dateFormat">Datumsformat für die Feldwerte als Zeichenkette </param>
      <param name="timeFormat">Zeitformat für die Feldwerte als Zeichenkette </param>
      <param name="dateTimeMode">Bestimmt die Reihenfolge und Sichtbarkeit von Datum und Uhrzeit.</param>
      <param name="visible">True: Die Spalte wird sichtbar.False: Die Spalte wird ausgeblendet.</param>
      <param name="useColumnDateTimeFormat">Wert für die Eigenschaft 'UseColumnDateTimeFormat'.</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewDateColumn.DateTimeFormat">
      <summary>Legt das Datums-/Zeitformat fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewDateColumn.UseColumnDateTimeFormat">
      <summary>Legt fest, ob die Datums-/ Zeitformatierungsangaben aus der ListViewDateColumn-Instanz oder aus dem Steuerelement verwendet werden sollen.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewDateColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewImageColumn">
      <summary>Beschreibt eine Spalte in einem Listensteuerelement, deren Feldwerte als Grafiken formatiert dargestellt werden.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewImageColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewImageColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können. In diesem Fall wird die Spalte nach den Dateinamen der angegeben Grafiken sortiert.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewImageColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewImageColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können. In diesem Fall wird die Spalte nach den Dateinamen der angegeben Grafiken sortiert.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewImageColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewImageColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können. In diesem Fall wird die Spalte nach den Dateinamen der angegeben Grafiken sortiert.</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewImageColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewImageColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können. In diesem Fall wird die Spalte nach den Dateinamen der angegeben Grafiken sortiert.</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewImageColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewImageColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewImageColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewItem">
      <summary>Kapselt die Eigenschaften einer Zeile in einem 'ListView'-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItem.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewItem'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItem.#ctor(System.Object[])">
      <summary>Initialisiert eine neue Instanz der 'ListViewItem'-Klasse.</summary>
      <param name="list">Angabe der einzelnen Feldwerte als Feld.</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItem.SubItems">
      <summary>Erlaubt den Zugriff auf die übergebenen Werte der Listenzeile</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItem.Values">
      <summary>Erlaubt den Zugriff auf die angezeigten Werte der Listenzeile</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItem.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Boolean,System.Int32,System.Boolean)">
      <summary>Zeichnet das Element in das übergebene Graphics-Objekt.
</summary>
      <param name="g">Graphics-Objekt, in das sich das Element zeichnet.</param>
      <param name="rectangle">Rechteck, in das sich das Element zeichnet.</param>
      <param name="font">Schriftart.</param>
      <param name="itemAutoHeight">True: Das Element berechnet seine Höhe selbst, ansonsten false.</param>
      <param name="hScrollValue">Optionale Angabe eines Offsets, der durch einen horizontalen Bildlauf das gezeichnete Element nach links verschiebt.</param>
      <param name="drawFocus">True: Das Element wird mit einem Fokusrahmen gekennzeichnet.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewItems">
      <summary>Kapselt als Auflistung die Zeilen eines Listensteuerelementes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItems.Count">
      <summary>Gibt die Anzahl der Elemente in der Auflistung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItems.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeindex
</summary>
      <param name="index">Zugriff auf das Element über den Elementeindex</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItems.Item(System.Object)">
      <summary>Zugriff auf ein Element in der Auflistung</summary>
      <param name="key">Zugriff auf das Element über den eindeutigen Schlüssel (Bei der 'Add'-Methode angegeben)</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Add(System.Object,VisiWinNET.Forms.ListViewItem,System.Object)">
      <summary>Die Methode 'Add' fügt der Auflistung am Ende eine neue Zeile hinzu.</summary>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Add(System.Object,VisiWinNET.Forms.ListViewItem)">
      <summary>Die Methode 'Add' fügt der Auflistung am Ende eine neue Zeile hinzu.</summary>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Add(VisiWinNET.Forms.ListViewItem)">
      <summary>Die Methode 'Add' fügt der Auflistung am Ende eine neue Zeile hinzu.</summary>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Add(VisiWinNET.Forms.ListViewItem,System.Object)">
      <summary>Die Methode 'Add' fügt der Auflistung am Ende eine neue Zeile hinzu.</summary>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Clear">
      <summary>Löscht alle Zeilen aus der Auflistung</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.GetEnumerator">
      <summary>Gibt einen Verweis auf eine IEnumerator-Schnittstelle aus, die Zugriff auf die Elemente einer Auflistung (Enumeration) gewährleistet. </summary>
      <returns>Ein Objekt vom Typ System.Collections.IEnumerator, dass alle 'ListViewItem'-Objekte enthält</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Insert(System.Int32,VisiWinNET.Forms.ListViewItem)">
      <summary>Die Methode 'Insert' fügt der Auflistung an der angegeben Position eine neue Zeile hinzu.</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Insert(System.Int32,VisiWinNET.Forms.ListViewItem,System.Object)">
      <summary>Die Methode 'Insert' fügt der Auflistung an der angegeben Position eine neue Zeile hinzu.</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Insert(System.Int32,System.Object,VisiWinNET.Forms.ListViewItem,System.Object)">
      <summary>Die Methode 'Insert' fügt der Auflistung an der angegeben Position eine neue Zeile hinzu.</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Insert(System.Int32,System.Object,VisiWinNET.Forms.ListViewItem)">
      <summary>Die Methode 'Insert' fügt der Auflistung an der angegeben Position eine neue Zeile hinzu.</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="listViewItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Remove(System.Object)">
      <summary>Die Methode 'Remove' löscht die angegebene Zeile aus der Auflistung.</summary>
      <param name="key">Angabe des zu löschenden Elementes über den eindeutigen Schlüssel, der beim Hinzufügen des Elementes verwendet wurde.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.Remove(VisiWinNET.Forms.ListViewItem)">
      <summary>Die Methode 'Remove' löscht die angegebene Zeile aus der Auflistung.</summary>
      <param name="listViewItem">Angabe des zu löschenden Elementes</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.RemoveAll(VisiWinNET.Forms.ListViewItem)">
      <summary>Die Methode 'RemoveAll' löscht das angegebene Objekt aus der Auflistung. Ist das Objekt mehrfach in der Auflistung vorhanden werden alle Verweise auf das Objekt aus der Auflistung gelöscht.</summary>
      <param name="listViewItem">Angabe der zu löschenden Elemente</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.RemoveAll(System.Object)">
      <summary>Die Methode 'RemoveAll' löscht das angegebene Objekt aus der Auflistung. Ist das Objekt mehrfach in der Auflistung vorhanden werden alle Verweise auf das Objekt aus der Auflistung gelöscht.</summary>
      <param name="obj">Angabe des zu löschenden Elementes über den Schlüssel</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItems.RemoveAt(System.Int32)">
      <summary>Löscht ein Element unter Angabe der Position aus der Auflistung</summary>
      <param name="index">Angabe des zu löschenden Elementes über die Position</param>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewItemValues">
      <summary>Klasse zum Zugriff auf die angezeigten Feldwerte einer Zeile in einem Listensteuerelement</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItemValues.Count">
      <summary>Gibt die Anzahl der Elemente in der Auflistung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItemValues.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung über den Spaltenindex
</summary>
      <param name="index">Angabe des 0-basierten Elementeindex in der Aulistung</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewItemValues.Item(System.String)">
      <summary>Zugriff auf ein Element der Auflistung über den Spaltennamen</summary>
      <param name="columnName">Name der Spalte.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewItemValues.GetEnumerator">
      <summary>Gibt einen Verweis auf eine IEnumerator-Schnittstelle aus, die Zugriff auf die Elemente einer Auflistung (Enumeration) gewährleistet. </summary>
      <returns>Ein Objekt vom Typ System.Collections.IEnumerator, dass alle als Feldwerte angezeigten Objekte enthält</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewLocalizedTextColumn">
      <summary>Beschreibt eine Spalte in einem Listensteuerelement, deren Feldwerte als Texte aus der Sprachumschaltung dargestellt werden.

</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewLocalizedTextColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewLocalizedTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewLocalizedTextColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewLocalizedTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewLocalizedTextColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewLocalizedTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewLocalizedTextColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewLocalizedTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewLocalizedTextColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewLocalizedTextColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewLocalizedTextColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewLocalizedTextColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewNumericalColumn">
      <summary>Beschreibt eine Spalte in einem Listensteuerelement, deren Feldwerte als Zahlen dargestellt werden.

</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewNumericalColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewNumericalColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewNumericalColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewNumericalColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewNumericalColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewNumericalColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewNumericalColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewNumericalColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewNumericalColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewNumericalColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewNumericalColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewNumericalColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewSubItems">
      <summary>Klasse zum Zugriff auf die Feldwerte einer Zeile in einem Listensteuerelement</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewSubItems.Count">
      <summary>Gibt die Anzahl der Elemente in der Auflistung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewSubItems.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung über den Spaltenindex
</summary>
      <param name="index">Angabe des Elementes über den 0-basierten Index</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewSubItems.Item(System.String)">
      <summary>Zugriff auf ein Element der Auflistung über den Spaltennamen</summary>
      <param name="columnName">Name der Spalte.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewSubItems.GetEnumerator">
      <summary>Gibt einen Verweis auf eine IEnumerator-Schnittstelle aus, die Zugriff auf die Elemente einer Auflistung (Enumeration) gewährleistet. </summary>
      <returns>Ein Objekt vom Typ System.Collections.IEnumerator, dass alle als Feldwerte übergebenen Objekte enthält</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewTextColumn">
      <summary>Beschreibt eine Spalte in einem Listensteuerelement, deren Feldwerte als Text dargestellt werden.

</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewTextColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewTextColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewTextColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="visible">Sichtbarkeit der Spalte.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewTextColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewTextColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="visible">Sichtbarkeit der Spalte.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewTextColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewTextColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewTextColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewTextColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewVWItemColumn">
      <summary>Beschreibt eine Spalte in einem Listensteuerelement, deren Feldwerte als Werte oder als Texte von Prozessvariablen dargestellt werden.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,VisiWinNET.Forms.ListViewVWItemColumnModes,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewVWItemColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="mode">Anzeige von Text oder Prozessvariablenwert</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="decPoint">Anzahl der Nachkommastellen bei Fließkommazahlen oder Kommaverschiebung bei ganzzahligen Datentypen</param>
      <param name="visible">Sichtbarkeit der Spalte.</param>
      <param name="recipeMember">Wert für die Eigenschaft 'RecipeMember'</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewVWItemColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,VisiWinNET.Forms.ListViewVWItemColumnModes,System.Boolean,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'ListViewVWItemColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="mode">Anzeige von Text oder Prozessvariablenwert</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="decPoint">Anzahl der Nachkommastellen bei Fließkommazahlen oder Kommaverschiebung bei ganzzahligen Datentypen</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,VisiWinNET.Forms.ListViewVWItemColumnModes,System.Boolean,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewVWItemColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="mode">Anzeige von Text oder Prozessvariablenwert</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="decPoint">Anzahl der Nachkommastellen bei Fließkommazahlen oder Kommaverschiebung bei ganzzahligen Datentypen</param>
      <param name="visible">Sichtbarkeit der Spalte.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,VisiWinNET.Forms.ListViewVWItemColumnModes,System.Boolean,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewVWItemColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="mode">Anzeige von Text oder Prozessvariablenwert</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="decPoint">Anzahl der Nachkommastellen bei Fließkommazahlen oder Kommaverschiebung bei ganzzahligen Datentypen</param>
      <param name="visible">Sichtbarkeit der Spalte.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.#ctor(System.String,System.String,VisiWinNET.LanguageSwitching.TextTypes,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,VisiWinNET.Forms.ListViewVWItemColumnModes,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewVWItemColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="headerTextType">Wert für die Eigenschaft 'TextType' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="mode">Anzeige von Text oder Prozessvariablenwert</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="decPoint">Anzahl der Nachkommastellen bei Fließkommazahlen oder Kommaverschiebung bei ganzzahligen Datentypen</param>
      <param name="visible">Sichtbarkeit der Spalte.</param>
      <param name="recipeMember">Wert für die 'RecipeMember'-Eigenschaft</param>
      <param name="unitConversion">Wert für die 'UnitConversion'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.#ctor(System.String,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,VisiWinNET.Forms.ColumnTypes,VisiWinNET.Forms.ListViewVWItemColumnModes,System.Boolean,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'ListViewVWItemColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'Text' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes</param>
      <param name="headerTextGroup">Wert für die Eigenschaft 'TextGroup' des als 'LocalizableHeaderText' verwendeten 'LocalizableText'-Objektes (wenn also eine Sprachumschaltung im Spaltenkopf erforderlich ist)</param>
      <param name="name">Name der Spalte</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="type">Spaltentyp (Text, numerisch, ...)</param>
      <param name="mode">Anzeige von Text oder Prozessvariablenwert</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="decPoint">Anzahl der Nachkommastellen bei Fließkommazahlen oder Kommaverschiebung bei ganzzahligen Datentypen</param>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewVWItemColumn.DecPoint">
      <summary>Dezimalverschiebung bei ganzzahligen Werten oder Angabe der Nachkommastelle bei Fliesskommazahlen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewVWItemColumn.Mode">
      <summary>Legt fest, ob Prozessvariablenwerte oder Prozessvariablentexte angegeben werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewVWItemColumn.RecipeMember">
      <summary>Legt fest, ob die Variablenwerte aus dem Variablenkern oder dem Rezeptpuffer angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ListViewVWItemColumn.UnitConversion">
      <summary>Legt fest, ob für den Variablenwert eine Einheitenumrechnung durchgeführt werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ListViewVWItemColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>je nach gewählter 'Mode'-Einstellung: "VWItemValue", "VWItemText" oder "VWItemUnit"</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Margin">
      <summary>Kapselt die Informationen der Breiten einer Umrandung</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Margin.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Margin'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Margin.Bottom">
      <summary>Gibt die Breite für den unteren Rand an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Margin.Left">
      <summary>Gibt die Breite für den linken Rand an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Margin.Right">
      <summary>Gibt die Breite für den rechten Rand an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Margin.Top">
      <summary>Gibt die Breite für den oberen Rand an</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Meter">
      <summary>Steuerelement, das ein Zeigerinstrument darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Meter.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Meter'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.BackColorMeter">
      <summary>Legt die Hintergrundfarbe des Zeigerinstrumentes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.ForeColorRuler">
      <summary>Legt die Farbe des Lineals und der Skalenstriche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.ForeColorScale">
      <summary>Legt die Farbe der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.MaxValue">
      <summary>Legt den maximalen Skalenwert fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.MinValue">
      <summary>Legt den minimalen Skalenwert fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.RulerMajorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Hauptrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.RulerMinorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Unterrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.RulerType">
      <summary>Legt fest, welche Bestandteile der Skala gezeichnet werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.ScaleAlign">
      <summary>Gibt die Schrittweite der Skalenwerte an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.ScaleDisplay">
      <summary>Legt fest, welche Bestandteile der Skala (Skalenstriche/Skalenwerte) im Steuerelement dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.ShowMeterBorder">
      <summary>Legt fest, ob um das (halbkreisförmige) Zeigerinstrument zusätzlich ein Rahmen gezeichnet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Meter.VWItem">
      <summary>Legt die Prozessvariable fest, deren Wert den Zeigerausschlag bestimmt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Meter.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Meter.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Meter.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Meter.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Meter.Change">
      <summary>Wird ausgelöst, wenn sich der angebundene Prozessvariablenwert (Eigenschaft 'VWItem') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Meter', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Move">
      <summary>Steuerelement, das in Abhängigkeit von Prozessvariablenwerten in X- und Y-Richtung verschoben wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Move.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Move'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.ControlLocation">
      <summary>Gibt die Ausganagsposition des Steuerelementes im umgebenden Container an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.DistanceX">
      <summary>Legt fest, wie viele Pixel das Steuerelement von seiner Ausgangsposition in horizontaler Richtung verschoben wird, wenn der über 'VWItemX' angebundene Prozesswert den Wert der Eigenschaft 'MaxValueX' annimmt.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.DistanceY">
      <summary>Legt fest, wie viele Pixel das Steuerelement von seiner Ausgangsposition in vertikaler Richtung verschoben wird, wenn der über 'VWItemY' angebundene Prozesswert den Wert der Eigenschaft 'MaxValueY' annimmt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.Image">
      <summary>Legt die Grafik fest, die auf dem Steuerelement angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.ImageSizeMode">
      <summary>Legt fest, wie sich das Steuerelement beim Laden einer Grafik verhält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.MaxValueX">
      <summary>Gibt den Prozessvariablenwert an, bei dem die maximale Verschiebung in X-Richtung angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.MaxValueY">
      <summary>Gibt den Prozessvariablenwert an, bei dem die maximale Verschiebung in Y-Richtung angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.MinValueX">
      <summary>Gibt den Prozessvariablenwert an, bei dem das Steuerelement an der über 'Location' festgelegten X-Position angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.MinValueY">
      <summary>Gibt den Prozessvariablenwert an, bei dem das Steuerelement an der über 'Location' festgelegten Y-Position angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.SetEndPos">
      <summary>Hilfseigenschaft zum Setzen der Bewegungsendpunkte</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.VWItemX">
      <summary>Legt die Prozessvariable fest, die die Verschiebung in X-Richtung bewirkt.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Move.VWItemY">
      <summary>Legt die Prozessvariable fest, die die Verschiebung in Y-Richtung bewirkt.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Move.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Move.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Move.MoveToValuePosition(System.Double,System.Double)">
      <summary>Verschiebt das Steuerelement auf die Position, die über die Prozessvariablenwerte angegeben werden</summary>
      <param name="valueX">Prozessvariablenwert für die X-Achse</param>
      <param name="valueY">Prozessvariablenwert für die Y-Achse</param>
    </member>
    <member name="E:VisiWinNET.Forms.Move.ChangeX">
      <summary>Wird ausgelöst, wenn sich der Wert der über 'VWItemX' festgelegten Prozessvariablen ändert.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Move', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Move.ChangeY">
      <summary>Wird ausgelöst, wenn sich der Wert der über 'VWItemY' festgelegten Prozessvariablen ändert.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Move', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Move.PaintBackground">
      <summary>Wird ausgelöst, wenn der Hintergrund des Steuerelementes gezeichnet wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ PaintEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.OptionGroup">
      <summary>Klasse zur funktionalen Verknüpfung mehrerer Steuerelemente (vom Typ 'Switch' oder 'RadioButton')</summary>
    </member>
    <member name="M:VisiWinNET.Forms.OptionGroup.#ctor">
      <summary>Erzeugt eine neue Instanz der 'OptionGroup'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.OptionGroup.#ctor(VisiWinNET.Forms.IOptionGroupMember)">
      <summary>Erzeugt eine neue Instanz der 'OptionGroup'-Klasse.</summary>
      <param name="member">Erwartet das Objekt, das die 'IOptionGroupMember'-Schnittstelle implementiert.</param>
    </member>
    <member name="P:VisiWinNET.Forms.OptionGroup.Editable">
      <summary>Legt fest, ob das Steuerelement direkt auf die angeschlossene Prozessvariable schreibt oder ob eine Editierkopie angelegt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.OptionGroup.Member">
      <summary>Gibt das Objekt zurück, das die 'IOptionGroupMember'-Schnittstelle implementiert.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.OptionGroup.Name">
      <summary>Legt den Gruppennamen fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.OptionGroup.Number">
      <summary>Legt die Gruppennummer fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.OptionGroup.SetMode">
      <summary>Legt fest, ob das aktive Steuerelement zurückgesetzt werden kann</summary>
    </member>
    <member name="M:VisiWinNET.Forms.OptionGroup.HandleSet">
      <summary>Wird nur intern von den Steuerelementen verwendet. Für den Entwickler hat sie keine Funktion.
</summary>
      <returns>'True' oder 'False'</returns>
    </member>
    <member name="M:VisiWinNET.Forms.OptionGroup.StartEdit">
      <summary>Startet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.OptionGroup.StopEdit(System.Boolean)">
      <summary>Beendet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
      <param name="transmitEditResult">True: Der Wert der Editierkopie wird zum Variablenkern übertragenFalse: Der Wert der Editierkopie wird verworfen. Der aktuelle Variablenwert aus dem Variablenkern wird in das Steuerelement zurückgeladen.</param>
    </member>
    <member name="M:VisiWinNET.Forms.OptionGroup.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt den Wert der 'Number'-Eigenschaft zurück</returns>
    </member>
    <member name="T:VisiWinNET.Forms.PadSettings">
      <summary>Kapselt Informationen zu einer Bildschirmtastatur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PadSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PadSettings'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PadSettings.ClassName">
      <summary>Legt eine alternative Tastatur fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PadSettings.KeySize">
      <summary>Legt die Größe der Bildschirmtastatur fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PadSettings.Location">
      <summary>Legt die Position der Bildschirmtastatur fest, wenn der Positionierungsmodus (Eigenschaft 'Position') auf 'Manual' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PadSettings.Modal">
      <summary>Legt fest, ob die Bildschirmtastatur modal aufgerufen werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PadSettings.Position">
      <summary>Legt den Positionierungsmodus der Bildschirmtastatur fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PadSettings.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Information über die Eigenschaften 'KeySize', 'Modal' und 'Position'</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Panel">
      <summary>Containersteuerelement zur Aufnahme weiterer Steuerelemente mit touchscreenoptimierten Bildlaufleisten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Panel.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Panel'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.Authorization">
      <summary>Legt das Verhalten des Steuerelementes bezüglich der Anbindung an die Benutzerverwaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.Blink">
      <summary>Legt das Verhalten des Steuerelementes bezüglich des applikationsweit synchronisierten Blinken fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.Events">
      <summary>Verknüpft Steuerelementeereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.ScrollBarProperties">
      <summary>Legt fest, wie die Bildlaufleisten des Steuerelementes dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.ScrollContainer">
      <summary>Gibt eine Verweis auf das Objekt zurück, das die Fläche für die im 'Panel' aufgenommenen Steuerelemente darstellt </summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.ScrollPosition">
      <summary>Legt fest, welcher Ausschnitt der Fläche, die weitere Steuerelemente enthält, im Panel sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.VirtualMinSize">
      <summary>Legt die Größe der Fläche fest, die zur Aufnahme von Steuerelementen im Panel verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Panel.VirtualSize">
      <summary>Gibt die Größe der im Panel sichtbaren Fläche zurück.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Panel.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Panel.BeginInit">
      <summary>Leitet die Initialisierungsphase des Steuerelementes ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Panel.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Panel.EndInit">
      <summary>Beendet die Initialisierungsphase des Steuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Panel.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Panel.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Panel.AuthorizationChanged">
      <summary>Wird ausgelöst, wenn sich durch das An-/Abmelden eines Benutzers eine Änderung der Darstellung ergibt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Panel', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AuthorizationEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Panel.DoBlink">
      <summary>Meldet den Phasenwechsel des applikationsweit synchronisierten Blinkens.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Panel', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BlinkEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.PictureBox">
      <summary>Steuerelement, das verschiedene Grafiken in Abhängigkeit von einem Variablenwert anzeigt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PictureBox.#ctor">
      <summary>Erzeugt eine neue Instanz der 'PictureBox'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PictureBox.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PictureBox.CurrentImage">
      <summary>Gibt die aktuell angezeigte Grafik zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PictureBox.Images">
      <summary>Enthält die Auflistung der Bilder, zwischen denen bei der Änderung des Variablenwertes gewechselt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PictureBox.ImageSizeMode">
      <summary>Legt fest, wie sich die Größe von Steuerelement und Grafik beim Laden eines neuen Bildes aneinander anpassen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PictureBox.TransparentColor">
      <summary>Legt eine Farbe in den Bildern als transparent fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PictureBox.VWItem">
      <summary>Anbindung an eine Prozessvariable</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PictureBox.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PictureBox.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PictureBox.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.PictureBox.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.PictureBox.BitChange">
      <summary>Wird ausgelöst, wenn sich das in 'VWItem' festgelegte zu überwachende Bit der Prozessvariablen (Eigenschaft 'WatchedBitNo') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PictureBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateItem.BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.PictureBox.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der über 'VWItem' angebundenen Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PictureBox', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.PopupInfo">
      <summary>Komponente, die in einem Pop-Fenster zusätzliche Informationen zu VarIn-Steuerelementen anzeigt </summary>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PopupInfo'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'PopupInfo'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.ActivationMode">
      <summary>Legt fest, wann das Info-Fenster angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.BackColor">
      <summary>Legt die Hintergrundfarbe im Infofenster fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.Font">
      <summary>Legt die Schriftart im Infofenster fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.ForeColor">
      <summary>Legt die Texfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.ImagesVisible">
      <summary>Legt fest, ob die Symbole als Beschreibung für die Felder im Infofenster angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.LabelsVisible">
      <summary>Legt fest, ob sprachumschaltbare Texte als Beschreibung für die Felder im Infofenster angezeigt werden sollen
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.LimitColor">
      <summary>Legt fest, in welcher Farbe die Überschreitung eines Grenzwertes dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.PopupInfoForm">
      <summary>Gibt den Namen eines alternativen Informationsformular aus der eigenen Anwendung an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.PopupPosition">
      <summary>Legt die Position des Infofensters fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.ShowDefaultValue">
      <summary>Legt fest, ob der Ersatzwert der angebundenen Variable im Infofenster angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.ShowItemAlias">
      <summary>Legt fest, ob der Alias der angebundenen Variable im Infofenster angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.ShowItemID">
      <summary>Legt fest, ob die ItemID (Adresse) der angebundenen Variable im Infofenster angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.ShowLimits">
      <summary>Legt fest, ob die über Minimum/Maximum angegebenen Grenzen der angebundenen Variable im Infofenster angezeigt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PopupInfo.Visible">
      <summary>Legt fest, ob das Infofenster angezeigt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.Click(System.Object,VisiWinNET.Forms.PopupInfoEventArgs)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="e">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.EditStateChanged(System.Object,VisiWinNET.DataAccess.EditStateChangeEventArgs)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="e">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.Enter(System.Object,VisiWinNET.Forms.PopupInfoEventArgs)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="e">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.Leave(System.Object,System.EventArgs)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="e">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.Limit(System.Object,VisiWinNET.Forms.VarInLimitEventArgs)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="e">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.SetDefaultValue(System.Object,System.String)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="defaultValue">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.SetItemAlias(System.Object,System.String)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="itemAlias">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.SetItemID(System.Object,System.String)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="itemID">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.PopupInfo.ValidInput(System.Object,System.EventArgs)">
      <summary>Diese Schnittstelle wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.</summary>
      <param name="sender">-</param>
      <param name="e">-</param>
    </member>
    <member name="T:VisiWinNET.Forms.PopupInfoAppearanceEventArgs">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PopupInfoEventArgs">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PrinterForms">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Process">
      <summary>Unterstützt den Zugriff auf Remote-Prozesse und erlaubt das Starten und Stoppen lokaler Prozesse</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Process.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Process'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Process.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'Process'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Process.EnableRaisingEvents">
      <summary>Legt fest, ob das 'Exited'-Ereignis ausgelöst werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Process.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Process.StartInfo">
      <summary>Legt fest, welcher Prozess gestartet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Process.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Process.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Process.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Process.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Process.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Process.KillProcess">
      <summary>Beendet den in StartInfo festgelegten Prozess</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Process.StartProcess">
      <summary>Startet den in StartInfo festgelegten Prozess</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Process.ErrorDataReceived">
      <summary>Tritt auf, wenn der gestartete Prozess Nachrichten in der Standard-Fehlerausgabe generiert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Process', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DataReceivedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Process.Exited">
      <summary>Tritt auf, wenn der gestartete Prozess beendet wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Process', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Process.OutputDataReceived">
      <summary>Tritt auf, wenn der gestartete Prozess Nachrichten in der Standard-Ausgabe generiert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Process', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DataReceivedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ProjectFormChangedEventArgs">
      <summary>Stellt Daten für das 'FormChanged'-Ereignis eines 'ProjectForms'-Objektes bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectFormChangedEventArgs.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Erzeugt eine neue Instanz der 'ProjectFormChangedEventArgs'-Klasse.</summary>
      <param name="newForm">Name des neuen Formulars</param>
      <param name="previousForm">Name des vorhergehenden Formulars</param>
      <param name="canForward">Information, ob vorgeblättert werden kann</param>
      <param name="canBack">Information, ob zurückgeblättert werden kann</param>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectFormChangedEventArgs.CanBack">
      <summary>Gibt zurück, ob über die 'Back'-Methode zu einem anderen Formular zurückgeblättert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectFormChangedEventArgs.CanForward">
      <summary>Gibt zurück, ob über die 'Forward'-Methode zu einem anderen Formular vorgeblättert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectFormChangedEventArgs.NewForm">
      <summary>Gibt den Namen des neu angezeigten Formulars zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectFormChangedEventArgs.PreviousForm">
      <summary>Gibt den Namen des vor dem Wechsel angezeigten Formulars zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ProjectFormChangingEventArgs">
      <summary>Stellt Daten für das statische 'FormChanging'-Ereignis von 'ProjectForms' bereit.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectFormChangingEventArgs.#ctor(System.String,System.String)">
      <summary>Erzeugt eine neue Instanz der 'ProjectFormChangingEventArgs'-Klasse</summary>
      <param name="newForm">Gibt den Namen des Formulars zurück, zu dem gewechselt wird.</param>
      <param name="previousForm">Gibt den Namen des Formulars zurück, das durch den Wechsel ausgeblendet wird.</param>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectFormChangingEventArgs.Cancel">
      <summary>Legt fest, ob der Formularwechsel abgebrochen werden soll.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectFormChangingEventArgs.NewForm">
      <summary>Gibt den Namen des Formulars zurück, zu dem gewechselt wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectFormChangingEventArgs.PreviousForm">
      <summary>Gibt den Namen des Formulars zurück, das durch den Wechsel ausgeblendet wird.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ProjectForms">
      <summary>Klasse zur Verwaltung der in der Applikation vorhandenen Formulare</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ProjectForms'-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.ActiveForm">
      <summary>Gibt einen Verweis auf das aktive Formular zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.CanBack">
      <summary>Gibt zurück, ob über die 'Back'-Methode zu einem anderen Formular zurückgeblättert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.CanForward">
      <summary>Gibt zurück, ob über die 'Forward'-Methode zu einem anderen Formular vorgeblättert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.DefinedForms">
      <summary>Gibt die Namen aller in der Applikation definierter Formulare zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.FormsInHistory">
      <summary>Gibt die Namen der Formulare zurück, zu denen vor-/zurückgeblättert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.HistorySize">
      <summary>Legt die Größe des Puffers fest, der Verweise auf Formulare enthält, zu denen zurückgeblättert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.LoadedForms">
      <summary>Gibt eine Auflistung von geladenen Formularen zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ProjectForms.StartForm">
      <summary>Gibt einen Verweis auf das Startformular der Applikation zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.AddFormsFromAssembly(System.Reflection.Assembly)">
      <summary>Lädt Formularnamen aus einem Assembly in die Projektverwaltung</summary>
      <param name="assembly">Verweis auf ein Assembly-Objekt, aus dem Formulare geladen werden sollen</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Back(VisiWinNET.Forms.FormChangeModes)">
      <summary>Blättert ein Formular zurück. </summary>
      <returns>True: Es konnte zurückgeblättert werden False: Es konnte nicht zurückgeblättert werden</returns>
      <param name="changeMode">Legt fest, wie das aktuell aktive Formular behandelt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Back">
      <summary>Blättert ein Formular zurück</summary>
      <returns>True: Es konnte zurückgeblättert werden False: Es konnte nicht zurückgeblättert werden</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Back(System.Boolean)">
      <summary>Blättert ein Formular zurück</summary>
      <returns>True: Es konnte zurückgeblättert werden False: Es konnte nicht zurückgeblättert werden</returns>
      <param name="closeActiveForm">True: Das aktuell aktive Formular wird entladen, wenn es nicht durch 'Load' geladen wurdeFalse: Das aktuell aktive Formular wird nicht entladen. Alle auf dem Formular platzierten Steuerelemente behalten ihre Anbindung an die Serverkomponenten.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Close(System.String)">
      <summary>Versteckt oder entlädt das angegebene Formular</summary>
      <returns>True: Der Methiodenaufruf war erfolgreich False: Der Aufruf konnte nicht ausgeführt werden. Ggf. wurde das angegebene Formular in der Formularverwaltung nicht gefunden</returns>
      <param name="name">Name des Formulars, das zu schließen ist</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Forward(VisiWinNET.Forms.FormChangeModes)">
      <summary>Blättert ein Formular vor</summary>
      <returns>True: Es konnte vorgeblättert werden False: Es konnte nicht vorgeblättert werden</returns>
      <param name="changeMode">Legt fest, wie das aktuell aktive Formular behandelt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Forward(System.Boolean)">
      <summary>Blättert ein Formular vor</summary>
      <returns>True: Es konnte vorgeblättert werden False: Es konnte nicht vorgeblättert werden</returns>
      <param name="closeActiveForm">True: Das aktuell aktive Formular wird entladen, wenn es nicht durch 'Load' geladen wurdeFalse: Das aktuell aktive Formular wird nicht entladen. Alle auf dem Formular platzierten Steuerelemente behalten ihre Anbindung an die Serverkomponenten.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Forward">
      <summary>Blättert ein Formular vor</summary>
      <returns>True: Es konnte vorgeblättert werden False: Es konnte nicht vorgeblättert werden</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Hide(System.String)">
      <summary>Versteckt das angegebene Formular</summary>
      <returns>True: Das Formular konnte versteckt werden False: Das Formular konnte nicht versteckt werden</returns>
      <param name="name">Name des Formulars</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Initialize(System.Reflection.Assembly)">
      <summary>Die Methode 'Initialize' initialisiert das Objekt.</summary>
      <param name="assembly">Angabe des Assemblynamens (Nur für "Compact"-Produktvariante)</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Initialize">
      <summary>Die Methode 'Initialize' initialisiert das Objekt.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Load(System.String)">
      <summary>Lädt ein Formular</summary>
      <returns>Verweis auf das geladene Formular Wird 'Nothing' zurückgegeben, konnte das angegebene Formular nicht gelden werden.</returns>
      <param name="name">Name des zu ladenden Formulars</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Show(System.String,VisiWinNET.Forms.FormChangeModes)">
      <summary>Die Methode 'Show' zeigt ein neues Formular an.</summary>
      <returns>True: Das Formular konnte angezeigt werden False: Das Formular konnte nicht angezeigt werden</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="changeMode">Legt fest, wie das aktuell aktive Formular behandelt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Show(System.String)">
      <summary>Die Methode 'Show' zeigt ein neues Formular an.</summary>
      <returns>True: Das Formular konnte angezeigt werden False: Das Formular konnte nicht angezeigt werden</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Show(System.String,System.Boolean)">
      <summary>Die Methode 'Show' zeigt ein neues Formular an.</summary>
      <returns>True: Das Formular konnte angezeigt werden False: Das Formular konnte nicht angezeigt werden</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="closeActiveForm">True: Das aktuell aktive Formular wird entladen, wenn es nicht durch 'Load' geladen wurdeFalse: Das aktuell aktive Formular wird nicht entladen. Alle auf dem Formular platzierten Steuerelemente behalten ihre Anbindung an die Serverkomponenten.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowChildForm(System.String,System.Windows.Forms.Form,System.Boolean,System.Boolean)">
      <summary>Die Methode 'ShowChildForm' zeigt das angegebene Formular als nichtmodales Fenster an.</summary>
      <returns>True: Das angegebene Formular konnte angezeigt werden False: Ein Fehler ist aufgetreten</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="owner">Verweis oder Name des Formulars, das als Besitzerfenster verwendet werden soll</param>
      <param name="addToHistory">True: Das Formular wird in die Liste zum Vor-/Zurückblättern aufgenommenFalse: Das Formular wird nicht in die Liste aufgenommen</param>
      <param name="closeActiveForm">True: Das aktive Fenster wird geschlossenFalse: Das aktive Fenster bleibt im Hintergrund erhalten</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowChildForm(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Die Methode 'ShowChildForm' zeigt das angegebene Formular als nichtmodales Fenster an.</summary>
      <returns>True: Das angegebene Formular konnte angezeigt werden False: Ein Fehler ist aufgetreten</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="owner">Verweis oder Name des Formulars, das als Besitzerfenster verwendet werden soll</param>
      <param name="addToHistory">True: Das Formular wird in die Liste zum Vor-/Zurückblättern aufgenommenFalse: Das Formular wird nicht in die Liste aufgenommen</param>
      <param name="closeActiveForm">True: Das aktive Fenster wird geschlossenFalse: Das aktive Fenster bleibt im Hintergrund erhalten</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowChildForm(System.String,System.String)">
      <summary>Die Methode 'ShowChildForm' zeigt das angegebene Formular als nichtmodales Fenster an.</summary>
      <returns>True: Das angegebene Formular konnte angezeigt werden False: Ein Fehler ist aufgetreten</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="owner">Verweis oder Name des Formulars, das als Besitzerfenster verwendet werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowChildForm(System.String,System.Windows.Forms.Form,System.Boolean,VisiWinNET.Forms.FormChangeModes)">
      <summary>Die Methode 'ShowChildForm' zeigt das angegebene Formular als nichtmodales Fenster an.</summary>
      <returns>True: Das angegebene Formular konnte angezeigt werden False: Ein Fehler ist aufgetreten</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="owner">Verweis oder Name des Formulars, das als Besitzerfenster verwendet werden soll</param>
      <param name="addToHistory">True: Das Formular wird in die Liste zum Vor-/Zurückblättern aufgenommenFalse: Das Formular wird nicht in die Liste aufgenommen</param>
      <param name="changeMode">Legt fest, wie das aktuell aktive Formular behandelt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowChildForm(System.String,System.String,System.Boolean,VisiWinNET.Forms.FormChangeModes)">
      <summary>Die Methode 'ShowChildForm' zeigt das angegebene Formular als nichtmodales Fenster an.</summary>
      <returns>True: Das angegebene Formular konnte angezeigt werden False: Ein Fehler ist aufgetreten</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="owner">Verweis oder Name des Formulars, das als Besitzerfenster verwendet werden soll</param>
      <param name="addToHistory">True: Das Formular wird in die Liste zum Vor-/Zurückblättern aufgenommenFalse: Das Formular wird nicht in die Liste aufgenommen</param>
      <param name="changeMode">Legt fest, wie das aktuell aktive Formular behandelt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowChildForm(System.String,System.Windows.Forms.Form)">
      <summary>Die Methode 'ShowChildForm' zeigt das angegebene Formular als nichtmodales Fenster an.</summary>
      <returns>True: Das angegebene Formular konnte angezeigt werden False: Ein Fehler ist aufgetreten</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="owner">Verweis oder Name des Formulars, das als Besitzerfenster verwendet werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowDialog(System.String,System.Windows.Forms.IWin32Window)">
      <summary>Zeigt ein Formular als modales Fenster an. </summary>
      <returns>Ein Wert aus der 'DialogResult'-Auflistung, der angibt, ob die auf dem modalen Dialog vorgenommenen Eingaben verworfen oder bestätigt wurden. .NET verknüpft die möglichen Rückgabewerte mit den üblichen auf Dialogen platzierten Schaltflächen "OK", "Abbrechen", "Ja", "Nein", usw. So kann über die 'DialogResult'-Eigenschaft der Schaltflächensteuerelemente ein Wert festgelegt werden, der beim Schließen als Ergebnis des Dialogaufrufes zurückgegeben wird.</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="owner">Verweis auf das Formulars, das als Besitzerfenster verwendet werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowDialog(System.String,System.Boolean)">
      <summary>Zeigt ein Formular als modales Fenster an. </summary>
      <returns>Ein Wert aus der 'DialogResult'-Auflistung, der angibt, ob die auf dem modalen Dialog vorgenommenen Eingaben verworfen oder bestätigt wurden. .NET verknüpft die möglichen Rückgabewerte mit den üblichen auf Dialogen platzierten Schaltflächen "OK", "Abbrechen", "Ja", "Nein", usw. So kann über die 'DialogResult'-Eigenschaft der Schaltflächensteuerelemente ein Wert festgelegt werden, der beim Schließen als Ergebnis des Dialogaufrufes zurückgegeben wird.</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
      <param name="activeFormAsOwner">True: Das aktive Fenster wird als Besitzerfenster festgelegt</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.ShowDialog(System.String)">
      <summary>Zeigt ein Formular als modales Fenster an. </summary>
      <returns>Ein Wert aus der 'DialogResult'-Auflistung, der angibt, ob die auf dem modalen Dialog vorgenommenen Eingaben verworfen oder bestätigt wurden. .NET verknüpft die möglichen Rückgabewerte mit den üblichen auf Dialogen platzierten Schaltflächen "OK", "Abbrechen", "Ja", "Nein", usw. So kann über die 'DialogResult'-Eigenschaft der Schaltflächensteuerelemente ein Wert festgelegt werden, der beim Schließen als Ergebnis des Dialogaufrufes zurückgegeben wird.</returns>
      <param name="name">Name des anzuzeigenden Formulars</param>
    </member>
    <member name="M:VisiWinNET.Forms.ProjectForms.Unload(System.String)">
      <summary>Entlädt das angegebene Formular</summary>
      <returns>True: Das Formular wurde entladen False: Das Formular konnte nicht entladen werden (wahrscheinlich nicht geladen)</returns>
      <param name="name">Name des Formulars,das entladen werden soll</param>
    </member>
    <member name="E:VisiWinNET.Forms.ProjectForms.FormChanged">
      <summary>Wird ausgelöst, nachdem über die Methoden 'Forward', 'Back' oder 'Show'zu einem anderen Formular gewechselt wurde.</summary>
      <param name="e">Objekt vom Typ 'ProjectFormChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ProjectForms.FormChanging">
      <summary>Wird ausgelöst, sobald über die Methoden 'Forward', 'Back' oder 'Show' ein Formularwechsel gestartet wird.</summary>
      <param name="e">Objekt vom Typ 'ProjectFormChangingEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBindingBase">
      <summary>Basisklasse für eine Eigenschaftenbindung</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PropertyBindingBase'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'PropertyBindingBase'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBindingBase.PropertyName">
      <summary>Gibt den Namen der angebundenen Eigenschaft an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBindingBase.Value">
      <summary>Legt den zum Prozesvariablenwert zugeordneten Eigenschaftenwert fest oder gibt ihn zurück

</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft  enthält</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenkette, die die Einstellungen im Objekt beschreibt</returns>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingBase.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="E:VisiWinNET.Forms.PropertyBindingBase.PropertyBindingChanged">
      <summary>Wird ausgelöst, wenn der Wert der gebundenen Eigenschaft durch die Änderung der angebundenen Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PropertyBindingBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyBindingChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBindingChangedEventArgs">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBindingChangedEventArgs.Property">
      <summary>Gibt den Namen der geänderten Eigenschaft an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBindingChangedEventArgs.Value">
      <summary>Gibt den neuen Wert der geänderten Eigenschaft an</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBindingCollection">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingCollection.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBindingCollection.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="T:VisiWinNET.Forms.RadioButton">
      <summary>Steuerelement, das eine Optionsfeld mit Anbindung an den Variablenkern darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.#ctor">
      <summary>Erzeugt eine neue Instanz der 'RadioButton'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.BackColorCheck">
      <summary>Legt die Hintergrundfarbe des Bedienfeldes für den Variablenzustand 'False' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.BackColorCheckOn">
      <summary>Legt die Hintergrundfarbe des Bedienfeldes für den Zustand 'True' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.CheckAlign">
      <summary>Legt die Ausrichtung des Bedienfeldes im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.CheckSize">
      <summary>Legt die Abmessungen des Optionenfeldes im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.CurrentState">
      <summary>Gibt den aktuellen Status des Optionsfeldes zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.Editable">
      <summary>Intern verwendete Eigenschaft</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.EditControl">
      <summary>Legt fest, ob das Steuerelement direkt auf die angeschlossene Prozessvariable schreibt oder ob eine Editierkopie angelegt wird, die erst durch eine weitere Aktion (Methodenaufruf 'StopEdit') in die Prozessdatenbank übernommen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.ForeColorChecking">
      <summary>Legt die Farbe des Bedienfeldes fest, die eine begonnene Eingabe kennzeichnet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.ForeColorCheckOn">
      <summary>Legt die Vordergrundfarbe des Bedienfeldes für den Variablenzustand 'True' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.ImageDisabledOn">
      <summary>Legt die Grafik fest, die angezeigt wird, wenn die angebundene Prozessvariable den Wert 'True' hat und das Steuerelement deaktiv ist (Enabled = 'False').
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.ImageOn">
      <summary>Legt die Grafik fest, die angezeigt wird, wenn die angebundene Prozessvariable den Wert 'True' hat.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.OptionGroup">
      <summary>Legt die Zugehörigkeit zu einem Feld von Steuerelementen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.ParentForm">
      <summary>Gibt den Container des Steuerelementes zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.RadioButton.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.ResetState">
      <summary>Setzt den Anzeigestatus und die angebundene Prozessvariable zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.StartEdit">
      <summary>Startet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.StartOptionGroupEdit">
      <summary>Startet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert für das über OptionGroup festgelegte Feld von Steuerelementen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.StopEdit(System.Boolean)">
      <summary>Beendet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
      <param name="transmitEditResult">True: Der Wert der Editierkopie wird zum Variablenkern übertragenFalse: Der Wert der Editierkopie wird verworfen. Der aktuelle Variablenwert aus dem Variablenkern wird in das Steuerelement zurückgeladen.</param>
    </member>
    <member name="M:VisiWinNET.Forms.RadioButton.StopOptionGroupEdit(System.Boolean)">
      <summary>Beendet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert für das über OptionGroup festgelegte Feld von Steuerelementen</summary>
      <param name="transmitEditResult">True: Der Wert der Editierkopie wird zum Variablenkern übertragenFalse: Der Wert der Editierkopie wird verworfen. Der aktuelle Variablenwert aus dem Variablenkern wird in das Steuerelement zurückgeladen.</param>
    </member>
    <member name="E:VisiWinNET.Forms.RadioButton.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des Steuerelementes verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RadioButton', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.RadioButton.ChangeMonitor">
      <summary>Meldet die Änderung der über 'VWItemMonitor' festgelegten Variablen.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RadioButton', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.RadioButton.EditStateChange">
      <summary>Wird ausgelöst, wenn das Steuerelement über 'StartEdit' oder 'StopEdit' den Editierstatus ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RadioButton', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EditStateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.RadioButton.VerifyEditValue">
      <summary>Wird nach dem Aufruf der Methode 'StopEdit' und vor dem Herunterschreiben in den Variablenkern ausgelöst</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RadioButton', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VerifyDigitalEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Sandglass">
      <summary>Komponente zur Darstellung des Ladevorganges beim Formularwechsel</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Sandglass.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Sandglass'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Sandglass.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'Sandglass'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Sandglass.Enabled">
      <summary>Legt fest, ob die Anzeige beim Formularwechsel aktiv ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Sandglass.FormName">
      <summary>Gibt den Namen eines Formulars an, das statt der vorgegebenen Anzeige dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Sandglass.IsVisible">
      <summary>Gibt zurück, ob die Anzeige aktuell sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Sandglass.SandglassLocation">
      <summary>Gibt die Position der Anzeige an, wenn SandglassPosition auf 'Manual' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Sandglass.SandglassPosition">
      <summary>Gibt an, ob die Anzeige in der Mitte des Bildschirmes oder an den angegebenen Bildschirmkoordinaten angezeigt werden soll.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Sandglass.ShowBehavior">
      <summary>Legt fest, wann die Warteanzeige erscheinen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Sandglass.UseSandglass">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Sandglass.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Sandglass.Close">
      <summary>Versteckt die Warteanzeige</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Sandglass.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Sandglass.Show">
      <summary>Zeigt die Warteanzeige an</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Scale">
      <summary>Steuerelement, das eine Skala darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Scale.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Scale'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.AutoAlignment">
      <summary>Gibt ein Objekt zurück, dass eine automatische Skalierung unterstützt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.AutoLayout">
      <summary>Legt fest, ob der Bereich der Skalenwerte automatisch vergrößert wird, damit alle Zahlen sichtbar sind</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.DecPoint">
      <summary>Legt die Anzahl der Nachkommastellen fest oder verschiebt ganzzahlige Werte um die angegebene Anzahl von Dezimalstellen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.Direction">
      <summary>Legt die Ausrichtung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.Display">
      <summary>Legt fest, welche Bestandteile (Skala/Skalenwerte) im Steuerelement dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.EndArrow">
      <summary>Legt fest, ob ein Pfeil am Ende des Lineals angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.EndArrowSize">
      <summary>Legt die Größe des Pfeils (in Pixeln) am Ende des Lineals fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.ForeColorRuler">
      <summary>Legt die Farbe des Lineals und der Skalenstriche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.ForeColorScale">
      <summary>Legt die Farbe der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.Format">
      <summary>Legt das Zahlenformat der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.Label">
      <summary>Ermöglicht die Darstellung eines Textes im Steuerelement</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.LimitsVisibility">
      <summary>Legt fest, wie die Grenzen des Wertebereiches auf der Skala aufgeführt werden </summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.LineWidthMajor">
      <summary>Legt die Breite der Skalenlinien des Hauptrasters (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.LineWidthMinor">
      <summary>Legt die Breite der Skalenlinien des Unterrasters (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.Logarithm">
      <summary>Legt fest, ob die Skalenaufteilung logarithmisch oder linear eingeteilt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.MaxValue">
      <summary>Legt den maximalen Skalenwert fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.MinValue">
      <summary>Legt den minimalen Skalenwert fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.RulerMajorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Hauptrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.RulerMinorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Unterrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.RulerType">
      <summary>Legt fest, welche Bestandteile der Skala gezeichnet werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.ScaleAlign">
      <summary>Gibt die Schrittweite der Skalenwerte an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.ScalePosition">
      <summary>Legt die Anordnung von Skala und Skalenwerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.ScaleSizeRatio">
      <summary>Legt das Größenverhältnis zwischen Rasterlinien und Skalenwerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.TextAlign">
      <summary>Legt die Ausrichtung der Skalenwerte im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.Unit">
      <summary>Legt Aussehen und Inhalt des Bereiches fest, der den Einheitentext darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.UnitClass">
      <summary>Legt den Namen der Einheitenklassendefinition fest, die eine Einheitenumschaltung definiert</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.UnitLayout">
      <summary>Legt fest, wo der Einheitentext in der Skala angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Scale.UseUnitText">
      <summary>Legt fest, ob als Einheitentext der Text der aktiven Einheitenumrechnung angezeigt werden soll</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Scale.MaxValueChange">
      <summary>Wird ausgelöst, wenn sich der maximal anzuzeigende Wert (Eigenschaft 'MaxValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Scale', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogValueChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Scale.MinValueChange">
      <summary>Wird ausgelöst, wenn sich der minimal anzuzeigende Wert (Eigenschaft 'MinValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Scale', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogValueChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ScaleDateTime">
      <summary>Steuerelement, das eine Zeitachse darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ScaleDateTime.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ScaleDateTime'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.AutoAlignment">
      <summary>Gibt ein Objekt zurück, dass eine automatische Skalierung unterstützt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.DateTimeFormat">
      <summary>Legt das Format der Datums-/Zeitangabe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.Direction">
      <summary>Legt die Ausrichtung der Skala fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.Display">
      <summary>Legt fest, welche Bestandteile (Skala/Skalenwerte) im Steuerelement dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.EndArrow">
      <summary>Legt fest, ob ein Pfeil am Ende des Lineals angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.EndArrowSize">
      <summary>Legt die Größe des Pfeils (in Pixeln) am Ende des Lineals fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.ForeColorRuler">
      <summary>Legt die Farbe des Lineals und der Skalenstriche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.ForeColorScale">
      <summary>Legt die Farbe der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.Label">
      <summary>Ermöglicht die Darstellung eines Textes im Steuerelement</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.LimitsVisibility">
      <summary>Legt fest, wie die Grenzen des Wertebereiches auf der Skala aufgeführt werden </summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.LineWidthMajor">
      <summary>Legt die Breite der Skalenlinien des Hauptrasters (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.LineWidthMinor">
      <summary>Legt die Breite der Skalenlinien des Unterrasters (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.MaxValue">
      <summary>Legt den Wert am Ende der Skala fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.MinValue">
      <summary>Legt den Wert am Anfang der Skala fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.RulerMajorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Hauptrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.RulerMajorUnit">
      <summary>Gibt die Einheit für die Schrittweite der Skalenlinien des Hauptrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.RulerMinorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Unterrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.RulerMinorUnit">
      <summary>Gibt die Einheit für die Schrittweite der Skalenlinien des Unterrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.RulerType">
      <summary>Legt fest, welche Bestandteile der Skala gezeichnet werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.ScaleAlign">
      <summary>Gibt die Schrittweite der Skalenwerte an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.ScalePosition">
      <summary>Legt die Anordnung von Skala und Skalenwerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.ScaleSizeRatio">
      <summary>Legt das Größenverhältnis zwischen Rasterlinien und Skalenwerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.ScaleUnit">
      <summary>Legt die Einheit der Skalenwerte fest </summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScaleDateTime.TextAlign">
      <summary>Legt die Ausrichtung der Skalenwerte im Steuerelement fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollBar">
      <summary>Steuerelement, das eine Bildlaufleiste mit vergrößerbaren Bedienelementen darstellt
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollBar.#ctor">
      <summary>Erzeugt eine neue Instanz der ScrollBar-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.ArrowButtonSize">
      <summary>Legt die Abmessungen der Pfeiltasten (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.AutoScrollRate">
      <summary>Legt die Verzögerung bei gehaltener Maustaste (in Millisekunden) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.BackColor">
      <summary>Legt die Hintergrundfarbe der Positionierungsleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.BackColorButton">
      <summary>Legt die Hintergrundfarbe der Pfeiltasten an den Enden der Bildlaufleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.BackColorThumb">
      <summary>Legt die Hintergrundfarbe des Positionierungszeiger (Thumb) an den Enden der Bildlaufleiste fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.ForeColorButton">
      <summary>Legt die Farbe der Pfeilsymbole auf den Pfeiltasten an den Enden der Bildlaufleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.ForeColorButtonDisabled">
      <summary>Legt die Farbe der Pfeilsymbole auf den Pfeiltasten an den Enden der Bildlaufleiste fest, wenn die Bildlaufleiste nicht aktiv ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.LargeChange">
      <summary>Legt das Raster für die beschleunigte Bewegung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.Maximum">
      <summary>Legt den Wert der Maximalposition fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.Minimum">
      <summary>Legt den Wert der Value-Eigenschaft fest, bei dem der Positionierungszeiger auf der Minimalposition steht</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.ShowEndButtons">
      <summary>Legt fest, ob die Pfeiltasten sichtbar sein sollen, die zum Anfang, bzw. zum Ende des Bildlaufbereiches steuern</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.ShowPageButtons">
      <summary>Legt fest, ob die Pfeiltasten sichtbar sein sollen, die über 'LargeChange' gesteuert den Bildlaufbereiches nach oben oder unten steuern
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.SmallChange">
      <summary>Legt das Raster für die normale Bewegung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.Style">
      <summary>Bestimmt das Aussehen der Bildlaufleiste</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.ThumbActive">
      <summary>Legt fest, ob die Bedienung über Positionsleiste oder Positionierungszeiger erlaubt sind</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.Type">
      <summary>Legt die Ausrichtung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBar.Value">
      <summary>Gibt den aktuellen Positionswert zurück oder legt ihn fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollBar.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollBar.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollBar.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt neben dem Typ des Steuerelementes noch folgende Informationen - Minimum - Maximum - aktueller Wert Beispiel VisiWinNET.Forms.ScrollBar, Minimum: 0, Maximum: 80, Value: 2</returns>
    </member>
    <member name="E:VisiWinNET.Forms.ScrollBar.BeforeSmallDecrement">
      <summary>Wird ausgelöst, bevor die Anzeige der Laufleiste um den in der Eigenschaft 'SmallChange' angegebenen Wert verringert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ScrollBar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ScrollBar.BeforeSmallIncrement">
      <summary>Wird ausgelöst, bevor die Anzeige der Laufleiste um den in der Eigenschaft 'SmallChange' angegebenen Wert vergrößert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ScrollBar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ScrollBar.Scroll">
      <summary>Wird ausgelöst, wenn der Positionierungszeiger bewegt wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ScrollBar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ScrollEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.ScrollBar.ValueChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der 'Value'-Eigenschaft geändert hat</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ScrollBar', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollBarProperties">
      <summary>Klasse, die spezielle Eigenschaften der Bildlaufleisten eines Steuerelementes kapselt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollBarProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ScrollBarProperties'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.BackColor">
      <summary>Legt die Hintergrundfarbe der Positionierungsleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.BackColorButton">
      <summary>Legt die Hintergrundfarbe der Pfeiltasten an den Enden der Bildlaufleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.BackColorThumb">
      <summary>Legt die Hintergrundfarbe des Positionierungszeiger (Thumb) an den Enden der Bildlaufleiste fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.ForeColorButton">
      <summary>Legt die Farbe der Pfeilsymbole auf den Pfeiltasten an den Enden der Bildlaufleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.ForeColorButtonDisabled">
      <summary>Legt die Farbe der Pfeilsymbole auf den Pfeiltasten an den Enden der Bildlaufleiste fest, wenn die Bildlaufleiste nicht aktiv ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.ShowEndButtons">
      <summary>Legt fest, ob die Pfeiltasten sichtbar sein sollen, die zum Anfang, bzw. zum Ende des Bildlaufbereiches steuern</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.ShowPageButtons">
      <summary>Legt fest, ob die Pfeiltasten sichtbar sein sollen, die über 'LargeChange' gesteuert den Bildlaufbereiches nach oben oder unten steuern
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.Visibility">
      <summary>Legt fest, welche Bildlaufleisten im Steuerelement angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollBarProperties.Width">
      <summary>Legt die Breite der Bildlaufleisten (in Pixeln) fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollBarProperties.ContentEquals(VisiWinNET.Forms.ScrollBarProperties)">
      <summary>Gibt zurück, ob die Eigenschaftenwerte des Objektes mit denen eines Vergleichsobjektes identisch sind.
</summary>
      <returns>True: Die Eigenschaftenwerte sind identisch, ansonsten false.</returns>
      <param name="other">Das Vergleichsobjekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollBarProperties.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Ein Wert der die Einstellungen des Scrollbar im Eigenschaftenfenster repräsentiert</returns>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollEventArgs">
      <summary>Klasse, die zusätzliche Informationen zum 'Scroll'-Ereignis einer Bildlaufleiste zurückgibt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.ScrollEventArgs.#ctor(VisiWinNET.Forms.ScrollEventType,System.Int32)">
      <summary>Erzeugt eine neue Instanz der 'ScrollEventArgs'Klasse.</summary>
      <param name="type">Wert für die Eigenschaft 'Type'</param>
      <param name="newValue">Wert für die Eigenschaft 'NewValue'</param>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollEventArgs.NewValue">
      <summary>Legt den neuen Wert der Bildlaufleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.ScrollEventArgs.Type">
      <summary>Legt die Ursache für die Änderung fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SelectedIndexChangingEventArgs">
      <summary>Klasse, die zusätzliche Informationen zum 'SelectedIndexChanging'-Ereignis eines 'TabControl'-Steuerelementes zurückgibt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SelectedIndexChangingEventArgs.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'SelectedIndexChangingEventArgs'-Klasse.</summary>
      <param name="currentIndex">Wert für die Eigenschaft 'CurrentIndex'</param>
      <param name="newIndex">Wert für die Eigenschaft 'NewIndex'</param>
      <param name="cancel">Wert für die Eigenschaft 'Cancel'</param>
    </member>
    <member name="P:VisiWinNET.Forms.SelectedIndexChangingEventArgs.Cancel">
      <summary>Legt fest. ob der Wechsel zur neuen TabPage ausgeführt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SelectedIndexChangingEventArgs.CurrentIndex">
      <summary>Gibt den Index der aktuellen TabPage zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SelectedIndexChangingEventArgs.NewIndex">
      <summary>Gibt den Index der TabPage zurück, zu der gewchselt werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Shape">
      <summary>Steuerelement, das eine geometrische Form mit Farbumschlag darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Shape.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Shape'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Shape.BackColor">
      <summary>Legt die Hintergrundfarbe des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Shape.BorderColor">
      <summary>Legt die Farbe der Umrandung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Shape.BorderWidth">
      <summary>Legt die Breite der Umrandung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Shape.FillColors">
      <summary>Auflistung von Farben, die bei Änderung des Prozesswertes angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Shape.Outline">
      <summary>Legt die geometrischen Form fest, die im Steuerelement dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Shape.VWItem">
      <summary>Anbindung an eine Prozessvariable</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Shape.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Shape.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Shape.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Shape.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Shape.BitChange">
      <summary>Wird ausgelöst, wenn sich das in 'VWItem' festgelegte zu überwachende Bit der Prozessvariablen (Eigenschaft 'WatchedBitNo') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Shape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateItem.BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Shape.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der über 'VWItem' angebundenen Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Shape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.ShowChangePasswordDialog">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Slider">
      <summary>Steuerelement, das einen Schieberegler ohne Hintergrund darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Slider.#ctor">
      <summary>Erzeugt eine neue Instanz der Slider-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.AcceptControlKeys">
      <summary>Legt fest, ob der Schieberegler über die Navigationstasten (Pfeil hoch/runter/links/rechts) zu bedienen ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.ControlLocation">
      <summary>Gibt den Ausgangspunkt der Schiebereglerbewegung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.Direction">
      <summary>Legt die Bewegungsrichtung des Schiebereglers fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.Distance">
      <summary>Legt den maximalen Ausschlag der Schiebereglerbewegung (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.EditControl">
      <summary>Legt fest, ob das Steuerelement direkt auf die angeschlossene Prozessvariable schreibt oder ob eine Editierkopie angelegt wird, die erst durch eine weitere Aktion (Bedienung der Enter-Taste) in die Prozessdatenbank übernommen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.FocusOnClick">
      <summary>Legt fest, ob das Steuerelement die Eingabemarke (Fokus) erhalten soll, wenn es per Tastatur oder Maus betätigt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.FocusRect">
      <summary>Legt fest, ob die Eingabemarke (Fokus) durch ein gestricheltes Rechteck innerhalb des Steuerelementes angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.Image">
      <summary>Legt die Grafik auf dem Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.ImageDisabled">
      <summary>Legt die Grafik für den Status "deaktiviert" fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.ImageSizeMode">
      <summary>Legt fest, wie sich die Größe von Steuerelement und Grafik beim Laden eines neuen Bildes aneinander anpassen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.KeyChange">
      <summary>Legt die Schrittweite der Wertänderung fest, wenn das Steuerelement über die Tastatur bedient wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.MaxValue">
      <summary>Legt den Wert fest, bei dem der Schieberegler den maximalen Ausschlag zeigt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.MinValue">
      <summary>Legt den Wert fest, bei dem der Schieberegler an der ursprünglichen Position (Eigenschaft 'ControlLocation') angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.MouseChange">
      <summary>Legt die Schrittweite der Wertänderung fest, wenn das Steuerelement über die Maus bedient wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.MouseWrite">
      <summary>Legt fest, wann der Wert in die angebundene Prozessvariable geschrieben wird, wenn das Steuerelement über die Maus bedient wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.RestoreOnLostFocus">
      <summary>Legt fest, ob die Schiebereglerposition zurückgestellt werden soll, wenn das Steuerelement die Eingabemarke verliert, ohne dass die Eingabe beendet wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.SetEndPosition">
      <summary>Hilfseigenschaft zum Setzen der Bewegungsendpunkte</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.SliderStyle">
      <summary>Legt die grafische Oberfläche des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.StyleDirection">
      <summary>Legt fest, in welche Richtung der Schiebereglerknopf zeigt, wenn er als Pfeil dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.Value">
      <summary>Legt den Wert der angebundenen Prozessvariable fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Slider.VWItem">
      <summary>Legt die Prozessvariable fest, die die Verschiebung des Schiebereglers bewirkt oder deren Wert durch die Bewegung des Schiebereglers manipuliert wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Slider.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Slider.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Slider.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Slider.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Slider.StopEdit(System.Boolean)">
      <summary>Beendet die Eingabe</summary>
      <param name="transmitEditResult">True: Der Wert wird geschriebenFalse: Die Eingabe wird verworfen. Der Wert aus dem Variablenkern wird wieder in die Anzeige geladen</param>
    </member>
    <member name="E:VisiWinNET.Forms.Slider.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Slider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Slider.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des Steuerelementes verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Slider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Slider.EditStateChange">
      <summary>Wird ausgelöst, wenn das Objekt über 'StartEdit' oder 'StopEdit' den Editierstatus ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Slider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EditStateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Slider.MaxValueChange">
      <summary>Wird ausgelöst, wenn sich der maximal anzuzeigende Wert (Eigenschaft 'MaxValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Slider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogValueChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Slider.MinValueChange">
      <summary>Wird ausgelöst, wenn sich der minimal anzuzeigende Wert (Eigenschaft 'MinValue') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Slider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AnalogValueChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Slider.Scroll">
      <summary>Wird ausgelöst, wenn der Schieberegler durch Benutzereingaben bewegt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Slider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'SliderScrollEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Slider.VerifyEditValue">
      <summary>Wird nach dem Aufruf der Methode "StopEdit" und vor dem Herunterschreiben in den Variablenkern ausgelöst</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Slider', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VerifyAnalogEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.SliderScrollEventArgs">
      <summary>Klasse, die zusätzliche Informationen zum 'Scroll'-Ereignis eines Schiebereglers zurückgibt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SliderScrollEventArgs.newValue">
      <summary>Gibt den aktuellen Schiebereglerwert zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SliderScrollEventArgs.previousValue">
      <summary>Gibt den vorhergehenden Schiebereglerwert zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SmartForm">
      <summary>Klasse, die zum Laden und Anzeigen einer in VisiWinNET SMART erstellten Formularstrukturdatei (*.SFC) verwendet wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.#ctor">
      <summary>Initialisiert eine neue Instanz der 'SmartForm'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'SmartForm'-Klasse.</summary>
      <param name="fileName">Angabe der SFC-Datei, deren Inhalt die Informationen zu den zu ladenden Steuerelementen und Komponenten enthält.</param>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.BackColor">
      <summary>Legt die Hintergrundfarbe des Formulars fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.Components">
      <summary>Gibt als Auflistung die auf dem Formular platzierten Komponenten zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.ContentPath">
      <summary>Gibt den Standardpfad für die SFC-Datei zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.Events">
      <summary>Verknüpft Formularereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.ForeColor">
      <summary>Legt die Textfarbe des Formulars fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.LoadDefaultContent">
      <summary>Legt fest, ob das Laden der SFC-Datei über die Methode 'LoadDefaultSFC' erfolgt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.ScaleToScreenSize">
      <summary>Legt fest, ob das Formular auf die aktuelle Bildschirmgröße skaliert werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.Site">
      <summary>Ruft die Site des Formulars ab oder legt diese fest.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.EndInit">
      <summary>Beendet die Initialisierungsphase des Formulars</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.LoadDefaultSFC">
      <summary>Lädt die SFC-Datei, deren Standort sich aus dem 'ContentPath' und dem Instanznamen zusammensetzt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.LoadSFC(System.String)">
      <summary>Lädt die angegebene SFC-Datei</summary>
      <param name="sfcFileName">Vollständiger Pfad der zu ladenden Datei</param>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.LoadSFC(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Lädt die angegebene SFC-Datei</summary>
      <param name="sfcFileName">&lt;p class="HDC_Header"&gt;&lt;span class="expandcollapse" tabindex="0"&gt;&lt;img id="descriptionToggle" class="toggle" name="toggleSwitch" src="collapse.jpg"&gt;Beschreibung&lt;/span&gt;&lt;/p&gt;&lt;div id="descriptionSection" class="section" name="collapseableSection"&gt;$Content$ &lt;/div&gt; false</param>
      <param name="host">&lt;p class="HDC_Header"&gt;&lt;span class="expandcollapse" tabindex="0"&gt;&lt;img id="descriptionToggle" class="toggle" name="toggleSwitch" src="collapse.jpg"&gt;Beschreibung&lt;/span&gt;&lt;/p&gt;&lt;div id="descriptionSection" class="section" name="collapseableSection"&gt;$Content$ &lt;/div&gt; false</param>
    </member>
    <member name="T:VisiWinNET.Forms.SmartForm.ComponentList">
      <summary>Auflistung von Komponenten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.ComponentList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'SmartForm.ComponentList'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.SmartForm.ComponentList.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Listenelementes, das zurückgegeben werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.ComponentList.Add(System.ComponentModel.IComponent)">
      <summary>Fügt der Auflistung eine neue Komponente an</summary>
      <param name="component">Anzufügende Komponente</param>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.ComponentList.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden </summary>
    </member>
    <member name="M:VisiWinNET.Forms.SmartForm.ComponentList.Remove(System.ComponentModel.IComponent)">
      <summary>Entfernt eine Komponente aus der Auflistung</summary>
      <param name="component">Zu entfernende Komponente</param>
    </member>
    <member name="T:VisiWinNET.Forms.SmartFormEvents">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.StartForm">
      <summary>Klasse, die das Startformular einer VisiWinNET-Applikation repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StartForm.#ctor">
      <summary>Erzeugt eine neue Instanz der 'StartForm'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.DefInstance">
      <summary>Gibt die aktuell laufende Instanz zurück.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.DisableWindowsKeys">
      <summary>Legt fest, ob die Windowstasten, wie z.B. die Tastenkombination "Steuerung + Alt + Entfernen", während der Laufzeit der Applikation deaktiviert sind.

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.FirstProjectForm">
      <summary>Legt den Namen des Formulares fest, das nach der Anzeige des Startformulares aufgerufen werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.HideOnInitReady">
      <summary>Legt fest, ob nach dem 'InitReady'-Ereignis das Startformular automatisch ausgeblendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.Image">
      <summary>Legt die anzuzeigende Grafik fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.ImageSizesForm">
      <summary>Legt fest, ob beim Laden einer Grafik das Formular entsprechend verkleinert/vergrößert wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.Project">
      <summary>Gibt den Namen des VisiWinNET-Projektes zurück oder legt ihn fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.ShowOnShutDown">
      <summary>Legt fest oder gibt zurück, ob das Startformular beim Beenden der Applikation angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.StartDelay">
      <summary>Legt eine einstellbare minimale Verzögerungszeit (in Sekunden) beim Start der Applikation fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StartForm.UpdateApplicationCulture">
      <summary>Legt fest, ob bei einer Sprachumschaltung dem 'Application'-Objekt die jeweilige Kulturinformation mitgeteilt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StartForm.ShutdownProject">
      <summary>Entlädt die Datenanbindungen und Systemserver und beendet damit die Applikation</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StartForm.ShutdownProjectAndWindows(System.Boolean,System.Boolean)">
      <summary>Beendet die Applikation und das Betriebssystem</summary>
      <param name="reboot">True: Der Rechner wird nach dem Runterfahren neu gebootetFalse Der Rechner wird nicht neu gebootet</param>
      <param name="forceShutdown">True: Andere laufende Applikationen werden ohne weitere Rückfragen beendetFalse: Das Beenden anderer Applikationen muss ggf. bestätigt werden</param>
    </member>
    <member name="E:VisiWinNET.Forms.StartForm.InitReady">
      <summary>Meldet das Ende der Initialisierungsphase der Datenanbindungen und der anderen Systemserver</summary>
      <param name="sender">Angabe des Objektes vom Typ 'StartForm', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ProjectManagerEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.StartForm.ProjectShutdownFinished">
      <summary>Meldet das Ende der Terminierungsphase beim Beenden der Applikation</summary>
      <param name="sender">Angabe des Objektes vom Typ 'StartForm', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.StartForm.ProjectShutdownStarted">
      <summary>Meldet den Beginn der Terminierungsphase beim Beenden der Applikation</summary>
      <param name="sender">Angabe des Objektes vom Typ 'StartForm', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.StateItemEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.StateItemServer">
      <summary>Komponente zum Zugriff auf einen Bereich einer ganzzahligen Prozessvariablen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.#ctor">
      <summary>Erzeugt eine neue Instanz der 'StateItemServer'-Klasse</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.#ctor(System.ComponentModel.IContainer)">
      <summary>Erzeugt eine neue Instanz der 'StateItemServer'-Klasse</summary>
      <param name="container">Containerobjekt, auf dem die Komponente liegen soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.StateItemServer.Events">
      <summary>Verknüpft die Ereignisse der Komponente mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateItemServer.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateItemServer.VWItem">
      <summary>Anbindung an die Prozessdatenbank</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.StateItemServer.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.StateItemServer.BitChange">
      <summary>Wird ausgelöst, wenn sich das über WatchedBitNo festgelegte Bit in der Prozessvariablen ändert.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'StateItemServer', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateItem.BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.StateItemServer.Change">
      <summary>Wird ausgelöst, wenn der Wert im Variablenkern geändert wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'StateItemServer', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateItem.StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.StateLED">
      <summary>Klasse zur Darstellung der Monitorfunktion in Form einer LED in der linken oberen Ecke der Steuerelemente 'Key' und 'Switch'</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateLED.#ctor">
      <summary>Erzeugt eine neue Instanz der 'StateLED'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateLED.BlinkCycle">
      <summary>Legt den Blinkzyklus der LED fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateLED.ColorOff">
      <summary>Legt die Farbe der LED bei zurückgesetztem Prozessvariablenwert und Monitorbit fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateLED.ColorOn">
      <summary>Legt die Farbe der LED bei gesetztem Prozessvariablenwert und Monitorbit fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateLED.DoBlink">
      <summary>Legt fest, ob die LED blinken soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateLED.On">
      <summary>Legt fest, ob die LED die in der Eigenschaft 'ColorOn' angegebene Farbe anzeigen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.StateLED.Visible">
      <summary>Legt fest, ob die LED im Steuerelement angezeigt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.StateLED.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>in diesem Fall wird eine leere Zeichenkette zurückgegeben</returns>
    </member>
    <member name="E:VisiWinNET.Forms.StateLED.ViewChanged">
      <summary>Meldet einen Anzeigewechsel in der LED</summary>
      <param name="sender">Angabe des Objektes vom Typ 'StateLED', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs". Hier sind keine weiteren Informationen zum Ereignis enthalten.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Switch">
      <summary>Steuerelement, das einen Schalter darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Switch'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.BackColorDown">
      <summary>Legt die Hintergrundfarbe des Steuerelementes im gedrückten Zustand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.BackColorOn">
      <summary>Legt die Hintergrundfarbe für den Status 'Ein' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.CurrentState">
      <summary>Gibt den aktuellen Zustand des Steuerelementes zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.Editable">
      <summary>Intern verwendete Eigenschaft</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.EditControl">
      <summary>Legt fest, ob das Steuerelement direkt auf die angeschlossene Prozessvariable schreibt oder ob eine Editierkopie angelegt wird, die erst durch eine weitere Aktion (Methodenaufruf 'StopEdit') in die Prozessdatenbank übernommen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.ForeColorDown">
      <summary>Legt die Schriftfarbe des Steuerelementes im gedrückten Zustand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.ForeColorOn">
      <summary>Legt die Textfarbe für den Status 'Ein' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.ImageDisabledOn">
      <summary>Legt die Grafik fest, die angezeigt wird, wenn die angebundene Prozessvariable den Wert 'True' hat und das Steuerelement deaktiv ist (Enabled = 'False').
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.ImageOn">
      <summary>Legt die Grafik für den Status 'Ein' fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.MonitorLED">
      <summary>Ermöglicht den Zugriff auf ein Objekt vom Typ 'StateLED', das als Kontroll-LED in der oberen linken Ecke des Steuerelementes dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.OffsetText">
      <summary>Legt fest, ob bei gedrückter Taste der Text um jeweils ein Pixel nach unten und rechts gerückt werden soll.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.OptionGroup">
      <summary>Legt die Zugehörigkeit zu einem Feld von Steuerelementen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.ParentForm">
      <summary>Gibt den Container des Steuerelementes zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Switch.VWItemMonitor">
      <summary>Legt die Prozessvariable fest, die für die Monitorfunktion genutzt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.ResetState">
      <summary>Setzt den Anzeigestatus und die angebundene Prozessvariable zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.StartEdit">
      <summary>Startet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.StartOptionGroupEdit">
      <summary>Startet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert für das über OptionGroup festgelegte Feld von Steuerelementen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.StopEdit(System.Boolean)">
      <summary>Beendet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert</summary>
      <param name="transmitEditResult">True: Der Wert der Editierkopie wird zum Variablenkern übertragenFalse: Der Wert der Editierkopie wird verworfen. Der aktuelle Variablenwert aus dem Variablenkern wird in das Steuerelement zurückgeladen.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Switch.StopOptionGroupEdit(System.Boolean)">
      <summary>Beendet das Bearbeiten der Editierkopie vom angebunden Prozessvariablenwert für das über OptionGroup festgelegte Feld von Steuerelementen</summary>
      <param name="transmitEditResult">True: Der Wert der Editierkopie wird zum Variablenkern übertragenFalse: Der Wert der Editierkopie wird verworfen. Der aktuelle Variablenwert aus dem Variablenkern wird in das Steuerelement zurückgeladen.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Switch.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des Steuerelementes verändert wird
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Switch', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Switch.ChangeMonitor">
      <summary>Meldet die Änderung der über 'VWItemMonitor' festgelegten Variablen</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Switch', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Switch.EditStateChange">
      <summary>Wird ausgelöst, wenn das Steuerelement über 'StartEdit' oder 'StopEdit' den Editierstatus ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Switch', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EditStateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Switch.VerifyEditValue">
      <summary>Wird nach dem Aufruf der Methode 'StopEdit' und vor dem Herunterschreiben in den Variablenkern ausgelöst</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Switch', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VerifyDigitalEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Symbol">
      <summary>Steuerelement, das eine Grafik mit einem Farbumschlag darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Symbol.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Symbol'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.BlinkOnFault">
      <summary>Schaltet das Blinken im Fehlerzustand ein oder aus</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.ColorOff">
      <summary>Legt die Füllfarbe fest, die angezeigt wird, wenn die über 'VWItem' und 'VWItemFault' festgelegten Variablen den Zustand '0' einnehmen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.ColorOffFault">
      <summary>Legt die Füllfarbe fest, die angezeigt wird, wenn die über 'VWItem' festgelegte Variable den Zustand '0' und die in 'VWItemFault' festgelegte Variablen den Zustand '1' einnimmt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.ColorOn">
      <summary>Legt die Füllfarbe fest, die angezeigt wird, wenn die über 'VWItem' festgelegte Variable den Zustand '1' und die in 'VWItemFault' festgelegte Variablen den Zustand '0' einnimmt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.ColorOnFault">
      <summary>Legt die Füllfarbe fest, die angezeigt wird, wenn die über 'VWItem' festgelegte Variable den Zustand '1' und die in 'VWItemFault' festgelegte Variablen den Zustand '1' einnimmt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.ColorReplace">
      <summary>Legt die Farbe fest, die in der Originalgrafik durch die in 'ColorOn', 'ColorOnFault', 'ColorOff', 'ColorOffFault' und 'MultiStateColors' festgelegten Farbwerte ersetzt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.Image">
      <summary>Legt die Grafik fest, die auf dem Steuerelement angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.ImageSizeMode">
      <summary>Legt fest, wie sich die Größe von Steuerelement und Grafik beim Laden eines neuen Bildes aneinander anpassen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.Mode">
      <summary>Legt fest, welche Füllfarben in der Anzeige verwendet werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.MultiStateColors">
      <summary>Legt die Farben fest, die als Füllfarben verwendet werden, wenn die 'Mode'-Eigenschaft auf 'MultiState' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.TransparentColor">
      <summary>Gibt eine Farbe an, die in der geladenen Grafik transparent dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.VWItem">
      <summary>Legt die Anbindung an eine Prozessvariable fest, deren Wertänderung im Steuerelement als Farbumschlag dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Symbol.VWItemFault">
      <summary>Legt die Anbindung an eine zweite Prozessvariable fest, deren Wertänderung im Steuerelement als Farbumschlag dargestellt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Symbol.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Symbol.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Symbol.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Symbol.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Symbol.BitChange">
      <summary>Wird ausgelöst, wenn sich das in 'VWItem' festgelegte zu überwachende Bit der Prozessvariablen (Eigenschaft 'WatchedBitNo') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Symbol', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Symbol.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der über 'VWItem' angebundenen Prozessvariablen ändert.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Symbol', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Symbol.ChangeFault">
      <summary>Wird ausgelöst, wenn sich der Wert der über 'VWItemFault' angebundenen Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Symbol', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.TabControl">
      <summary>Steuerelement, das den Wechsel zwischen verschiedenen Ansichten über Karteikarten erlaubt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabControl.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TabControl'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.FocusRect">
      <summary>Legt fest, ob der selektierte Karteireiter durch ein gestricheltes Rechteck innerhalb des Steuerelementes gekennzeichnet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.Image">
      <summary>Legt eine Grafik fest, die angezeigt wird, wenn keine Karteikarte selektiert wurde (SelectedIndex= -1).</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.ImageAlignment">
      <summary>Legt die Ausrichtung der über 'Image' festgelegten Grafik fest. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.LocalizedText">
      <summary>Legt einen sprachumschaltbaren Text fest, der angezeigt wird, wenn keine Karteikarte selektiert wurde ('SelectedIndex'= -1).
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.ScrollButtonSize">
      <summary>Legt die Abmessungen der Schaltfläche zum Scrollen der Karteireiter fest </summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.SelectedIndex">
      <summary>Legt fest, welche Karteikarte aktiv ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.SelectedTab">
      <summary>Gibt zurück, welche Karteikarte aktiv ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TabControlStyle">
      <summary>Legt fest, mit welchem Stil das Steuerelement gezeichnet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TabMaxSize">
      <summary>Legt die maximale Abmessung der Karteireiter fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TabMinSize">
      <summary>Legt die minimale Abmessung der Karteireiter fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TabPadding">
      <summary>Legt den Abstand zwischen den Karteireitern (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TabPages">
      <summary>Enthält die Karteikarten des Steuerelementes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TabPosition">
      <summary>Legt fest. an welcher Kante des Steuerelementes die Karteireiter gezeichnet werden.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TabReactivationMode">
      <summary>Legt fest, welche Karteikarte aktiviert wird, wenn die aktuelle Karteikarte durch eine fehlende Authorisierung deaktiviert oder unsichtbar geschaltet wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.Text">
      <summary>Legt einen Text fest, der angezeigt wird, wenn keine Karteikarte selektiert wurde ('SelectedIndex'= -1).</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TextAlign">
      <summary>Legt die Ausrichtung des über 'Text'/ 'LocalizedText' festgelegten Textes fest. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.TransparentColor">
      <summary>Legt die Farbe fest, die in der über 'Image' festgelegten Grafik als transparent dargestellt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabControl.VariableDeactivationMode">
      <summary>Legt fest, wann und wie die auf dem Steuerelement verwendeten Prozessvariablen beim Variablenkern angemeldet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabControl.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabControl.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabControl.ScrollBack">
      <summary>Führt einen Bildlauf zum vorhergehenden Element über die sichtbaren Karteireiter aus.</summary>
      <returns>True: Der Bildlauf wurde ausgeführt.False: Der Bildlauf wurde nicht ausgeführt. Entweder wurde kein Bildlauf zur Verfügung gestellt oder der erste Karteireiter ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.TabControl.ScrollForward">
      <summary>Führt einen Bildlauf zum nächsten Element über die sichtbaren Karteireiter aus.</summary>
      <returns>True: Der Bildlauf wurde ausgeführt.False: Der Bildlauf wurde nicht ausgeführt. Entweder wurde kein Bildlauf zur Verfügung gestellt oder der letzte Karteireiter ist bereits sichtbar.</returns>
    </member>
    <member name="E:VisiWinNET.Forms.TabControl.SelectedIndexChanged">
      <summary>Wird ausgelöst, wenn die aktuelle 'TabPage' wechselt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TabControl', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.TabControl.SelectedIndexChanging">
      <summary>Wird ausgelöst, bevor die aktuelle TabPage wechselt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TabControl', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'SelectedIndexChangingEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.TabPage">
      <summary>Klasse, die eine Karteikarte eines 'TabControl' darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabPage.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TabPage'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabPage.Authorization">
      <summary>Legt das Verhalten der Karteikarte bezüglich der Anbindung an die Benutzerverwaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabPage.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabPage.Tab">
      <summary>Legt die Eigenschaften für den Karteireiter fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabPage.TabRectangle">
      <summary>Gibt die Position und Größe des Karteireiters im Steuerelement zurück.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabPage.TabVisible">
      <summary>Gibt zurück, ob der Karteireiter dieser Karte aktuell sichtbar ist.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabPage.Visible">
      <summary>Legt fest oder gibt zurück, ob das Objekt sichtbar ist</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabPage.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabPage.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabPage.Initialize">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="E:VisiWinNET.Forms.TabPage.LayoutChanged">
      <summary>Wird ausgelöst, wenn durch die Änderung von Eigenschaften die Neuberechnung der Karteireiter erforderlich wird.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.TabPage.PaintBackground">
      <summary>Wird ausgelöst, wenn der Hintergrund des Steuerelementes gezeichnet wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ PaintEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWinNET.Forms.TabPage.ViewChanged">
      <summary>Wird ausgelöst, wenn sich Eigenschaften geändert haben, die ein Neuzeichnen erfordern</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TabPage', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.TabPageCollection">
      <summary>Auflistung, die die Karteikarten eines 'TabControl'-Steuerelementes enthält</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabPageCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TabPageCollection'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabPageCollection.#ctor(VisiWinNET.Forms.TabControl)">
      <summary>Initialisiert eine neue Instanz der 'TabPageCollection'-Klasse.</summary>
      <param name="owner">Angabe des Steuerelementes, dem die Auflistung zugeordnet werden soll </param>
    </member>
    <member name="P:VisiWinNET.Forms.TabPageCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Elementeindex der Karteikarte</param>
    </member>
    <member name="M:VisiWinNET.Forms.TabPageCollection.Add(VisiWinNET.Forms.TabPage)">
      <summary>Fügt der Auflistung am Ende eine neue Karteikarte hinzu</summary>
      <param name="tabPage">Hinzuzufügendes TabPage-Objekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.TabPageCollection.AddRange(VisiWinNET.Forms.TabPage[])">
      <summary>Fügt der Auflistung mehrere neue Karteikarten hinzu</summary>
      <param name="tabPages">Feld von hinzuzufügenden TabPage-Objekten.</param>
    </member>
    <member name="M:VisiWinNET.Forms.TabPageCollection.IndexOf(VisiWinNET.Forms.TabPage)">
      <summary>Gibt den Elementeindex des übergebenen TabPage-Objektes zurück.</summary>
      <returns>Der Elementeindex des Objektes oder -1, wenn das Objekt nicht in der Liste existiert.</returns>
      <param name="tabPage">Das Objekt, dessen Index zu ermitteln ist.</param>
    </member>
    <member name="M:VisiWinNET.Forms.TabPageCollection.Remove(VisiWinNET.Forms.TabPage)">
      <summary>Löscht die angegebene Karteikarte aus der Auflistung</summary>
      <param name="tabPage">Zu entfernendes Objekt.</param>
    </member>
    <member name="E:VisiWinNET.Forms.TabPageCollection.CollectionChanged">
      <summary>Wird ausgelöst, wenn sich der Inhalt der Auflistung verändert hat</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TabPageCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Index des veränderten Auflistungselementes</param>
    </member>
    <member name="E:VisiWinNET.Forms.TabPageCollection.LayoutChanged">
      <summary>Wird ausgelöst, wenn durch die Änderung von Eigenschaften die Neuberechnung der Karteireiter erforderlich wird.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.TabPageCollection.ViewChanged">
      <summary>Wird ausgelöst, wenn sich Eigenschaften geändert haben, die ein Neuzeichnen erfordern</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TabPageCollection', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.TabProperties">
      <summary>Kapselt die Eigenschaften eines Karteireiters</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TabProperties'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabProperties.#ctor(VisiWinNET.Forms.TabPage)">
      <summary>Initialisiert eine neue Instanz der 'TabProperties'-Klasse.</summary>
      <param name="parent">Verweis auf die TabPage-Instanz, für die die gekapselten Eigenschaften gelten</param>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.BackColor">
      <summary>Legt die Hintergrundfarbe des Karteireiters fest, wenn die Karteikarte nicht selektiert ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.BackColorSelected">
      <summary>Legt die Hintergrundfarbe des Karteireiters fest, wenn die Karteikarte selektiert ist
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.Elevation">
      <summary>Unterstützt die VisiWin Infrastruktur. Bitte nicht verwenden.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.Extent">
      <summary>Unterstützt die VisiWin Infrastruktur. Bitte nicht verwenden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.Font">
      <summary>Legt die Schriftart fest, die für die Beschriftung des Karteireiters verwendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.ForeColor">
      <summary>Legt die Textfarbe im Karteireiter fest, wenn die Karteikarte nicht selektiert ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.ForeColorSelected">
      <summary>Legt die Textfarbe im Karteireiter fest, wenn die Karteikarte selektiert ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.Image">
      <summary>Legt eine Grafik fest, die auf dem Karteireiter dargestellt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.ImageAlign">
      <summary>Legt fest, wo die über 'Image' festgelegte Grafik auf dem Karteireiter dargestellt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.ImageSelected">
      <summary>Legt die Grafik auf dem Karteireiter fest, wenn die Karteikarte selektiert ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.LocalizedText">
      <summary>Legt den auf dem Karteireiter angezeigten sprachumschaltbaren Text fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.Size">
      <summary>Gibt die Größe des Karteireiters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.Text">
      <summary>Legt den auf dem Karteireiter angezeigten festen Text fest, wenn in 'LocalizedText' keine Angaben gemacht werden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.TextAlign">
      <summary>Legt fest, wo der Text auf dem Karteireiter dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.TransparentColor">
      <summary>Legt die Farbe fest, die als transparente Farbe in den Grafiken verwendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TabProperties.UseMnemonic">
      <summary>Legt fest, ob die im Text enthaltene Zugriffstaste verwendet werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabProperties.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TabProperties.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Ein Wert der die Einstellungen der TabPage im Eigenschaftenfenster repräsentiert</returns>
    </member>
    <member name="E:VisiWinNET.Forms.TabProperties.PropertyChanged">
      <summary>Tritt auf, wenn sich ein Eigenschaftenwert ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TabProperties', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.TabProperties.SizeChanged">
      <summary>Wird ausgelöst, wenn die Größe des Steuerelementes geändert wird.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.TextBinding">
      <summary>Kapselt die Informationen zur Bindung einer Steuerelementeeigenschaft an einen Prozessvariablenwert,. Der Datentyp der Eigenschaft muss dabei 'String' sein. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.DataAccess.DigitalItem,VisiWinNET.Forms.TextCollection)">
      <summary>Initialisiert eine neue Instanz der 'TextBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="vwItemfault">Wert für die 'VWItemFault'-Eigenschaft</param>
      <param name="texts">Wert für die 'Texts'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.#ctor(System.String,VisiWinNET.DataAccess.StateItem,VisiWinNET.DataAccess.DigitalItem,VisiWinNET.Forms.PropertyBinding.TextList)">
      <summary>Initialisiert eine neue Instanz der 'TextBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwItem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="vwItemfault">Wert für die 'VWItemFault'-Eigenschaft</param>
      <param name="textList">Wert für die 'TextList'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'TextBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TextBinding'-Klasse.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextBinding.TextList">
      <summary>Legt eine 'TextList'-Komponente fest, die (alternativ zur Verwendung der 'Texts'-Eigenschaft) die Zuordnung von festen oder sprachumschaltbaren Texten zu Prozessvariablenwerten definiert. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextBinding.Texts">
      <summary>Beschreibt eine Liste von festen oder sprachumschaltbaren Texten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextBinding.Value">
      <summary>Legt den zum Prozesvariablenwert zugeordneten Eigenschaftenwert fest oder gibt ihn zurück

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextBinding.VWItem">
      <summary>Auswahl einer Prozessvariablen, deren Wert mit der gewählten Eigenschaft verknüpft wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextBinding.VWItemFault">
      <summary>Legt eine zweite Variable fest, deren Wert eine zusätzliche Auswahl aus den Texten einer 'TextList'-Komponente erlaubt. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft enthält</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.TextBinding.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="T:VisiWinNET.Forms.TextRegion">
      <summary>Klasse, die einen Ausgabebereich in den Steuerelementen 'VarIn' und 'VarOut' repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextRegion.#ctor">
      <summary>Erzeugt eine neue Instanz der 'TextRegion'-Klasse.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextRegion.#ctor(System.Windows.Forms.Control)">
      <summary>Erzeugt eine neue Instanz der 'TextRegion'-Klasse unter Angabe des Elternelement, das die TextRegion enthält.
</summary>
      <param name="parent">Das Elternelement.</param>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.BackColor">
      <summary>Legt die Hintergrundfarbe des Ausgabebereiches fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.ClientRect">
      <summary>Gibt ein 'Rectangle'-Objekt zurück, dass Abmessungen und Position des zur Verfügung stehenden Ausgabebereiches enthält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.DisplayText">
      <summary>Gibt den aktuell im Textfeld angezeigten Text zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.ExternalText">
      <summary>Gibt einen Text an, der die in 'Text' angegebene Anzeige ersetzt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Font">
      <summary>Legt die Schriftart fest oder gibt sie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.ForeColor">
      <summary>Legt die Textfarbe im Ausgabebereich fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Height">
      <summary>Gibt die Höhe des 'TextRegion'-Objektes zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.IsVisible">
      <summary>Gibt zurück, ob das Textfeld sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Location">
      <summary>Gibt die Koordinaten der linken oberen Ecke des 'TextRegion'-Objektes bezogen auf das verwendende Steuerelement zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Parent">
      <summary>Legt die Referenz auf das Steuerelement fest, in dem die TextRegion angezeigt wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.SizeRatio">
      <summary>Gibt das Größenverhältnis von Ausgabebereich und Steuerelement an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Text">
      <summary>Ermöglicht die Einblendung eines festen Textes oder eines sprachumschaltbaren Textes aus der Gruppe "Benutzertexte"</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.TextAlign">
      <summary>Legt die horizontale Ausrichtung des Textes im Ausgabebereich fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Visibility">
      <summary>Legt fest, wie die Sichtbarkeit des Textfeldes im Steuerelement gesteuert werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TextRegion.Width">
      <summary>Gibt die Breite des 'TextRegion'-Objektes zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextRegion.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TextRegion.Draw(System.Drawing.Graphics)">
      <summary>Zeichnet das Textfeld in das angegebene 'Graphics' Objekt</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.TextRegion.DrawRegion(System.Drawing.Graphics,System.String,System.Boolean)">
      <summary>Führt das Zeichnen des Ausgabebereiches aus</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
      <param name="text">Text, der angezeigt werden soll</param>
      <param name="drawText">True: der angegebene Text wird gezeichnetFalse: der angegebene Text wird nicht gezeichnet</param>
    </member>
    <member name="M:VisiWinNET.Forms.TextRegion.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>in diesem Fall wird eine leere Zeichenkette zurückgegeben</returns>
    </member>
    <member name="E:VisiWinNET.Forms.TextRegion.ViewChanged">
      <summary>Wird ausgelöst, wenn sich die Anzeige ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TextRegion', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Timer">
      <summary>Komponente, die ein Ereignis in einem benutzerdefinierten Zyklus auslöst</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Timer'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'Timer'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Timer.Events">
      <summary>Verknüpft die Ereignisse der Komponente mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Timer.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Timer.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Timer.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="T:VisiWinNET.Forms.TimerEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TimeSettings">
      <summary>Klasse, die die Wiederholgeschwindigkeit der Up-/Down-Schaltflächen im 'DateTimeIn' steuert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TimeSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TimeSettings'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TimeSettings.Delay1">
      <summary>Legt die Verzögerung für die erste Geschwindigkeitsstufe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TimeSettings.Delay2">
      <summary>Legt die Verzögerung für die zweite Geschwindigkeitsstufe fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TimeSettings.Delay3">
      <summary>Legt die Verzögerung für die dritte Geschwindigkeitsstufe fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TimeSettings.Interval1">
      <summary>Legt das Änderungsinterval der ersten Geschwindigkeitsstufe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TimeSettings.Interval2">
      <summary>Legt das Änderungsinterval der zweiten Geschwindigkeitsstufe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TimeSettings.Interval3">
      <summary>Legt das Änderungsinterval der dritten Geschwindigkeitsstufe fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TouchKeyboard">
      <summary>Komponente zum Aufruf der Bildschirmtastatur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TouchKeyboard.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TouchKeyboard'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TouchKeyboard.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'TouchKeyboard'-Klasse.</summary>
      <param name="container">Container, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.ActivationMode">
      <summary>Legt fest, auf welche Aktion in einem Steuerelement die Bildschirmtastatur aufgerufen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.AlphaNumericalPad">
      <summary>Legt Eigenschaften für die alfanumerische Tastatur fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.AlphaPad">
      <summary>Legt den Namen des Formulars fest, das als Bildschirmtastatur für Zeichenketten verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.BinaryPad">
      <summary>Legt Eigenschaften für die Binärtastatur fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.Enabled">
      <summary>Legt fest, ob die Bildschirmtastatur angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.HexadecimalPad">
      <summary>Legt Eigenschaften für die Hexadezimaltastatur fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.IsAvailable">
      <summary>(statische Eigenschaft) Gibt zurück, ob in der Applikation eine 'TouchKeyboard'-Komponente vorhanden ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.KeySize">
      <summary>Legt die Größe der Bildschirmtastatur fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.KeySizeAlphaPad">
      <summary>Legt die Größe der Bildschirmtastatur für die Zeichenketteneingabe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.KeySizeNumPad">
      <summary>Legt die Größe der Bildschirmtastatur für die numerische Eingabe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.Location">
      <summary>Legt die Position der Bildschirmtastatur fest, wenn der Positionierungsmodus (Eigenschaft 'Position') auf 'Manual' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.Modal">
      <summary>Legt fest, ob die Bildschirmtastatur modal aufgerufen werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.NumericalPad">
      <summary>Legt Eigenschaften für die numerische Tastatur fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.NumPad">
      <summary>Legt den Namen des Formulars fest, das als Bildschirmtastatur für numerische Werte verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.PadVisible">
      <summary>Gibt zurück, ob die Bildschirmtastatur gerade sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.TouchKeyboard.Position">
      <summary>Legt den Positionierungsmodus der Bildschirmtastatur fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TouchKeyboard.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.TouchKeyboard.ControlClicked(System.Windows.Forms.Control)">
      <summary>Ruft die Bildschirmtastatur auf, wenn in der 'TouchKeyboard'-Komponente der 'ActivationMode' auf 'OnClick' eingestellt ist</summary>
      <param name="editControl">Angabe des Steuerelementes, dessen Wert zu bearbeiten ist</param>
    </member>
    <member name="M:VisiWinNET.Forms.TouchKeyboard.ControlDoubleClicked(System.Windows.Forms.Control)">
      <summary>Ruft die Bildschirmtastatur auf, wenn in der 'TouchKeyboard'-Komponente der 'ActivationMode' auf 'OnDoubleClick' eingestellt ist</summary>
      <param name="editControl">Angabe des Steuerelementes, dessen Wert zu bearbeiten ist</param>
    </member>
    <member name="M:VisiWinNET.Forms.TouchKeyboard.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="T:VisiWinNET.Forms.UserControl">
      <summary>Benutzersteuerelement mit VisiWin Basisfunktionen.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserControl.#ctor">
      <summary>Erzeugt eine neue Instanz der 'UserControl'-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.Authorization">
      <summary>Legt das Verhalten des Steuerelementes bezüglich der Anbindung an die Benutzerverwaltung fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.BackgroundImage">
      <summary>Legt eine Grafik fest, die als Hintergrund im Steuerelement angezeigt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.BackgroundImageLayout">
      <summary>Legt fest oder gibt zurück, wie das Hintergrundbild dargestellt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.Blink">
      <summary>Legt das Verhalten des Steuerelementes bezüglich des applikationsweit synchronisierten Blinken fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.Border">
      <summary>Legt die Umrandung des Steuerelementes fest. </summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.DisplayRectangle">
      <summary>Gibt die Position und Abmessung des Clientbereiches (Inhalt ohne Rahmen) im Steuerelement an.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.Events">
      <summary>Verknüpft Steuerelementeereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserControl.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserControl.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserControl.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserControl.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserControl.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserControl.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll.
</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserControl.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur.
</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.UserControl.AuthorizationChanged">
      <summary>Wird ausgelöst, wenn sich durch das An-/Abmelden eines Benutzers eine Änderung der Darstellung ergibt.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'AuthorizationEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.UserControl.DoBlink">
      <summary>Meldet den Phasenwechsel des applikationsweit synchronisierten Blinkens.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'BlinkEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.UserControl.PaintBackground">
      <summary>Wird ausgelöst, wenn der Hintergrund des Steuerelementes gezeichnet wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ PaintEventArgs mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.UserManagementDialogs">
      <summary>Komponente, die die Dialoge der Benutzerverwaltung zur Verfügung stellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.#ctor">
      <summary>Initialisiert eine neue Instanz der 'UserManagementDialogs'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'UserManagementDialogs'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.ConfigRightDialog">
      <summary>Parametriert den Dialog zum Ändern der Parameter eines Rechtes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.ConfigRightsDialog">
      <summary>Parametriert den Dialog zum Administrieren der Rechte des Projektes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.ConfigUserDialog">
      <summary>Parametriert den Dialog zum Ändern der Parameter eines Benutzers</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.ConfigUserGroupDialog">
      <summary>Parametriert den Dialog zum Ändern der Parameter eines Benutzers</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.ConfigUserGroupsDialog">
      <summary>Parametriert den Dialog zum Administrieren der Benutzergruppen des Projektes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.ConfigUsersDialog">
      <summary>Parametriert den Dialog zum Administrieren der Benutzer des Projektes</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.FontClassButtons">
      <summary>Legt die Fontklassendefinition für die Schaltflächen der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.FontClassCaptions">
      <summary>Legt die Fontklassendefinition für die Titelzeile der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.FontClassInputs">
      <summary>Legt die Fontklassendefinition für die Eingabeelemente der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.FontClassLabels">
      <summary>Legt die Fontklassendefinition für die Beschriftungen der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.MinHeightButtons">
      <summary>Legt die minimale Höhe der Schaltflächen auf den Dialogen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.MinHeightInputs">
      <summary>Legt die minimale Höhe der Eingabeelemente auf den Dialogen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.Padding">
      <summary>Legt den Abstand (in Pixeln) der einzelnen Elemente auf den Dialogen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagementDialogs.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowAddRight">
      <summary>Zeigt den Dialog zum Hinzufügen eines neuen Rechtes an</summary>
      <returns>Ein Objekt, das die eingestellten Parameter des neuen Rechtes kapselt. Die Methode gibt 'Nothing' zurück, wenn der Dialog abgebrochen wurde.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowAddUser">
      <summary>Zeigt den Dialog zum Hinzufügen eines neuen Benutzer an</summary>
      <returns>Ein Objekt, das die eingestellten Parameter des neuen Benutzers kapselt. Die Methode gibt 'Nothing' zurück, wenn der Dialog abgebrochen wurde.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowAddUserGroup">
      <summary>Zeigt den Dialog zum Hinzufügen einer neuen Benutzergruppe an</summary>
      <returns>Ein Objekt, das die eingestellten Parameter der neuen Benutzergruppe kapselt. Die Methode gibt 'Nothing' zurück, wenn der Dialog abgebrochen wurde.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowChangePassword">
      <summary>Zeigt den Dialog zum Ändern eines Passwortes für den aktuellen Benutzer an.</summary>
      <returns>DialogResult.Cancel, wenn der Vorgang erfolglos abgebrochen wurde, ansonsten DialogResult.OK</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowChangePassword(System.String)">
      <summary>Zeigt den Dialog zum Ändern eines Passwortes für einen Benutzer an.</summary>
      <returns>DialogResult.Cancel, wenn der Vorgang erfolglos abgebrochen wurde, ansonsten DialogResult.OK</returns>
      <param name="userName">Anmeldename des Benutzers, dessen Passwort zu ändern sind.Wird kein Benutzer angegeben, wird der Passwortänderungsdialog für den aktuell im System angemeldeten Benutzer angezeigt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowChangeRight(System.String)">
      <summary>Zeigt den Dialog zum Ändern der Parameter eines Rechtes an</summary>
      <returns>Ein Objekt, das die eingestellten Parameter des geänderten Rechtes kapselt. Die Methode gibt 'Nothing' zurück, wenn der Dialog abgebrochen wurde.</returns>
      <param name="right">Name des Rechtes, dessen Parameter zu ändern sind</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowChangeUser(System.String)">
      <summary>Zeigt den Dialog zum Ändern der Parameter eines Benutzers an</summary>
      <returns>Ein Objekt, das die eingestellten Parameter des geänderten Benutzers kapselt</returns>
      <param name="userName">Anmeldename des Benutzers, dessen Parameter zu ändern sind</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowChangeUserGroup(System.String)">
      <summary>Zeigt den Dialog zum Ändern der Parameter einer Benutzergruppe an</summary>
      <returns>Ein Objekt, das die eingestellten Parameter der geänderten Benutzergruppe kapselt</returns>
      <param name="userGroup">Name der Benutzergruppe, deren Parameter zu ändern sind</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowLogOn(System.Boolean)">
      <summary>Zeigt den Dialog zum Anmelden eines Benutzers an</summary>
      <returns>DialogResult.Cancel, wenn der Anmeldevorgang erfolglos abgebrochen wurde DialogResult.OK, wenn die Anmeldung erfolgen konnte</returns>
      <param name="showLogOff">True (oder keine Angabe): Die "Abmelden"-Schaltfläche wird auf dem Dialog sichtbar geschaltetFalse : Die "Abmelden"-Schaltfläche wird unsichtbar geschaltet</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowLogOn">
      <summary>Zeigt den Dialog zum Anmelden eines Benutzers an</summary>
      <returns>DialogResult.Cancel, wenn der Anmeldevorgang erfolglos abgebrochen wurde DialogResult.OK, wenn die Anmeldung erfolgen konnte</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowRights">
      <summary>Zeigt den Dialog zum Administrieren der Rechte des Projektes an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowUserGroups">
      <summary>Zeigt den Dialog zum Administrieren der Benutzergruppen des Projektes an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowUsers">
      <summary>Zeigt den Dialog zum Administrieren der Benutzer des Projektes an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagementDialogs.ShowVerify">
      <summary>Zeigt den Dialog zum Verifizieren von Informationen eines Benutzers an</summary>
      <returns>DialogResult.Cancel, wenn der Dialogaufruf abgebrochen wurdew DialogResult.OK, wenn der zu verifizierende Benutzer gefunden wurde</returns>
    </member>
    <member name="T:VisiWinNET.Forms.VarIn">
      <summary>Steuerelement zur alphanumerischen Ein-/Ausgabe von Prozesswerten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.#ctor">
      <summary>Erzeugt eine neue Instanz der 'VarIn'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.CharacterFilter">
      <summary>Legt eine Eingabefilter für Zeichenketten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.DataBackColor">
      <summary>Gibt die Hintergrundfarbe der Variablenwertanzeige an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.DataBackColorDisabled">
      <summary>Legt die Hintergrundfarbe im Bereich der Werteanzeige fest, wenn das Steuerelement deaktiviert ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.DataBorder">
      <summary>Legt die Umrandung der Variablenwertanzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Focused">
      <summary>Gibt zurück, ob das Steuerelement zur Zeit die Eingabemarke der Applikation besitzt.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.FocusNext">
      <summary>Legt fest, ob der Focus nach Schreiben des Wertes zum nächsten Steuerelement in der TAB-Reihenfolge springen soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Font">
      <summary>Legt die Schriftart fest, die zur textuellen Darstellung verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.ForeColor">
      <summary>Legt die Textfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.ForeColorDisabled">
      <summary>Legt die Schriftfarbe für den deaktivierte Zustand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Format">
      <summary>Legt das Ein-/Ausgabeformat bei numerischen Prozesswerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.InnerMargin">
      <summary>Legt den Abstand zwischen den Ein-/Ausgabebereichen und den äußeren Abmessungen des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Label">
      <summary>Legt das Aussehen des Bereiches fest, der die Prozessvariablenbeschreibung darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.LimitCheck">
      <summary>Legt fest, ob und wie eine Eingabebereichsbegrenzung durchgeführt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.LimitMax">
      <summary>Legt die obere Eingabegrenze für das Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.LimitMin">
      <summary>Legt die untere Eingabegrenze für das Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Padding">
      <summary>Legt einen Abstand (in Pixeln) zwischen den einzelnen Ein-/Ausgabebereichen des Steuerelementes (Text-/Wert-/Einheitenanzeige) fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.PasswordChar">
      <summary>Legt das Zeichen fest, das bei einer maskierten Eingabe verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.PopupInfo">
      <summary>Legt fest, welche 'PopUpInfo'-Komponente das Infofenster beschreibt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.RegionLayout">
      <summary>Legt die Position des Bereiches fest, der die Prozessvariablenbeschreibung enthält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.RestoreOnLostFocus">
      <summary>Legt fest, ob nicht bestätigte Eingaben zurückgesetzt werden, wenn das Steuerelement die Eingabemarke verliert</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.SelectTextOnGotFocus">
      <summary>Legt fest, ob der Wert im Steuerelement beim Erhalt des Fokus selektiert werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Text">
      <summary>Legt den Wert der angebundenen Variable als Zeichenkette fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.TextAlign">
      <summary>Gibt die horizontale Ausrichtung der Variablenwertanzeige an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.Unit">
      <summary>Legt Aussehen und Inhalt des Bereiches fest, der den Einheitentext darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.UseItemLimits">
      <summary>Legt fest, ob die in der Prozessvariablendefinition festgelegten Grenzwerte anstelle der im Steuerelement festgelegten Grenzwerte verwendet werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.UseItemUnit">
      <summary>Legt fest, ob als Einheitentext der Text der aktiven Einheitenumrechnung angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.UseTouchKeyboard">
      <summary>Legt fest, ob für das Steuerelement die Bildschirmtastatur zur Verfügung stehen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.VWItem">
      <summary>Anbindung an eine Prozessvariable</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarIn.WriteOnReturn">
      <summary>Legt fest, ob ein neu eingegebener Wert bei Drücken der RETURN/ENTER-Taste in die angebundene Prozessvariable geschrieben werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.Decrement(System.Double)">
      <summary>Dekrementiert den im Steuerelement angezeigten Wert</summary>
      <param name="value">Gibt an, um wieviel der Wert zu dekrementieren ist.</param>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.FormatValueString(System.Object)">
      <summary>Gibt den entsprechend der Einstellung der Eigenschaft 'Format' formatierten Wert als Zeichenkette zurück</summary>
      <returns>Die Zeichenkette, die den übergebenen Wert in der entsprechenden Formatierung enthält.</returns>
      <param name="rawValue">Zu formatierender Wert.</param>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.Increment(System.Double)">
      <summary>Inkrementiert den im Steuerelement angezeigten Wert</summary>
      <param name="value">Gibt an, um wieviel der Wert zu inkrementieren ist.</param>
    </member>
    <member name="M:VisiWinNET.Forms.VarIn.StopEdit(System.Boolean)">
      <summary>Beendet die Eingabe</summary>
      <param name="transmitEditResult">True: Der Wert wird geschriebenFalse: Die Eingabe wird verworfen. Der Wert aus dem Variablenkern wird wieder in die Anzeige geladen</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.ChangedByEditing">
      <summary>Wird ausgelöst, wenn der verknüpfte Prozessvariablenwert über die Funktionen des Steuerelementes verändert wird. 
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.EditStateChange">
      <summary>Wird ausgelöst, wenn das Steuerelement den Editierstatus ändert
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EditStateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.InvalidInput">
      <summary>Wird ausgelöst, wenn ein in das Steuerelement eingegebenes Zeichen gegen die in 'CharacterFilter' festgelegte Filterregel verstößt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'InvalidInputEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.Limit">
      <summary>Wird ausgelöst, wenn eine Eingabegrenze über-/unterschritten wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VarInLimitEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.LimitMaxViolation">
      <summary>Wird ausgelöst, wenn der in LimitMax angegebene Grenzwert überschritten wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VarInLimitEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.LimitMinViolation">
      <summary>Wird ausgelöst, wenn der in 'LimitMin' angegebene Grenzwert unterschritten wird.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VarInLimitEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.ValidInput">
      <summary>Wird ausgelöst, wenn ein eingegebenes Zeichen nicht gegen die im Steuerelement festgelegten Eingeberegeln verstößt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.VarIn.VerifyEditValue">
      <summary>Wird nach dem Bestätigen der Eingabe (Return-Taste oder Aufruf der Methode 'StopEdit') und vor dem Herunterschreiben in den Variablenkern ausgelöst</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarIn', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'VerifyEditValueEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.VarInEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.VarInLimitEventArgs">
      <summary>Stellt Daten für das 'Limit'-Ereignis bereit.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarInLimitEventArgs.Direction">
      <summary>Gibt zurück, welche Grenze überschritten wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarInLimitEventArgs.FormattedInputValue">
      <summary>Gibt den über die Einheitenumrechnung formatierten Eingabewert zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarInLimitEventArgs.FormattedLimitMax">
      <summary>Gibt die über die Einheitenumrechnung formatierte obere Eingabegrenze zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarInLimitEventArgs.FormattedLimitMin">
      <summary>Gibt die über die Einheitenumrechnung formatierte untere Eingabegrenze zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarInLimitEventArgs.InputValue">
      <summary>Gibt den eingegeben Wert an (wie er in den Variablenkern übertragen werden würde)</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarInLimitEventArgs.LimitMax">
      <summary>Gibt den Wert der oberen Eingabegrenze an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarInLimitEventArgs.LimitMin">
      <summary>Gibt den Wert der unteren Eingabegrenze an</summary>
    </member>
    <member name="T:VisiWinNET.Forms.VarOut">
      <summary>Steuerelement zur alphanumerischen Ausgabe von Prozesswerten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarOut.#ctor">
      <summary>Erzeugt eine neue Instanz der 'VarOut'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.DataBackColor">
      <summary>Gibt die Hintergrundfarbe der Variablenwertanzeige an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.DataBorder">
      <summary>Legt die Umrandung der Variablenwertanzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.Format">
      <summary>Legt das Ein-/Ausgabeformat bei numerischen Prozesswerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.InnerMargin">
      <summary>Legt den Abstand zwischen den Ein-/Ausgabebereichen und den äußeren Abmessungen des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.Label">
      <summary>Legt das Aussehen des Bereiches fest, der die Prozessvariablenbeschreibung darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.Padding">
      <summary>Legt einen Abstand (in Pixeln) zwischen den einzelnen Ein-/Ausgabebereichen des Steuerelementes (Text-/Wert-/Einheitenanzeige) fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.RegionLayout">
      <summary>Legt die Position des Bereiches fest, der die Prozessvariablenbeschreibung enthält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.Text">
      <summary>Gibt zur Laufzeit den im Steuerelement dargestellten Prozessvariablenwert als Text zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.TextAlign">
      <summary>Gibt die horizontale Ausrichtung der Variablenwertanzeige an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.Unit">
      <summary>Legt Aussehen und Inhalt des Bereiches fest, der den Einheitentext darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.UseItemUnit">
      <summary>Legt fest, ob als Einheitentext der Text der aktiven Einheitenumrechnung angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VarOut.VWItem">
      <summary>Anbindung an eine Prozessvariable</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarOut.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarOut.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VarOut.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.VarOut.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.VarOut.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'VarOut', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'ChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.VWDigitalItemBinding">
      <summary>Kapselt die Informationen zur Bindung einer Steuerelementeeigenschaft an einen Prozessvariablenwert,. Der Datentyp der Eigenschaft muss dabei ein Boolean-Wert sein.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.#ctor(System.String,System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'VWDigitalItemBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwitem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="bitNumber">Wert für die 'BitNumber'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'VWDigitalItemBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der 'VWDigitalItemBinding'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.#ctor(System.String,System.String,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'VWDigitalItemBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwitem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="bitNumber">Wert für die 'BitNumber'-Eigenschaft</param>
      <param name="invert">Wert für die 'Invert'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'VWDigitalItemBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwitem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="bitNumber">Wert für die 'BitNumber'-Eigenschaft</param>
      <param name="invert">Wert für die 'Invert'-Eigenschaft</param>
      <param name="recipeMember">Wert für die 'RecipeMember'-Eigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.VWDigitalItemBinding.BitNumber">
      <summary>Legt fest, welches Bit in der angebundenen Prozessvariablen verwendet wird, um den Eigenschaftenwert umzuschalten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VWDigitalItemBinding.Invert">
      <summary>Legt fest, ob der Wert der Prozessvariablen direkt oder invertiert auf die angebundene Eigenschaft geschrieben wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VWDigitalItemBinding.RecipeMember">
      <summary>Legt fest, ob zur Laufzeit die Datenquelle des Objektes umschaltbar sein soll. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VWDigitalItemBinding.Value">
      <summary>Legt den zum Prozesvariablenwert zugeordneten Eigenschaftenwert fest oder gibt ihn zurück

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VWDigitalItemBinding.VWItem">
      <summary>Auswahl einer Prozessvariablen, deren Wert mit der gewählten Eigenschaft verknüpft wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft enthält</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.VWDigitalItemBinding.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="T:VisiWinNET.Forms.VWItemBinding">
      <summary>Kapselt die Informationen zur Bindung einer Steuerelementeeigenschaft an einen Prozessvariablenwert,. Der Datentyp der Eigenschaft muss dabei numerisch sein. Der Prozessvariablenwert wird direkt auf den Eigenschaftenwert geschrieben</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'VWItemBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der 'VWItemBinding'-Klasse.</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwitem">Wert für die 'VWItem'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der 'VWItemBinding'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'VWItemBinding'-Klasse.
</summary>
      <param name="propertyName">Name der Steuerelementeeigenschaft</param>
      <param name="vwitem">Wert für die 'VWItem'-Eigenschaft</param>
      <param name="recipeMember">Legt fest, ob zur Laufzeit die Datenquelle des Objektes umschaltbar sein soll. </param>
    </member>
    <member name="P:VisiWinNET.Forms.VWItemBinding.RecipeMember">
      <summary>Legt fest, ob zur Laufzeit die Datenquelle des Objektes umschaltbar sein soll. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VWItemBinding.Value">
      <summary>Legt den zum Prozesvariablenwert zugeordneten Eigenschaftenwert fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.VWItemBinding.VWItem">
      <summary>Auswahl einer Prozessvariablen, deren Wert mit der gewählten Eigenschaft verknüpft wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.Attach">
      <summary>Meldet die enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.Detach">
      <summary>Meldet die enthaltenen Variablenbindungen vom Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.Initialize(System.Object)">
      <summary>Übergibt eine Referenz auf das Objekt, das die gebundene Eigenschaft enthält</summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.VWItemBinding.UnInitialize(System.Object)">
      <summary>Signalisiert die Ungültigkeit der Referenz auf das Objekt, das die gebundene Eigenschaft enthält. </summary>
      <param name="component">Objekt, das die gebundene Eigenschaft enthält</param>
    </member>
    <member name="T:VisiWinNET.Forms.CellChangedEventHandler">
      <summary>Delegat für das Ereignis 'CellChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ColorCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'CollectionChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeInChangeEventHandler">
      <summary>Delegat für das Ereignis 'Change'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeInVerifyEditValueEventHandler">
      <summary>Delegat für das Ereignis 'VerifyEditValue'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DropDownClosedEventHandler">
      <summary>Delegat für das Ereignis 'DropDownClosed'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DropDownEventHandler">
      <summary>Delegat für das Ereignis 'DropDown'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.FormChangedEventHandler">
      <summary>Delegat für das Ereignis 'FormChanged' in BaseForm.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.FormChangingEventHandler">
      <summary>Delegat für das Ereignis 'FormChanging' in BaseForm.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ImageCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'CollectionChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.LimitCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'CollectionChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.LimitEventHandler">
      <summary>Delegat für das Ereignis 'Limit'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ListItemCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'CollectionChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ProjectFormChangedEventHandler">
      <summary>Delegat für das Ereignis 'FormChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ProjectFormChangingEventHandler">
      <summary>Delegat für das Ereignis 'FormChanging' in ProjectForms.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBindingChangedHandler">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollEventHandler">
      <summary>Delegat für das Ereignis 'Scroll'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SliderScrollEventHandler">
      <summary>Delegat für die Ereignisse 'SliderScroll' und 'Scroll'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TabControl.SelectedIndexChangingHandler">
      <summary>Delegat für das Ereignis 'SelectedIndexChanging'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TabPageCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'CollectionChanged' eines 'TabPageCollection'-Objektes</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TextCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'TextsChanged' eines 'TextList'-Objektes</summary>
    </member>
    <member name="T:VisiWinNET.Forms.VarInLimitEventHandler">
      <summary>Delegat für das Ereignis 'Limit'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.IEventAgentProvider">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.IInputPad">
      <summary>Schnittstelle für die Bildschirmtastaturunterstützung</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IInputPad.Location">
      <summary>Legt die Position der Bildschirmtastatur fest, wenn als Positionierungsmodus 'Manual' übergeben wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.IInputPad.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.IInputPad.Scale(System.Single)">
      <summary>Übergibt die relative Größe des Formulars</summary>
      <param name="ratio">relative Größenangabe. Kleinere Werte als '1' sollten die Bildschirmtastatur verkleinern. Größere Werte als '1' sollten die Bildschirmtastatur vergrößern. </param>
    </member>
    <member name="M:VisiWinNET.Forms.IInputPad.Show(System.Windows.Forms.Control,VisiWinNET.Forms.TouchKeyboardPosition)">
      <summary>Wird von der 'TouchKeyboard'-Komponente aufgerufen, wenn ein nichtmodaler Aufruf der Bildschirmtastatur erfolgt </summary>
      <param name="editControl">Übergabe des Steuerelementes, dessen Wert über die Bildschirmtastatur geändert werden soll</param>
      <param name="position">Übergabe des Positionierungsmodus (Eigenschaft 'Position' der aufrufenden TouchKeyboard'-Komponente) der Bildschirmtastatur. Über diese Eigenschaft wird gesteuert, wo die Bildschirmtastatur beim Aufruf erscheint.</param>
    </member>
    <member name="M:VisiWinNET.Forms.IInputPad.ShowDialog(System.Windows.Forms.Control,VisiWinNET.Forms.TouchKeyboardPosition)">
      <summary>Wird von der 'TouchKeyboard'-Komponente aufgerufen, wenn ein modaler Aufruf der Bildschirmtastatur erfolgt </summary>
      <param name="editControlint">Übergabe des Steuerelementes, dessen Wert über die Bildschirmtastatur geändert werden soll</param>
      <param name="position">Übergabe des Positionierungsmodus (Eigenschaft 'Position' der aufrufenden TouchKeyboard'-Komponente) der Bildschirmtastatur. Über diese Eigenschaft wird gesteuert, wo die Bildschirmtastatur beim Aufruf erscheint.</param>
    </member>
    <member name="T:VisiWinNET.Forms.IListBox">
      <summary>Schnittstelle zum Austausch von Informationen zwischen einer ListBox und ihren Elementen.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IListBox.CurrentBackColor">
      <summary>Gibt die aktuelle Hintergrundfarbe des ListBox-Elementes zurück.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IListBox.CurrentBackColorSelected">
      <summary>Gibt die aktuelle Hintergrundfarbe des ListBox-Steuerelementes für ein selektiertes Listenelement zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IListBox.CurrentForeColor">
      <summary>Gibt die aktuelle Textfarbe des ListBox-Steuerelementes zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IListBox.CurrentForeColorSelected">
      <summary>Gibt die aktuelle Textfarbe des ListBox-Steuerelementes für ein selektiertes Listenelement zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IListBox.ItemHeight">
      <summary>Legt die minimale Höhe der Listenelemente fest oder gibt sie zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.IPopupInfo">
      <summary>Schnittstelle für die 'PopupInfo'-Komponente</summary>
    </member>
    <member name="T:VisiWinNET.Forms.IPopupInfoForm">
      <summary>Schnittstelle für das Infofenster einer 'PopupInfo'-Komponente</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IPopupInfoForm.DefaultValue">
      <summary>Legt den dargestellten Ersatzwert fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IPopupInfoForm.ItemAlias">
      <summary>Legt den dargestellten Alias fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IPopupInfoForm.ItemID">
      <summary>Legt die dargestellte ItemID fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IPopupInfoForm.LimitColor">
      <summary>Legt die Farbe für eine Grenzwertüberschreitung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IPopupInfoForm.LimitDirection">
      <summary>Gibt an, welche Grenze überschritten wurde </summary>
    </member>
    <member name="P:VisiWinNET.Forms.IPopupInfoForm.LimitMax">
      <summary>Legt den oberen Grenzwert fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.IPopupInfoForm.LimitMin">
      <summary>Legt den unteren Grenzwert fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.IPopupInfoForm.SetAppearance(VisiWinNET.Forms.PopupInfoAppearanceEventArgs)">
      <summary>Übergibt die Anzeigeparameter für das Infofenster</summary>
      <param name="e">Die Anzeigeparameter enthalten die Eigenschaftenwerte, die in der 'PopUpInfo'-Komponente festlegen, welche Felder auf dem Infofenster angezeigt werden sollen.</param>
    </member>
    <member name="T:VisiWinNET.Forms.IPropertyBinding">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.IVariableContainer">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ApplicationCommands">
      <summary>Aufzählung, die die möglichen Funktionen eines 'CommandButtons' enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ApplicationCommands.ChangeForm">
      <summary>Wechsel zu einem anderen Formular. Als Wert der Eigenschaft 'Param' wird der Name des Formulars erwartet, zu dem zu wechseln ist.
Ein über 'ChangeForm' angezeigtes Formular wird wieder entladen, wenn zur nächsten Bildschirmseite gewechselt wird.
Wird diese Einstellung gewählt, können in 'Param' folgende Eingaben erfolgen:
- Name eines Formulars aus der Applikation
- "#HistoryBack" als Schlüsselwort für den automatischen Rücksprung zum letzten angezeigten Formular
- "#HistoryForward" als Schlüsselwort für den automatischen Vorwärtssprung zum nächsten in der Historie vermerkten Formular
 </summary>
    </member>
    <member name="F:VisiWinNET.Forms.ApplicationCommands.ChangeLanguage">
      <summary>Wechsel der Applikationssprache. Als Wert der Eigenschaft 'Param' wird die LCID (Locale Identifier) der neuen Sprache erwartet.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ApplicationCommands.ExitApplication">
      <summary>Beenden der Visualisierungsapplikation</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ApplicationCommands.None">
      <summary>Keine Funktion</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ApplicationCommands.ShowChildForm">
      <summary>Öffnet das angegebene Formular. Dabei kann bestimmt werden, welches Formular als Elternfenster für das aufzurufende Formular verwendet wird. Damit der Aufruf funktioniert, muss das Elternfenster zumindest geladen sein
Wird diese Einstellung gewählt, wird in 'Param' der Name des anzuzeigenden Formulars und anschließend, durch ein Semikon getrennt, der Name des Elternfensters erwartet.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ApplicationCommands.ShowForm">
      <summary>Wechsel zu einem anderen Formular. Als Wert der Eigenschaft 'Param' wird der Name des Formulars erwartet, zu dem zu wechseln ist.
Ein über 'ShowForm' angezeigtes Formular wird nicht entladen, wenn zur nächsten Bildschirmseite gewechselt wird.
Wird diese Einstellung gewählt, können in 'Param' folgende Eingaben erfolgen:
- Name eines Formulars aus der Applikation
- "#HistoryBack" als Schlüsselwort für den automatischen Rücksprung zum letzten angezeigten Formular
- "#HistoryForward" als Schlüsselwort für den automatischen Vorwärtssprung zum nächsten in der Historie vermerkten Formular
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.BorderStyle">
      <summary>Aufzählung der unterstützten Rahmenstile für die VisiWinNET-Steuerelemente</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.ButtonDown">
      <summary>Umrandung einer gedrückten Windows Standardschaltfläche. Der Rahmen besteht aus einer schwarzen Linie (2 Pixel Breite).

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.ButtonUp">
      <summary>Umrandung einer nicht gedrückten Windows Standardschaltfläche. Der Rahmen suggeriert eine Erhebung auf dem Bildschirm.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.Frame">
      <summary>Umrandung als Erhebung mit eingelassenem Steuerelement. 

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: Farbe des inneren Bereich des Rahmens
Width: Breite des Rahmenkörpers</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.GroupBox">
      <summary>Umrandung eines Gruppierungs-Steuerelementes. 

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.Lowered">
      <summary>Umrandung eines Windows Standardtexteingabesteuerelementes. Der Rahmen suggeriert eine Vertiefung auf dem Bildschirm.
In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.None">
      <summary>Kein Rahmen
In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.Raised">
      <summary>Konfigurierbare Umrandung einer nicht gedrückten Windows Standardschaltfläche. Der Rahmen suggeriert eine Erhebung auf dem Bildschirm.
Die Umrandung kann in drei Bereiche unterteilt werden:
1. Der Standardschaltflächenrahmen als äußere Begrenzung
2. Der in der Breite einstellbare Umrandungskörper
3. Eine einfache Linie als Innenbegrenzung der Umrandung

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: Farbe der Umrandungsinnenbegrenzung
Color2: keine
Color3: Farbe des inneren Bereiches des Rahmens
Width: Breite des Umrandungskörper</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.Single">
      <summary>Schwarze Linie als Rahmen (1 Pixel breit)
In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.UserDef">
      <summary>Umrandung mit Schattierungseffekt. Der Rahmen suggeriert einen Lichteinfall.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: Farbe der Umrandungslinien links und oben
Color2: Farbe der Umrandungslinien rechts und unten
Color3: keine
Width: Breite der Umrandungslinien (in Pixeln)

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.BorderStyle.UserDefSingle">
      <summary>Umrandung mit Schattierungseffekt und einer äußeren Linie. Der Rahmen suggeriert einen Lichteinfall.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: Farbe der Umrandungslinien links und oben
Color2: Farbe der Umrandungslinien rechts und unten
Color3: Farbe der äußeren Umrandungslinie
Width: Breite der Umrandungslinien (in Pixeln)
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ButtonBorderStyle">
      <summary>Aufzählung der möglichen Rahmenstile für die VisiWinNET-Schaltflächensteuerelemente</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonBorderStyle.Switch">
      <summary>Umrandung einer Standard Windows Schaltfläche mit dem Zusatz, das bei gedrückter Schaltfläche der Rahmen eine Vertiefung auf dem Bildschirm suggeriert. 

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonBorderStyle.UserDef">
      <summary>Umrandung mit Schattierungseffekt. Der Rahmen suggeriert einen Lichteinfall.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: Farbe der Umrandungslinien links und oben
Color2: Farbe der Umrandungslinien rechts und unten
Color3: keine
Width: Breite der Umrandungslinien (in Pixeln)

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonBorderStyle.UserDefSingle">
      <summary>Umrandung mit Schattierungseffekt und einer äußeren Linie. Der Rahmen suggeriert einen Lichteinfall.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: Farbe der Umrandungslinien links und oben
Color2: Farbe der Umrandungslinien rechts und unten
Color3: Farbe der äußeren Umrandungslinie
Width: Breite der Umrandungslinien (in Pixeln)
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonBorderStyle.WindowsStandard">
      <summary>Umrandung eines Standard Windows Schaltfläche. 

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ButtonStyle">
      <summary>Aufzählung, die die verschiedenen Darstellungsarten einer Schaltfläche bestimmt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonStyle.Flat">
      <summary>Als Rahmen wird eine einfache Linie (1 Pixel breit) um das Steuerelement gezogen.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonStyle.Graphical">
      <summary>Es wird kein Rahmen gezeichnet, wenn eine Grafik auf dem Steuerelement angezeigt wird. Wenn keine Grafik angezeigt wird, ist diese Einstellung gleichbedeutend mit der 'Standard'-Einstellung.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonStyle.Standard">
      <summary>Umrandung einer nicht gedrückten Windows Standardschaltfläche. Der Rahmen suggeriert eine Erhebung auf dem Bildschirm.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ButtonStyle.Transparent">
      <summary>Das Steuerelement wird unsichtbar geschaltet. Es reagiert aber weiter auf Mauseregnisse</summary>
    </member>
    <member name="T:VisiWinNET.Forms.CheckAlignment">
      <summary>Beinhaltet die möglichen Einstellungen für die Positionierung des Kontrollkästchens in einem 'Checkbox'/'RadioButton'-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.CheckAlignment.Left">
      <summary>Das Kontrollkästchen wird am linken Rand des Steuerelementes dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.CheckAlignment.Right">
      <summary>Das Kontrollkästchen wird am rechten Rand des Steuerelementes dargestellt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.CheckBoxStyles">
      <summary>Beinhaltet die möglichen Einstellungen für die Darstellung des Kontrollhäkchen in einem 'Checkbox'-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.CheckBoxStyles.Check">
      <summary>Darstellung eines Häkchens</summary>
    </member>
    <member name="F:VisiWinNET.Forms.CheckBoxStyles.Cross">
      <summary>Darstellung eines Kreuzes</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ColumnTypes">
      <summary>Aufzählung, die die möglichen Datentypen, Werte oder Darstellungsarten einer Listenspalte umfasst</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ColumnTypes.CheckBox">
      <summary>Werte in dieser Spalte werden als Kontrollkästchen dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ColumnTypes.Date">
      <summary>Werte in dieser Spalte werden als Datumswerte dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ColumnTypes.Image">
      <summary>Werte in dieser Spalte werden als 'Image' dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ColumnTypes.LocalizedText">
      <summary>Werte in dieser Spalte werden als Bezeichner von Indextextdefinitionen interpretiert. Zu den Indextextdefinitionen werden die entsprechenden Texte in der aktuell im Projekt eingestellten Sprache aus der Projektdatenbank ermittelt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ColumnTypes.Numerical">
      <summary>Werte in dieser Spalte werden als Zahl dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ColumnTypes.Text">
      <summary>Werte in dieser Spalte werden als Text dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ColumnTypes.VWItem">
      <summary>Werte in dieser Spalte werden als Prozessvariablenbezeichner interpretiert. Zu den Prozessvariablen werden die entsprechenden Werte aus dem Prozesskern ermittelt.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ContentAlign">
      <summary>Aufzählung, die die unterschiedlichen Positionen eines Fensterinhaltes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.BottomCenter">
      <summary>Vertikal: Unten
Horizontal: in der Mitte
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.BottomLeft">
      <summary>Vertikal: Unten
Horizontal: Links

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.BottomRight">
      <summary>Vertikal: Unten
Horizontal: Rechts

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.MiddleCenter">
      <summary>Vertikal: in der Mitte
Horizontal: in der Mitte

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.MiddleLeft">
      <summary>Vertikal: in der Mitte
Horizontal: Links

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.MiddleRight">
      <summary>Vertikal: in der Mitte
Horizontal: Rechts

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.TopCenter">
      <summary>Vertikal: Oben
Horizontal: in der Mitte

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.TopLeft">
      <summary>Vertikal: Oben
Horizontal: Links


</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ContentAlign.TopRight">
      <summary>Vertikal: Oben
Horizontal: Rechts
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeInButtonPositions">
      <summary>Aufzählung die die möglichen Schaltflächenpositionen in einem 'DateTimeIn'-Steuerelement beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.DateTimeInButtonPositions.Bottom">
      <summary>Die Schaltflächen werden unterhalb des Eingabefeldes dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.DateTimeInButtonPositions.Right">
      <summary>Die Schaltflächen werden rechts vom Eingabefeldes dargestellt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeInButtonStyle">
      <summary>Aufzählung, die die möglichen Anordnungen der Schaltflächen eines 'DateTimeIn'-Steuerelementes beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.DateTimeInButtonStyle.Horizontal">
      <summary>Die jeweiligen Schaltflächen ("Verschieben der Eingabemarke" bzw. "Dekrementieren/Inkrementieren") werden nebeneinander dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.DateTimeInButtonStyle.Vertical">
      <summary>Die jeweiligen Schaltflächen ("Verschieben der Eingabemarke" bzw. "Dekrementieren/Inkrementieren") werden übereinander dargestellt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.DateTimeOutModes">
      <summary>Aufzählung, die die Ausgabe in einem 'DateTimeOut'-Steuerelement parametriert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.DateTimeOutModes.SystemTime">
      <summary>Das Steuerelement gibt laufend die aktuelle Rechneruhrzeit wieder</summary>
    </member>
    <member name="F:VisiWinNET.Forms.DateTimeOutModes.Value">
      <summary>Das Steuerelement gibt den Wert der 'Value'-Eigenschaft wieder
Hinweis: Diese Einstellung hat in VisiWinNET SMART keine Funktion</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Direction">
      <summary>Aufzählung der möglichen Bewegungsrichtungen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Direction.Down">
      <summary>Darstellung der Bewegungsrichtung nach unten
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Direction.Left">
      <summary>Darstellung der Bewegungsrichtung nach links</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Direction.Right">
      <summary>Darstellung der Bewegungsrichtung nach rechts</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Direction.Up">
      <summary>Darstellung der Bewegungsrichtung nach oben</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Format">
      <summary>Aufzählung für die verschiedenen Darstellungsarten eines Zahlenwertes</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Format.AutoFloat">
      <summary>Dezimal oder Wissenschaftlich abhängig von der Größe des Variablenwertes. D.h. bis zu einem 6-stelligen Variablenwert wird die dezimale Formatierung verwendet (z.B. 123456 oder 9.87654), darüber wird die Zahl bis zu 6-stellig mit Komma hinter der ersten Stelle und Exponent formatiert (z.B. 9.87e+008 oder 1.23456e+009)</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Format.Binary">
      <summary>Binär (2er System). D.h. Integer-Variablen werden 8,16 oder 32-stellig angezeigt (je nach Datentyp). Jede Stelle repräsentiert den Wert eines Bits, angezeigt wird also die Ziffer 0 oder 1.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Format.Hex">
      <summary>Hexadezimal (16er System). D.h. Integer-Variablen werden 2,4 oder 8-stellig angezeigt (je nach Datentyp). Jede Stelle repräsentiert den Wert von 4 Bits, angezeigt werden die Ziffern 0 bis 9 (Wert 0 bis 9) und die Buchstaben A bis F (Werte 10 bis 15).</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Format.Number">
      <summary>Dezimal (10er System). Alle Zahlenwerte werden im normalen dezimalen System angezeigt, bei negativen Zahlen wird vor der Zahl das Minus-Zeichen eingeblendet. Gleitkommazahlen werden unabhängig von ihrer Größe als Dezimalzahl dargestellt, wobei es vorkommen kann, dass die unteren Ziffern nur als Füllziffern dienen und keinen genauen Wert darstellen. 
Bei diesem Format wird auf jeden Fall die Einstellung der 'DecPoint'-Eigenschaft beachtet. Diese gibt an, wie viele Nachkommastellen angezeigt werden sollen. Bei Integer-Variablen bedeutet dieses, es wird in die Anzeige der Zahl ein Komma eingeblendet, der Variablenwert ist aber weiterhin die angezeigte Zahl ohne Komma. Bei Gleitkomma-Variablen gibt diese Eigenschaft nur die Anzahl der anzuzeigenden Nachkommastellen an.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Format.Scientific">
      <summary>Wissenschaftlich: Die Zahl wird in eine Zeichenfolge der Form "-d.ddd...E+ddd" oder "-d.ddd...e+ddd" konvertiert, wobei jedes 'd' eine Ziffer (0-9) angibt. Die Zeichenfolge beginnt mit einem Minuszeichen, wenn die Zahl negativ ist. Es steht immer eine Ziffer vor dem Dezimaltrennzeichen. Die Eigenschaft 'DecPoint' des als 'VWItem'-Eigenschaft verwendeten Objektes gibt die gewünschte Anzahl von Ziffern nach dem Dezimaltrennzeichen an. </summary>
    </member>
    <member name="T:VisiWinNET.Forms.FormChangeModes">
      <summary>Aufzählung für die verschiedenen Formularwechselarten</summary>
    </member>
    <member name="F:VisiWinNET.Forms.FormChangeModes.ShowNew">
      <summary>Das neue Formular wird über das aktuell aktive Formular gelegt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.FormChangeModes.ShowNewCloseActive">
      <summary>Das neue Formular wird angezeigt. Das aktuell aktive Formular wird entladen.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.FormChangeModes.ShowNewHideActive">
      <summary>Das neue Formular wird angezeigt. Das aktuell aktive Formular wird unsichtbar geschaltet.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ImageAlignment">
      <summary>Beinhaltet Angaben zur Darstellung und Ausrichtung einer Grafik in einem Steuerelement
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.BottomCenter">
      <summary>Vertikal: Unten
Horizontal: in der Mitte
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.BottomLeft">
      <summary>Vertikal: Unten
Horizontal: Links
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.BottomRight">
      <summary>Vertikal: Unten
Horizontal: Rechts
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.MiddleCenter">
      <summary>Vertikal: in der Mitte
Horizontal: in der Mitte
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.MiddleLeft">
      <summary>Vertikal: in der Mitte
Horizontal: Links
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.MiddleRight">
      <summary>Vertikal: in der Mitte
Horizontal: rechts
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.Stretch">
      <summary>Das Bild wird in den Abmessungen des Containers ungeachtet der ursprünglichen Seitenverhältnisse gestreckt </summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.TileCenter">
      <summary>Ist das Bild kleiner als das Steuerelement, wird es als Kacheleffekt zentriert ausgerichtet im Steuerelement gezeichnet
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.TileTopLeft">
      <summary>Ist das Bild kleiner als das Steuerelement, wird es als Kacheleffekt in der linken oberen Ecke des Steuerelementes ausgerichtet gezeichnet
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.TopCenter">
      <summary>Vertikal: Oben
Horizontal: in der Mitte
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.TopLeft">
      <summary>Vertikal: Oben
Horizontal: Links
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.TopRight">
      <summary>Vertikal: Oben
Horizontal: Rechts
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.ZoomBottom">
      <summary>Das Bild wird unter Beachtung der ursprünglichen Seitenverhältnisse an die Abmessungen des Steuerelementes angepasst und am unteren Steuerelementerand ausgerichtet </summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.ZoomCenter">
      <summary>Das Bild wird unter Beachtung der ursprünglichen Seitenverhältnisse an die Abmessungen des Steuerelementes angepasst und zentriert im Steuerelement ausgerichtet </summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.ZoomLeft">
      <summary>Das Bild wird unter Beachtung der ursprünglichen Seitenverhältnisse an die Abmessungen des Steuerelementes angepasst und am linken Steuerelementerand ausgerichtet </summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.ZoomRight">
      <summary>Das Bild wird unter Beachtung der ursprünglichen Seitenverhältnisse an die Abmessungen des Steuerelementes angepasst und am rechten Steuerelementerand ausgerichtet </summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageAlignment.ZoomTop">
      <summary>Das Bild wird unter Beachtung der ursprünglichen Seitenverhältnisse an die Abmessungen des Steuerelementes angepasst und am oberen Steuerelementerand ausgerichtet </summary>
    </member>
    <member name="T:VisiWinNET.Forms.ImageSizeModes">
      <summary>Aufzählung, die die unterschiedlichen Möglichkeiten des Verhaltens eines Steuerelementes beim Laden einer Grafik beschreibt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageSizeModes.AutoSize">
      <summary>Beim Laden einer Grafik werden die Abmessungen des Steuerelementes automatisch an die Abmessungen der Grafik angepasst.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageSizeModes.CenterImage">
      <summary>Die Grafik wird zentriert im Steuerelement dargestellt. Eine Größenanpassung von Grafik oder Steuerelement erfolgt nicht.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageSizeModes.Normal">
      <summary>Die linke obere Ecke der Grafik wird in der linken oberen Ecke des Steuerelementes dargestellt. Eine Größenanpassung von Grafik oder Steuerelement erfolgt nicht.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ImageSizeModes.StretchImage">
      <summary>Die Größe der geladenen Grafik wird automatisch an die Größe des Steuerelementes angepasst. Dabei werden die Seitenverhältnisse der Grafik ignoriert.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.LabelPositions">
      <summary>Beinhaltet die möglichen Einstellungen für die Positionierung des Textfeldes in einem 'Bar'/'ExtendedSlider'-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LabelPositions.Primary">
      <summary>Für Steuerelement 'Bar': Das Textfeld wird oberhalb der Füllstandsanzeige angezeigt
Für Steuerelement 'ExtendedSlider': Das Textfeld wird oberhalb des Schiebereglers angezeigt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LabelPositions.Secondary">
      <summary>Für Steuerelement 'Bar': Das Textfeld wird unterhalb der Füllstandsanzeige angezeigt
Für Steuerelement 'ExtendedSlider': Das Textfeld wird unterhalb des Schiebereglers angezeigt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.LimitCheckMode">
      <summary>Aufzählung, die die verschiedenen Eingabebereichsüberprüfungen eines 'VarIn'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LimitCheckMode.None">
      <summary>Es wird keine Eingabebereichsüberprüfung vorgenommen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LimitCheckMode.OnEnter">
      <summary>Die Eingabebereichsüberprüfung wird durchgeführt, wenn die Eingabe durch die Enter-Taste/ durch Fokuswechsel bestätigt wird
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LimitCheckMode.OnInput">
      <summary>Die Eingabebereichsüberprüfung wird während der Eingabe der einzelnen Ziffern durchgeführt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.LimitsVisibilities">
      <summary>Aufzählung, die die möglichen Einstellungen zur Behandlung der Grenzwertdarstellung einer Skala umfasst</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LimitsVisibilities.Always">
      <summary>Der obere/untere Grenzwert der Skala wird immer mit einem Zahlenwert versehen. Gegebenenfalls wird dafür der nächste im Skalenraster liegende Zahlenwert nicht gezeichnet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LimitsVisibilities.Never">
      <summary>Der obere/untere Grenzwert der Skala wird nie mit einem Zahlenwert versehen, es sei denn er überschneidet sich mit dem Skalenraster.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LimitsVisibilities.SpaceAvailable">
      <summary>Der obere/untere Grenzwert der Skala wird mit einem Zahlenwert versehen, wenn er ohne Überschneidung zum nächsten im Skalenraster liegenden Wert gezeichnet werden kann.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ListBoxModes">
      <summary>Aufzählung, die die unterschiedlichen Betriebsarten eines 'ListBox'/'Combobox'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ListBoxModes.Automatic">
      <summary>Das Laden der Texte erfolgt automatisch über die Angabe der Eigenschaften 'TextGroup'/'TextPrefix'.
Die Steuerung der Selektion kann über Benutzereingaben oder die Änderung der angebundenen Prozessvariablen gesteuert werden.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ListBoxModes.Manual">
      <summary>Sowohl das Laden der Texte als auch die Steuerung der Selektion sind per Hand vorzunehmen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ListViewVWItemColumnModes">
      <summary>Aufzählung, die die unterschiedlichen Anzeigearten einer Listenspalte vom Typ  'ListViewVWItemColumn' enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ListViewVWItemColumnModes.ShowVWItemText">
      <summary>In der Anzeige wird der einer Prozessvariablen zugeordnete sprachumschaltbare Text dargestellt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ListViewVWItemColumnModes.ShowVWItemUnit">
      <summary>In der Anzeige wird der einer Prozessvariablen zugeordnete Einheitentext dargestellt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ListViewVWItemColumnModes.ShowVWItemValue">
      <summary>In der Anzeige wird der aktuelle Wert der Prozessvariablen dargestellt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.OptionGroupSetModes">
      <summary>Aufzählung, die die möglichen Einstellungen der 'SetMode'-Eigenschaft eines 'OptionGroup'-Objektes beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.OptionGroupSetModes.On">
      <summary>Das angebundene Bit des Steuerelementes kann gesetzt, aber nicht zurückgesetzt werden. Damit bleibt immer eines der über die Gruppe festgelegten Bits aktiv.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.OptionGroupSetModes.Toggle">
      <summary>Das angebundene Bit des Steuerelementes kann gesetzt und auch zurückgesetzt werden</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PopupInfoActivationModes">
      <summary>Enthält die möglichen Aktivierungen des Info-Fensters einer 'PopUpInfo'-Komponente</summary>
    </member>
    <member name="F:VisiWinNET.Forms.PopupInfoActivationModes.Click">
      <summary>Das Info-Fenster wird durch einen Klick mit der linken Maustaste auf das 'VarIn'-Steuerelement aktiviert.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.PopupInfoActivationModes.ClickAndGotFocus">
      <summary>Das Info-Fenster wird aktiviert, wenn das 'VarIn'-Steuerelement die Eingabemarke erhält oder auf das Steuerelement geklickt wird. Gegenüber der 'GotFocus'-Einstellung kann das Info-Fenster erneut durch einen Klick aufgerufen werden, wenn es über die 'x'-Schaltfläche geschlossen wurde.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.PopupInfoActivationModes.GotFocus">
      <summary>Das Info-Fenster wird aktiviert, wenn das 'VarIn'-Steuerelement die Eingabemarke erhält. Gegenüber der 'Click'-Einstellung wird das Info-Fenter auch aktiviert, wenn über die TAB-Taste zum Steuerelement gewechselt wird.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.PopupInfoActivationModes.StartEditing">
      <summary>Das Info-Fenster wird aktiviert, wenn im 'VarIn'-Steuerelement der Wert bearbeitet wird.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PopupInfoPositions">
      <summary>Enthält die möglichen Positionen des Info-Fensters einer 'PopUpInfo'-Komponente</summary>
    </member>
    <member name="F:VisiWinNET.Forms.PopupInfoPositions.Beside">
      <summary>Das Infofenster wird neben dem 'VarIn'-Steuerelement angezeigt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.PopupInfoPositions.Underneath">
      <summary>Das Infofenster wird unter dem 'VarIn'-Steuerelement angezeigt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.RulerType">
      <summary>Aufzählung, die die Darstellungsarten einer Skala enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.RulerType.Complete">
      <summary>Die komplette Skala mit Teilstrichen wird gezeichnet
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.RulerType.Divs">
      <summary>Nur die Teilstriche werden gezeichnet</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SandglassPosition">
      <summary>Beinhaltet die möglichen Positionen der Warteanzeige beim Formularwechsel</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SandglassPosition.CenterScreen">
      <summary>Die Warteanzeige beim Formularwechsel wird in der Mitte des Bildschirmes angezeigt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SandglassPosition.Manual">
      <summary>Die Position der Warteanzeige beim Formularwechsel wird über die Eigenschaft 'SandglassLocation' angegeben</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SandglassShowBehavior">
      <summary>Beinhaltet die möglichen Einstellungen für das Verhalten der Warteanzeige beim Formularwechsel</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SandglassShowBehavior.Always">
      <summary>Die Warteanzeige beim Formularwechsel wird angezeigt, wenn ein Formular neu geladen oder ein bereits geladenes Formular sichtbar geschaltet wird.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SandglassShowBehavior.ShowOnLoadOnly">
      <summary>Die Warteanzeige beim Formularwechsel wird nur angezeigt, wenn ein Formular neu geladen wird</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScaleDisplay">
      <summary>Aufzählung, die die Anzeigeelemente einer Skala enthält
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDisplay.Both">
      <summary>Das Element wird komplett mit Lineal und Skala angezeigt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDisplay.RulerOnly">
      <summary>Nur das Lineal wird angezeigt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDisplay.RulerOnlyScaleInvisible">
      <summary>Das Lineal wird angezeigt, die Skalenwerte werden ausgeblendet. Diese Einstellung kann verwendet werden, wenn mehrere Skalen nebeneinader platziert werden, wobei nur eine Skala die Werte anzeigt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDisplay.ScaleOnly">
      <summary>Nur die Skala wird angezeigt
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScaleDivisionType">
      <summary>Legt fest, welche Schrittweiten bei der automatischen Skalierung verwendet werden können</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDivisionType.Div1_2">
      <summary>Die Skalierung mit der Schrittweite "1" oder "2" kann dargestellt werden</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDivisionType.Div1_2_5">
      <summary>Die Skalierung mit der Schrittweite "1", "2" oder "5" kann dargestellt werden
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDivisionType.Div1_5">
      <summary>Die Skalierung mit der Schrittweite "1" oder "5" kann dargestellt werden</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScaleDivisionType.Div1only">
      <summary>Nur die Skalierung mit der Schrittweite "1" kann dargestellt werden</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScalePositions">
      <summary>Aufzählung, die die möglichen Positionierungen der Skala eines 'Scale'/'Bar'/'ExtendedSlider'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScalePositions.Primary">
      <summary>Im 'Scale'-Steuerelement gilt:
- Für 'Direction' =  "dirUp/dirDown": Die Skalenwerte werden links neben dem Lineal angezeigt
- Für 'Direction' =  "dirLeft/dirRight": Die Skalenwerte werden oberhalb des Lineals angezeigt

Im 'Bar'-Steuerelement gilt:
- Für 'Direction' =  "Up/Down": Die Skala wird links neben der Füllstandsanzeige angezeigt
- Für 'Direction' =  "Left/Right": Die Skala wird oberhalb der Füllstandsanzeige angezeigt

Im 'ExtendedSlider'-Steuerelement gilt:
- Für 'Direction' =  "Vertical": Die Skala wird links neben dem Schieberegler angezeigt
- Für 'Direction' =  "Horizontal": Die Skala wird oberhalb des Schiebereglers angezeigt

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScalePositions.Secondary">
      <summary>Im 'Scale'-Steuerelement gilt:
- Für 'Direction' =  "Up/Down": Die Skalenwerte werden rechts neben dem Lineal angezeigt
- Für 'Direction' =  "Left/Right": Die Skalenwerte werden unterhalb des Lineals angezeigt

Im 'Bar'-Steuerelement gilt:
- Für 'Direction' =  "Up/Down": Die Skala wird rechts neben der Füllstandsanzeige angezeigt
- Für 'Direction' =  "Left/Right": Die Skala wird unterhalb der Füllstandsanzeige angezeigt

Im 'ExtendedSlider'-Steuerelement gilt:
- Für 'Direction' =  "Vertical": Die Skala wird rechts neben dem Schieberegler angezeigt
- Für 'Direction' =  "Horizontal": Die Skala wird unterhalb des Schiebereglers angezeigt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollBarStyles">
      <summary>Aufzählung, die die möglichen Einstellungen der 'Style'-Eigenschaft eines 'ScrollBar'-Objektes beschreibt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollBarStyles.Touch">
      <summary>Funktion mit vergrößerten Pfeiltasten für Touchscreen-Bedienung</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollBarTypes">
      <summary>Aufzählung, die die möglichen Ausrichtungen eines 'ScrollBar'-Objektes beschreibt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollBarTypes.HScrollBar">
      <summary>Legt fest, dass die Bildlaufleiste eine horizontalen Bildlauf ermöglicht</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollBarTypes.VScrollBar">
      <summary>Legt fest, dass die Bildlaufleiste eine vertikalen Bildlauf ermöglicht</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollBarVisibility">
      <summary>Aufzählung, die die möglichen Einstellungen zur Sichtbarkeit der Bildlaufleisten enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollBarVisibility.Both">
      <summary>Beide Bildlaufleisten sind sichtbar</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollBarVisibility.Horizontal">
      <summary>Nur die horizontale Bildlaufleiste ist sichtbar</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollBarVisibility.None">
      <summary>Beide Bildlaufleisten sind unsichtbar</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollBarVisibility.Vertical">
      <summary>Nur die vertikale Bildlaufleiste ist sichtbar</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ScrollEventType">
      <summary>Aufzählung, die die unterschiedlichen Ursachen eines 'Scroll'-Ereignisses einer Bildlaufleiste enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.EndScroll">
      <summary>Das Verschieben des Bildlauffeldes wurde beendet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.First">
      <summary>Das Bildlauffeld wurde an die Minimum-Position verschoben
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.LargeDecrement">
      <summary>Das Bildlauffeld wurde um einen großen Abstand verschoben. Der Benutzer hat links neben (horizontal) oder über (vertikal) dem Bildlauffeld auf die Bildlaufleiste geklickt oder die BILD-AUF-TASTE gedrückt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.LargeIncrement">
      <summary>Das Bildlauffeld wurde um einen großen Abstand verschoben. Der Benutzer hat rechts neben (horizontal) oder unter (vertikal) dem Bildlauffeld auf die Bildlaufleiste geklickt oder die BILD-AB-TASTE gedrückt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.Last">
      <summary>Das Bildlauffeld wurde an die Maximum-Position verschoben
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.SmallDecrement">
      <summary>Das Bildlauffeld wurde um einen kleinen Abstand verschoben. Der Benutzer hat auf den linken (horizontal) oder oberen (vertikal) Bildlaufpfeil geklickt oder die NACH-OBEN-TASTE gedrückt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.SmallIncrement">
      <summary>Das Bildlauffeld wurde um einen kleinen Abstand verschoben. Der Benutzer hat auf den rechten (horizontal) oder den unteren (vertikal) Bildlaufpfeil geklickt oder die NACH-UNTEN-TASTE gedrückt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.ThumbPosition">
      <summary>Das Bildlauffeld wurde verschoben
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ScrollEventType.ThumbTrack">
      <summary>Das Bildlauffeld wird gegenwärtig verschoben
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SelectionModes">
      <summary>Aufzählung, die die unterschiedlichen Möglichkeiten für die Selektion von Listenelementen eines 'ListBox'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SelectionModes.Multi">
      <summary>Mehrere Listenelemente können selektiert werden. 
Das Verhalten der Mehrfachselektion ist optimiert für den Betrieb mit einem Touchscreen: Die Selektion erfolgt (ohne zusätzliches Bedienen der Strg- oder Umschalt-Taste) über einen Klick mit der linken Maustaste. Soll ein Element wieder deselektiert werden, ist der Klick zu wiederholen. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.SelectionModes.None">
      <summary>Es können keine Elemente vom Benutzer selektiert werden</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SelectionModes.One">
      <summary>Es kann nur ein Element vom Benutzer selektiert werden. Wird durch einen Mausklick ein anderes Element selektiert, verliert das aktuell selektierte Element die Selektion</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SetMode">
      <summary>Aufzählung für die verschiedenen Betriebsarten eines Schaltflächensteuerelementes</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SetMode.BitOff">
      <summary>Bei Betätigung wird das Bit immer auf 0 zurückgesetzt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SetMode.BitOn">
      <summary>Bei Betätigung wird das Bit immer auf 1 gesetzt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SetMode.KeyMode">
      <summary>Wird die Schaltfläche gedrückt, wird das Bit auf 1 gesetzt, beim Loslassen wieder zurück auf 0
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SetMode.ToggleBit">
      <summary>Bei Betätigung wird das Bit in den anderen Zustand umgeschaltet (0 nach 1, 1 nach 0)</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Shapes">
      <summary>Aufzählung von geometrischen Formen, die in einem 'Shape'-Steuerelement angezeigt werden können
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Circle">
      <summary>Kreis
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Ellipse">
      <summary>Ellipse
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Rect">
      <summary>Rechteck
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.RoundedRect">
      <summary>Rechteck mit abgerundeten Ecken
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Square">
      <summary>Quadrat
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle1">
      <summary>Gleichschenkeliges Dreieck, Spitze nach oben
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle2">
      <summary>Gleichschenkeliges Dreieck, Spitze nach unten
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle3">
      <summary>Gleichschenkeliges Dreieck, Spitze nach rechts
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle4">
      <summary>Gleichschenkeliges Dreieck, Spitze nach links
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle5">
      <summary>Rechtwinkliges Dreieck, rechter Winkel links unten
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle6">
      <summary>Rechtwinkliges Dreieck, rechter Winkel rechts unten
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle7">
      <summary>Rechtwinkliges Dreieck, rechter Winkel links oben
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Shapes.Triangle8">
      <summary>Rechtwinkliges Dreieck, rechter Winkel rechts oben
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SliderDirections">
      <summary>Aufzählung von möglichen Bewegungsrichtungen eines Schiebereglers</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SliderDirections.Horizontal">
      <summary>Die Bewegungsrichtung verläuft horizontal</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SliderDirections.Vertical">
      <summary>Die Bewegungsrichtung verläuft vertikal</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SliderMouseWriteMode">
      <summary>Aufzählung für die verschiedenen Betriebsarten eines Schiebereglersteuerelementes
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SliderMouseWriteMode.LButtonUp">
      <summary>Der Wert wird erst dann in die angebundene Prozessvariable geschrieben, wenn die linke Maustaste losgelassen wurde.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SliderMouseWriteMode.Move">
      <summary>Während der Schieberegler bei gedrückter linker Maustaste bewegt wird, wird der jeweils zugehörige Wert in die angebundene Prozessvariable geschrieben.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SliderStyles">
      <summary>Aufzählung von möglichen grafischen Darstellungsarten eines Schiebereglers</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SliderStyles.Arrow">
      <summary>Der Schiebereglerknopf wird als Pfeil dargestellt. Die Richtung des Pfeils wird durch die Eigenschaft 'StyleDirection' bestimmt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SliderStyles.Graphical">
      <summary>Der Schiebereglerknopf wird durch eine in der Eigenschaft 'Image' festgelegten Grafik dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SliderStyles.Thumb">
      <summary>Der Schiebereglerknopf wird rechteckig mit Führungslinie dargestellt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SortModes">
      <summary>Aufzählung, die die unterschiedlichen Sortiermöglichkeiten der Elemente eines 'ListBox'/'ComboBox'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SortModes.Down">
      <summary>Die Listenelemente werden absteigend sortiert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SortModes.None">
      <summary>Die Listenelemente werden nicht sortiert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SortModes.Up">
      <summary>Die Listenelemente werden aufsteigend sortiert</summary>
    </member>
    <member name="T:VisiWinNET.Forms.StyleDirections">
      <summary>Aufzählung von möglichen Ausrichtungen der Darstellung als Pfeil</summary>
    </member>
    <member name="F:VisiWinNET.Forms.StyleDirections.Primary">
      <summary>Direction = Horizontal: Die Pfeilspitze zeigt nach oben
Direction = Vertical: Die Pfeilspitze zeigt nach links</summary>
    </member>
    <member name="F:VisiWinNET.Forms.StyleDirections.Secondary">
      <summary>Direction = Horizontal: Die Pfeilspitze zeigt nach unten
Direction = Vertical: Die Pfeilspitze zeigt nach rechts
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.SymbolMode">
      <summary>Aufzählung, die die verschiedenen Betriebsmodi eines 'Symbol'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SymbolMode.MultiState">
      <summary>Die Farbe, die den aktuellen Variablenzustand darstellt, wird aus der 'MultiStateColors'-Auflistung bezogen. Der Listenindex der verwendeten Farbe entspricht dabei dem Zustandswert des als 'VWItem'-Eigenschaft verwendeten 'StateItem'-Objektes. 
Die Eigenschaften 'ColorOn', 'ColorOnFault', 'ColorOff' und 'ColorOffFault' haben in dieser Einstellung keine Funktion.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.SymbolMode.OnOffAndFault">
      <summary>Die Farbe, die die aktuellen Zustände der über 'VWItem' und 'VWItemFault' angebundenen Variablen darstellt, wird aus den Eigenschaften 'ColorOn', 'ColorOnFault', 'ColorOff' und 'ColorOffFault' bezogen. Der Variablenzustand der 'VWItem'-Variable wird binär interpretiert (gleich/ ungleich 0).
Die Eigenschaft MultiStateColors hat in dieser Einstellung keine Funktion.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TabBorderStyle">
      <summary>Aufzählung, die die verschiedenen Rahmen der Karteireiter eines 'TabControl'-Steuerelementes umfasst</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabBorderStyle.ButtonUp">
      <summary>Umrandung einer nicht gedrückten Windows Standardschaltfläche. Der Rahmen suggeriert eine Erhebung auf dem Bildschirm.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabBorderStyle.None">
      <summary>Umrandung einer nicht gedrückten Windows Standardschaltfläche. Der Rahmen suggeriert eine Erhebung auf dem Bildschirm.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabBorderStyle.Single">
      <summary>Umrandung einer nicht gedrückten Windows Standardschaltfläche. Der Rahmen suggeriert eine Erhebung auf dem Bildschirm.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: keine
Color2: keine
Color3: keine
Width: keine

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabBorderStyle.UserDef">
      <summary>Umrandung mit Schattierungseffekt. Der Rahmen suggeriert einen Lichteinfall.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: Farbe der Umrandungslinien links und oben
Color2: Farbe der Umrandungslinien rechts und unten
Color3: keine
Width: Breite der Umrandungslinien (in Pixeln)

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabBorderStyle.UserDefSingle">
      <summary>Umrandung mit Schattierungseffekt und einer äußeren Linie. Der Rahmen suggeriert einen Lichteinfall.

In dieser Einstellung haben die anderen 'ControlBorder'-Eigenschaften folgende Funktion:
Color1: Farbe der Umrandungslinien links und oben
Color2: Farbe der Umrandungslinien rechts und unten
Color3: Farbe der äußeren Umrandungslinie
Width: Breite der Umrandungslinien (in Pixeln)
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TabControlStyle">
      <summary>Aufzählung, die die verschiedenen Zeichenstile eines TabControl-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabControlStyle.Normal">
      <summary>Das Steuerelement wird im klassischen Windows-Stil gezeichnet</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TabPositions">
      <summary>Aufzählung, die die möglichen Positionen der Karteireiter in einem 'TabControl'-Steuerelement enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabPositions.Bottom">
      <summary>Die Karteireiter werden am unteren Rand des Steuerelementes dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabPositions.Left">
      <summary>Die Karteireiter werden am linken Rand des Steuerelementes dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabPositions.Right">
      <summary>Die Karteireiter werden am rechten Rand des Steuerelementes dargestellt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabPositions.Top">
      <summary>Die Karteireiter werden am oberen Rand des Steuerelementes dargestellt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TabReactivationModes">
      <summary>Aufzählung, die das mögliche Verhalten eines 'TabControl'-Steuerelementes umfasst, wenn die aktive Karteikarte durch die VisiWinNET-Benutzerverwaltung gesperrt wird.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabReactivationModes.FirstPossible">
      <summary>Es wird automatisch zur ersten Karteikarte gewechselt, die im Steuerelement nicht durch die geänderte Authorisierung gesperrt wurde</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TabReactivationModes.NoSelection">
      <summary>Es wird keine Karteikarte aktiv geschaltet</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TextSelectionModes">
      <summary>Beinhaltet Einstellungen, die das Verhalten der Eingabemarke beim Setzen des Focus auf ein Eingabesteuerelement beschreiben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TextSelectionModes.Always">
      <summary>Sobald das Eingabesteuerelement den Fokus erhält, wird der Wert im Steuerelement selektiert. Folgende Eingaben überschreiben den selektierten Wert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TextSelectionModes.Never">
      <summary>Das Setzen des Fokus auf das Steuerelement bewirkt keine Selektion des Wertes. Folgende Eingaben bewirken das Einfügen einzelner Zeichen im Steuerelement, ohne dass die Zeichen des aktuellen Wertes überschrieben werden.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TouchKeyboardActivationMode">
      <summary>Aufzählung, die die unterschiedlichen Aktivierungsmodi der Bildschirmtastatur enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TouchKeyboardActivationMode.OnClick">
      <summary>Die Bildschirmtastatur wird aufgerufen, wenn auf ein Eingabesteuerelement mit der Maus (oder über einen Touchscreen) geklickt wird</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TouchKeyboardActivationMode.OnDoubleClick">
      <summary>Die Bildschirmtastatur wird aufgerufen, wenn auf ein Eingabesteuerelement mit der Maus (oder über einen Touchscreen) doppelt geklickt wird</summary>
    </member>
    <member name="T:VisiWinNET.Forms.TouchKeyboardPosition">
      <summary>Aufzählung, die die unterschiedlichen Positionierungsmodi der Bildschirmtastatur enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TouchKeyboardPosition.AtControl">
      <summary>Die Bildschirmtastatur wird angrenzend an das Steuerelement positioniert, das den Aufruf über Klick oder Doppelklick bewirkte</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TouchKeyboardPosition.CenterParent">
      <summary>Die Bildschirmtastatur wird zentriert auf dem Container des Steuerelementes positioniert, das den Aufruf über Klick oder Doppelklick bewirkte</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TouchKeyboardPosition.CenterScreen">
      <summary>Die Bildschirmtastatur wird zentriert auf dem Bildschirm positioniert
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.TouchKeyboardPosition.Manual">
      <summary>Die Position der Bildschirmtastatur wird über die 'Location'-Eigenschaft der 'TouchKeyboard'-Komponente festgelegt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.ValueDirections">
      <summary>Aufzählung, die die möglichen Bewegungsrichtungen des 'ExtendedSlider'-Steuerelementes beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ValueDirections.Primary">
      <summary>Für Direction = 'Horizontal': 'MinValue' wird links, 'MaxValue' wird rechts dargestellt.
Für Direction = 'Vertical': 'MinValue' wird unten, 'MaxValue' wird oben dargestellt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.ValueDirections.Secondary">
      <summary>Für Direction = 'Horizontal': 'MinValue' wird rechts, 'MaxValue' wird links dargestellt.
Für Direction = 'Vertical': 'MinValue' wird oben, 'MaxValue' wird unten dargestellt.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.VariableActivationMode">
      <summary>Beinhaltet Einstellungen, die beschreiben, wann die Variablen eines Formulars angemeldet werden</summary>
    </member>
    <member name="F:VisiWinNET.Forms.VariableActivationMode.ActivateOnLoad">
      <summary>Die Variablen werden angemeldet, sobald das Formular geladen wurde. Es muss dabei NICHT angezeigt werden.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.VariableActivationMode.ActivateOnShow">
      <summary>Die Variablen werden angemeldet, sobald das Formular sichtbar geschaltet wird. Wenn VariableDeactivationMode auf 'Never' eingestellt und das Formular bereits einmal angezeigt wurde, erfolgt keine erneute Anmeldung</summary>
    </member>
    <member name="T:VisiWinNET.Forms.VarInRegionLayouts">
      <summary>Aufzählung, die die möglichen Positionen des Bereiches im 'VarIn'-Steuerelement, der die Prozessvariablenbeschreibung enthält, beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.VarInRegionLayouts.LabelLeft">
      <summary>Der Bereich, der im 'VarIn'-Steuerelement die Prozessvariablenbeschreibung enthält, wird links dargestellt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.VarInRegionLayouts.LabelTop">
      <summary>Der Bereich, der im 'VarIn'-Steuerelement die Prozessvariablenbeschreibung enthält, wird oben dargestellt.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.VarOutRegionLayouts">
      <summary>Aufzählung, die die möglichen Positionen des Bereiches im 'VarOut'-Steuerelement, der die Prozessvariablenbeschreibung enthält, beinhaltet.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.VarOutRegionLayouts.LabelLeft">
      <summary>Der Bereich, der im 'VarOut'-Steuerelement die Prozessvariablenbeschreibung enthält, wird links dargestellt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.VarOutRegionLayouts.LabelTop">
      <summary>Der Bereich, der im 'VarOut'-Steuerelement die Prozessvariablenbeschreibung enthält, wird oben dargestellt.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Visibilities">
      <summary>Enthält die möglichen Konstanten zur Steuerung der Sichtbarlkeit eines 'TextRegion'-Objektes</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Visibilities.Always">
      <summary>Immer sichtbar</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Visibilities.Automatic">
      <summary>Nur sichtbar, wenn Daten zur Anzeige vorhanden sind</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Visibilities.Never">
      <summary>Nie sichtbar</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmColumn">
      <summary>Klasse, die eine Spalte/eine Alarminformation in den Alarmsteuerelementen repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32,VisiWinNET.Forms.ContentAlign)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps, der Spaltenbreite und der Textausrichtung.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Ausrichtung des Textes in der Spalte. </param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps, der Spaltenbreite und der horizontalen Textausrichtung.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Ausrichtung des Textes in der Spalte. </param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps und der Spaltenbreite</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32,VisiWinNET.Forms.ContentAlign,System.String)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps, der Spaltenbreite, der Textausrichtung und dem Namen eines freien Parameters.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Ausrichtung des Textes in der Spalte. </param>
      <param name="freeParam">Name eines freien Parameters aus der Konfiguration des Alarmsystems</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32,System.Windows.Forms.HorizontalAlignment,System.String)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps, der Spaltenbreite, der horizontalen Textausrichtung und dem Namen eines freien Parameters.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Ausrichtung des Textes in der Spalte. </param>
      <param name="freeParam">Name eines freien Parameters aus der Konfiguration des Alarmsystems</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32,VisiWinNET.Forms.ContentAlign,System.Boolean)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps, der Spaltenbreite, der Spaltensichtbarkeit und der horizontalen Textausrichtung. 
</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="visible">True: die Spalte wird direkt sichtbar. False: Die Spalte wird unsichtbar.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32,VisiWinNET.Forms.ContentAlign,System.Boolean,System.String)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumn'-Klasse unter Angabe des Spaltentyps, der Spaltenbreite, der Textausrichtung, der Spaltensichtbarkeit und dem Namen eines freien Parameters. 
</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Breite der Spalte (in Pixeln)</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
      <param name="visible">True: die Spalte wird direkt sichtbar. False: Die Spalte wird unsichtbar.</param>
      <param name="freeParam">Name eines freien Parameters aus der Konfiguration des Alarmsystems</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.AlarmProperty">
      <summary>Gibt den Typ der Alarminformation zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.Alignment">
      <summary>Legt die Ausrichtung des Textes im Feld fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.FreeParam">
      <summary>Legt den Namen des freien Parameters fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.HeaderText">
      <summary>Gibt den Text des Spaltenkopfes zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.Left">
      <summary>Legt die Position des linken Spaltenrandes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.Visible">
      <summary>Legt fest, ob die Spalte sichtbar oder ausgeblendet sein soll.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.Width">
      <summary>Legt die Breite der Spalte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumn.X">
      <summary>Gibt die horizontale Position der linken Seite der Spalte zurück.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt den Typ der Spalte laut 'AlarmProperties'-Aufzählung zurück</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmColumn.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert und dadurch ein erneutes Auslesen/ Auswerten notwendig wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmColumnCollection">
      <summary>Auflistung von Spalten in einem Alarmsteuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.#ctor(System.Windows.Forms.Control)">
      <summary>Erzeugt eine neue Instanz der 'AlarmColumnCollection'-Klasse</summary>
      <param name="control">Angabe des Steuerelementes, dessen Spalten durch die Klasse gekapselt werden sollen</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumnCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Elementes innerhalb der Auflistung</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmColumnCollection.Width">
      <summary>Gibt die Summe der 'Width'-Eigenschaften aller 'AlarmColumn'-Objekte zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.Add(VisiWinNET.Forms.Alarm.AlarmColumn)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <param name="alarmColumn">Angabe des hinzuzufügenden 'AlarmColumn'-Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.AddRange(VisiWinNET.Forms.Alarm.AlarmColumn[])">
      <summary>Fügt der Auflistung mehrere Objekte hinzu</summary>
      <param name="alarmColumns">Feld von 'AlarmColumn'-Objekten</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.IndexFromPosition(System.Int32)">
      <summary>Gibt den Index der Spalte zurück, die an der angegebenen X-Position angezeigt wird.
</summary>
      <returns>Index der Spalte oder -1, wenn sich unter der angegebenen X-Position keine Spalte befindet.</returns>
      <param name="x">x-Position.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.Remove(VisiWinNET.Forms.Alarm.AlarmColumn)">
      <summary>Löscht ein Objekt aus der Auflistung</summary>
      <param name="alarmColumn">Angabe des zu löschenden Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.RemoveAll(VisiWinNET.Forms.Alarm.AlarmColumn)">
      <summary>Löscht mehrere Objekte mit dem gleichen Bezeichner aus der Auflistung</summary>
      <param name="alarmColumn">Der Wert der 'AlarmProperty'-Eigenschaft des übergebenen Objektes wird mit den Werten der Elemente verglichen. Bei Übereinstimmung wird das Element gelöscht.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.ToArray">
      <summary>Gibt die Elemente der Auflistung als Feld von 'AlarmColumn'-Objekten zurück</summary>
      <returns>Feld von 'AlarmColumn'-Objekten</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmColumnCollection.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Durch Semikolonzeichen getrennte Liste der Typen der enthaltenen 'AlarmColumn'-Objekte</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmColumnCollection.CollectionChanged">
      <summary>Wird ausgelöst, wenn ein Element hinzugefügt, gelöscht oder geändert werden</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmColumnCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Index des Elementes, das geändert wurde</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmColumnCollection.ColumnPropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft eines enthaltenen Column-Objektes ändert.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmColumnCollection.LanguageChange">
      <summary>Wird ausgelöst, wenn sich die Sprache im Projekt ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmColumnCollection', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'LanguageChangeEventArgs', das die neue Sprache angibt</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmLine">
      <summary>Steuerelement, das eine Alarmzeile repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLine.#ctor">
      <summary>Erzeugt eine neue Instanz der 'AlarmLine'-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.AlarmFilter">
      <summary>Legt den Filter für die anzuzeigenden Alarme fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.Columns">
      <summary>Legt die im Steuerelement anzuzeigenden Alarminformationen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.CurrentAlarm">
      <summary>Gibt den aktuell im Steuerelement angezeigten Alarm zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.DateTimeFormat">
      <summary>Legt die Datums-/Zeitformatierung der Alarminformationen für die Anzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.DisplayMode">
      <summary>Legt fest, wie ein Alarm im Steuerelement dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.Header">
      <summary>Legt das Aussehen der Spaltenköpfe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.SortMode">
      <summary>Legt das Verhalten des Steuerelementes beim Auftreten neuer Alarme fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.TextAlign">
      <summary>Legt die Textausrichtung im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLine.ToggleAlarms">
      <summary>Legt fest, ob zwischen mehreren anstehenden Alarmen zyklisch umgeschaltet werden soll.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLine.AcknowledgeCurrentAlarm">
      <summary>Quittiert den aktuell im Steuerelement angezeigten Alarm</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLine.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLine.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLine.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLine.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmLine.ChangeAlarm">
      <summary>Wird ausgelöst, wenn die in der Eigenschaft 'CurrentAlarm' angegebene Alarminformation sich geändert hat.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmLine', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AlarmEventArg', das die neuen Alarminformationen enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmLine.ClearAlarm">
      <summary>Wird ausgelöst, wenn die in der Eigenschaft 'CurrentAlarm' angegebene Alarminformation gelöscht wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmLine', das das Ereignis ausgelöst hat.</param>
      <param name="e">Rückgabe eines 'EventArg'-Objektes (Basisklasse für Ereignisargumente), das keine weiteren Informationen enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmLine.ToggleAlarm">
      <summary>Wird ausgelöst, wenn im Togglemodus zwischen den Alarmen gewechselt wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmLine', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AlarmEventArg', das die neuen Alarminformationen enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmLineHeader">
      <summary>Objekt, das die Einstellung der Spaltenköpfe einer Alarmzeile ermöglicht</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLineHeader.#ctor(VisiWinNET.Forms.Alarm.AlarmLine)">
      <summary>Erzeugt eine neue Instanz der 'AlarmLineHeader'-Klasse</summary>
      <param name="alarmLine">Verweis auf das 'AlarmLine'-Steuerelement, für das die Spaltenköpfe parametriert werden.</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLineHeader.Font">
      <summary>Legt die Schriftart der Spaltenköpfe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLineHeader.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLineHeader.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmLineHeader.Visible">
      <summary>Legt fest ob die Spaltenköpfe bzw. die beschreibenden Texte sichtbar sein sollen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLineHeader.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmLineHeader.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>In diesem Fall wird eine leere Zeichenfolge zurückgegeben</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmLineHeader.ViewChanged">
      <summary>Wird ausgelöst, wenn sich die Ansicht der Spaltenköpfe ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmLineHeader', das das Ereignis ausgelöst hat.</param>
      <param name="e">Rückgabe eines 'EventArg'-Objektes (Basisklasse für Ereignisargumente), das keine weiteren Informationen enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmList">
      <summary>Steuerelement, das eine Ansicht auf die aktuell im System anstehenden Alarme erlaubt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.#ctor">
      <summary>Erzeugt eine neue Instanz der 'AlarmList'-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.AlarmFilter">
      <summary>Legt den Filter für die anzuzeigenden Alarme fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.Alarms">
      <summary>Gibt eine Auflistung der aktuell im Steuerelement angezeigten Alarme zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.AllowAcknowledge">
      <summary>Legt fest, ob im Steuerelement Alarme durch einen Doppelklick auf die entsprechenden Listeneinträge quittiert werden können</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.BackColorSelected">
      <summary>Legt die Hintergrundfarbe des selektierten Alarms fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.Columns">
      <summary>Legt die anzuzeigenden Alarminformationen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.ContentRectangle">
      <summary>Gibt Abmessungen und Position des Rechteckes zurück, in dem die Elemente gezeichnet werden.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.CurrentCursor">
      <summary>Legt den aktuellen Mauszeiger im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.DateTimeFormat">
      <summary>Legt die Datums-/Zeitformatierung der Alarminformationen für die Anzeige fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.FocusRect">
      <summary>Legt fest, ob die im Steuerelement selektierte Zeile zusätzlich durch ein gestricheltes Rechteck dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.Font">
      <summary>Legt die Schriftart der ausgegebenen Alarminformationen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.ForeColorSelected">
      <summary>Legt die Schriftfarbe des selektierten Alarms fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.Grid">
      <summary>Legt fest, ob die einzelnen Alarminformationen wie in einer Tabelle durch Linien getrennt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.Header">
      <summary>Legt das Aussehen des Tabellenkopfes (also der ersten Tabellenzeile, die die Überschriften der Spalten beinhaltet) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.HScrollBarValue">
      <summary>Gibt den Wert der horizontalen Bildlaufleiste zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.ItemAutoHeight">
      <summary>Legt fest, ob textuelle Alarminformationen automatisch umgebrochen werden und damit eine Anpassung der Höhe eines Alarmeintrages vorgenommen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.ItemHeight">
      <summary>Legt die minimale Höhe eines Alarmeintrages fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.KeyAcknowledge">
      <summary>Legt fest, mit welcher Tastenkombination als Shortcut ein Alarm quittiert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.ScrollBarProperties">
      <summary>Legt fest, wie die Bildlaufleisten des Steuerelementes dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.ScrollBarWidth">
      <summary>Legt die Breite der vertikalen Bildlaufleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.SelectedAlarm">
      <summary>Gibt die Informationen des im Steuerelement selektierten Alarms zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.SelectedIndex">
      <summary>Gibt den Listenindex des im Steuerelement selektierten Alarms zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.SortMode">
      <summary>Legt das Verhalten des Steuerelementes beim Auftreten neuer Alarme fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.StateColoring">
      <summary>Legt fest, ob zur Darstellung der Alarmzustände die in den Alarmklassendefinitionen angegebenen Farben verwendet werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmList.SuspendResize">
      <summary>Legt fest, ob zur Laufzeit die Spaltenbreite angepasst werden darf</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.AcknowledgeAllAlarms">
      <summary>Quittiert alle im Steuerelement angezeigten Alarme</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.AcknowledgeSelectedAlarm">
      <summary>Quittiert den im Steuerelement selektierten Alarm</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.PointInHeader(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich die angegebene Koordinate im Listenkopf befindet</summary>
      <returns>True: Die Koordinate befindet sich im Listenkopf, ansonsten False</returns>
      <param name="x">x-Koordinate</param>
      <param name="y">y-Koordinate</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollDown(System.Int32)">
      <summary>Führt einen Bildlauf nach unten aus. Dabei wird über 'count' angegebene Anzahl von Elementen von unten in die Ansicht verschoben.
</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
      <param name="count">Anzahl der Elemente, um die die Ansicht verschoben werden soll. Wird 'count' nicht angebenen, verschiebt sich die Ansicht um ein Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollDown">
      <summary>Führt einen Bildlauf um ein Element nach unten aus. 
</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollPageDown">
      <summary>Führt einen seitenweisen Bildlauf nach unten aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollPageUp">
      <summary>Führt einen seitenweisen Bildlauf nach oben  aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollToBottom">
      <summary>Führt einen Bildlauf an das Ende der Liste aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollToIndex(System.Int32)">
      <summary>Führt einen Bildlauf zum angegebenen Element aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das angegebene Element wurde nicht gefunden.</returns>
      <param name="index">Angabe des Elementeindex, zu dem der Bildlauf erfolgen soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollToTop">
      <summary>Führt einen Bildlauf an den Anfang der Liste aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollUp(System.Int32)">
      <summary>Führt einen Bildlauf nach oben aus. Dabei wird die über 'count' angegebene Anzahl von Elementen von oben in die Ansicht verschoben.
</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
      <param name="count">Anzahl der Elemente, um die die Ansicht verschoben werden soll. Wird 'count' nicht angebenen, verschiebt sich die Ansicht um ein Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmList.ScrollUp">
      <summary>Führt einen Bildlauf nach oben um ein Element aus.
</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmList.ChangeAlarm">
      <summary>Wird ausgelöst, wenn sich der Zustand eines in der Alarmliste angezeigten Alarms ändert, wenn ein Alarm also z.B. quittiert wird.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AlarmEventArg', das die geänderte Alarminformationen enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmList.ClearAlarm">
      <summary>Wird ausgelöst, wenn ein Alarm aus der Alarmliste entfernt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Rückgabe eines 'EventArg'-Objektes (Basisklasse für Ereignisargumente), das keine weiteren Informationen enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmList.InitAlarm">
      <summary>Wird nach dem Laden des Steuerelementes für jeden bislang anstehenden Alarm ausgelöst.
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AlarmEventArg', das die Alarminformationen enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmList.NewAlarm">
      <summary>Wird ausgelöst, wenn ein neuer Alarm im System auftritt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AlarmEventArg', das die neuen Alarminformationen enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmList.SelectedIndexChanged">
      <summary>Wird ausgelöst, wenn sich die Selektion im Steuerelement ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'AlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmListItem">
      <summary>Kapselt die Informationen eines Eintrages in einer Alarmliste.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItem.#ctor">
      <summary>Erzeugt eine neue Instanz der 'AlarmListItem'-Klasse
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItem.#ctor(VisiWinNET.Forms.Alarm.AlarmList,VisiWinNET.Alarm.AlarmItem)">
      <summary>
</summary>
      <param name="alarmList">Referenz auf die Alarmliste.</param>
      <param name="alarmItem">Referenz auf das AlarmItem.</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItem.AlarmItem">
      <summary>Referenz auf das AlarmItem.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItem.AlarmList">
      <summary>Referenz auf die Alarmliste.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItem.Height">
      <summary>Legt die Höhe der Zeile fest, die die Alarminformationen darstellt.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItem.Index">
      <summary>Gibt den Listenindex des Elementes zurück.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItem.Selected">
      <summary>Legt fest, ob das Element selektiert dargestellt werden soll.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItem.Top">
      <summary>Gibt den grafischen Abstand zur oberen Kante des Steuerelementes zurück. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItem.CalcHeight(System.Drawing.Graphics,System.Drawing.Font,System.Int32,System.Boolean)">
      <summary>Errechnet die Höhe des Elementes.
</summary>
      <param name="g">Graphics-Objekt, in das das Element gezeichnet werden soll.</param>
      <param name="font">Schriftart für die darzustellenden Texte.</param>
      <param name="minHeight">Minimale Höhenvorgabe.</param>
      <param name="autoHeight">True: Die Höhe berechnet sich aus dem gegebenenfalls mehrzeiligen Inhalt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItem.CompareTo(System.Object)">
      <summary>Vergleicht diese Instanz mit dem übergebenen Objekt.
</summary>
      <returns>&lt;0: Der Wert der Instanz ist kleiner als der Wert von obj.0: Der Wert der Instanz ist gleich dem Wert von obj.&gt;0: Der Wert der Instanz ist größer als der Wert von obj. </returns>
      <param name="value">Objekt, mit dem verglichen werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItem.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Boolean,System.Int32,System.Boolean)">
      <summary>Zeichnet das Element in das angegebene Graphics-Objekt.
</summary>
      <param name="g">Graphics-Objekt, in das gezeichnet werden soll.</param>
      <param name="rectangle">Rechteck, in das gezeichnet werden soll.</param>
      <param name="font">Schriftart für die Texte. </param>
      <param name="itemAutoHeight">True: Die Höhe berechnet sich aus dem gegebenenfalls mehrzeiligen Inhalt.</param>
      <param name="hScrollValue">Wert für den horizontalen Bildlauf (bezogen auf die in rectangle angegebene Breite).</param>
      <param name="drawFocus">True: Ein Focus-Rahmen wird um das Element gezeichnet.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmListItemCollection">
      <summary>Kapselt die Informationen und Funktionen einer Liste von AlarmListItem-Objekten in einem AlarmList-Steuerelement.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItemCollection.#ctor(VisiWinNET.Forms.Alarm.AlarmList)">
      <summary>Erzeugt eine neue Instanz der 'AlarmListItemCollection'-Klasse</summary>
      <param name="alarmList">Verweis auf das AlarmList-Steuerelement.</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItemCollection.Count">
      <summary>Gibt die Anzahl der Elemente in der Liste zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.AlarmListItemCollection.Item(System.Int32)">
      <summary>Gibt das über den Elementeindex angegebene Element zurück.</summary>
      <param name="index">0-indizierter Listenindex.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItemCollection.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItemCollection.GetEnumerator">
      <summary>Gibt einen Verweis auf eine IEnumerator-Schnittstelle aus, die Zugriff auf die Elemente einer Auflistung (Enumeration) gewährleistet. 
</summary>
      <returns>Ein Objekt vom Typ System.Collections.IEnumerator, das alle 'AlarmGroup'-Objekte enthält.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.AlarmListItemCollection.IndexOf(VisiWinNET.Forms.Alarm.AlarmListItem)">
      <summary>Gibt den Listenindex des angegebenen Eintrages zurück.</summary>
      <returns>Der 0-indizierte Index oder -1, wenn der Eintrag nicht in der Liste enthalten ist.</returns>
      <param name="item">Referenz auf den Eintrag, dessen Index zu ermitteln ist.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.AlarmListItemCollection.CollectionChanged">
      <summary>Wird ausgelöst, wenn ein Listenelement gelöscht, hinzugefügt oder geändert wurde.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.HistoricalAlarmList">
      <summary>Steuerelement, das die Ansicht auf die vom System aufgezeichnetenen Alarmen ermöglicht</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmList'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.Alarms">
      <summary>Gibt die im Steuerelement dargestellten historischen Alarminformationen als Auflistung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.Columns">
      <summary>Legt die anzuzeigenden Alarminformationen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.DefaultSortColumn">
      <summary>Legt den Index der Spalte fest, nach deren Inhalt die Daten sortiert werden sollen, wenn ein neues Abfrageergebnis dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.DefaultSortMode">
      <summary>Legt fest, wie Daten im Steuerelement sortiert werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.Filter">
      <summary>Legt den Filter für die anzuzeigenden Alarme fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.HistoricalFile">
      <summary>Filtert die angezeigten Informationen nach Dateiinhalten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.MaxFileTime">
      <summary>Gibt den Zeitstempel des letzten aufgezeichneten Alarms zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.MinFileTime">
      <summary>Gibt den Zeitstempel des ersten aufgezeichneten Alarms zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.SelectedAlarm">
      <summary>Gibt das im Steuerelement selektierte Element zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.StateColoring">
      <summary>Legt fest, ob zur Darstellung der Alarmzustände die in den Alarmklassendefinitionen angegebenen Farben verwendet werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.SuspendLayoutOnUpdateList">
      <summary>Unterdrückt das Zeichnen innerhalb des Steuerelementes, während neue Daten eingefügt werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmList.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmList.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateList">
      <summary>Die Methode 'UpdateList' ruft die über 'Filter' parametrierten Daten vom Server ab</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.HistoricalAlarmList.AsyncAlarmRequestFinished">
      <summary>Wird ausgelöst, nachdem neu angeforderte Daten vom Alarmsystem beim Steuerelement angekommen sind</summary>
      <param name="sender">Angabe des Objektes vom Typ 'HistoricalAlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AsyncRequestSuccessArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListFinished">
      <summary>Zeigt das Ende einer über 'UpdateList' gestarteten Abfrage an</summary>
      <param name="sender">Angabe des Objektes vom Typ 'HistoricalAlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'HistoricalAlarmList.UpdateListFinishedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListProgress">
      <summary>Zeigt den Fortschritt einer über 'UpdateList' gestarteten Abfrage an</summary>
      <param name="sender">Angabe des Objektes vom Typ 'HistoricalAlarmList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'UpdateListProgressEventArgs', das weitere Informationen zum Abfragestatus enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListFinishedEventArgs">
      <summary>Stellt Daten für das 'UpdateListFinished'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListFinishedEventArgs.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmList.UpdateListFinishedEventArgs'-Klasse.</summary>
      <param name="result">Wert für die UpdateListResult-Eigenschaft.</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListFinishedEventArgs.UpdateListResult">
      <summary>Gibt zurück, ob die Abfrage von Daten erfolgreich war</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListProgressEventArgs">
      <summary>Stellt Daten für das 'UpdateListProgress'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListProgressEventArgs.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmList.UpdateListProgressEventArgs'-Klasse.</summary>
      <param name="progress">Angabe des Wertes für die Eigenschaft 'Progress'</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListProgressEventArgs.Progress">
      <summary>Gibt an, wieviel Prozent der Abfrage bereits abgearbeitet sind</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn">
      <summary>Klasse, die eine Spalte im 'HistoricalAlarmList'-Steuerelement repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse  mit der angegebenen Alarmeigenschaft, dem Spaltenkopftext, der Spaltenbreite und der Textausrichtung.
</summary>
      <param name="alarmProperty">Wert für die Eigenschaft 'HistoricalAlarmProperty'</param>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse  mit der angegebenen Alarmeigenschaft, der Spaltenbreite und der Textausrichtung.
</summary>
      <param name="alarmProperty">Wert für die Eigenschaft 'HistoricalAlarmProperty'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse  mit der angegebenen Alarmeigenschaft und der Spaltenbreite.
</summary>
      <param name="alarmProperty">Wert für die Eigenschaft 'HistoricalAlarmProperty'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse  mit der angegebenen Alarmeigenschaft, dem Spaltenkopftext, der Spaltenbreite, der Textausrichtung, der Sortierbarkeit und der Sichtbarkeit.
</summary>
      <param name="alarmProperty">Wert für die Eigenschaft 'HistoricalAlarmProperty'</param>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
      <param name="sortable">Wert für die Eigenschaft 'Sortable'</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse  mit der angegebenen Alarmeigenschaft, dem Spaltenkopftext, der Spaltenbreite, der Textausrichtung und der Sortierbarkeit.
</summary>
      <param name="alarmProperty">Wert für die Eigenschaft 'HistoricalAlarmProperty'</param>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
      <param name="sortable">Wert für die Eigenschaft 'Sortable'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse mit der angegebenen Alarmeigenschaft.
</summary>
      <param name="alarmProperty">Wert für die Eigenschaft 'HistoricalAlarmProperty'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean,System.String)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmListColumn'-Klasse  mit der angegebenen Alarmeigenschaft, dem Spaltenkopftext, der Spaltenbreite, der Textausrichtung, der Sortierbarkeit, der Sichtbarkeit und dem namen eines freien Parameters.
</summary>
      <param name="alarmProperty">Wert für die Eigenschaft 'HistoricalAlarmProperty'</param>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
      <param name="sortable">Wert für die Eigenschaft 'Sortable'</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
      <param name="freeParam">Name eines freien Parameters aus der Konfiguration des Alarmsystems</param>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.FreeParam">
      <summary>Legt den Namen des freien Parameters fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.HeaderText">
      <summary>Legt den festen, nicht sprachumschaltbaren Text im Spaltenkopf fest, wenn keine Angaben in 'LocalizedHederText' vorgenommen werden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.HistoricalAlarmProperty">
      <summary>Bestimmt die anzuzeigende Alarminformation</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.LocalizedHeaderText">
      <summary>Legt den Bezeichner für einen Text aus der Sprachumschaltung fest, der im Spaltenkopf dargestellt wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.Name">
      <summary>Legt den Namen für die Spalte fest.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Alarm.HistoricalAlarmListColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt die Einstellung der 'HistoricalAlarmProperty'-Eigenschaft zurück</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmColumnCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'CollectionChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListFinishedEventHandler">
      <summary>Delegat für das Ereignis 'UpdateListFinished'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.HistoricalAlarmList.UpdateListProgressEventHandler">
      <summary>Delegat für das Ereignis 'UpdateListProgress'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmLineDisplayModes">
      <summary>Aufzählung, die die Darstellungsarten einer Alarmzeile enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmLineDisplayModes.Columns">
      <summary>Die einzelnen Alarminformationen werden als Spalten angezeigt. Ein Zeilenumbruch in einer Alarminformation wird als Zeilenumbruch in der entsprechenden Spalte dargestellt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmLineDisplayModes.SingleLine">
      <summary>Die einzelnen Alarminformationen werden gemeinsam als Fließtext angezeigt. </summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.AlarmProperties">
      <summary>Aufzählung, die die zur Verfügung stehenden Informationen zu aktuell im System anstehenden Alarmen umfasst</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.AcknowledgeTime">
      <summary>Alarminformation "Quittierungszeit"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.ActivationCounter">
      <summary>Alarminformation "Reaktiviert"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.ActivationTime">
      <summary>Alarminformation "Zeit des Auftretens"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Class">
      <summary>Alarminformation "Alarmklasse"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Count">
      <summary>Alarminformation "Anzahl anstehender Alarme" </summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.DeactivationTime">
      <summary>Alarminformation "Deaktivierungszeit"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.FreeParam">
      <summary>Alarminformation "Freier Parameter" (Der Name des freien Parameters wird in 'AlarmColumn.FreeParam' eingestellt)</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Group">
      <summary>Alarminformation "Alarmgruppe"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Machine">
      <summary>Rechnername, auf dem der Alarm quittiert wurde</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Param1">
      <summary>Alarminformation "Parameter1"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Param2">
      <summary>Alarminformation "Parameter2"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Priority">
      <summary>Alarminformation "Priorität"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.State">
      <summary>Alarminformation "Status"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Symbol">
      <summary>Alarminformation "Symbol"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.Text">
      <summary>Alarminformation "Text"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.AlarmProperties.User">
      <summary>Name des Benutzers, der den Alarm quittiert hat</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties">
      <summary>Aufzählung, die die zur Verfügung stehenden Informationen zu vom System aufgezeichneten Alarmen umfasst</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.AcknowledgeTime">
      <summary>Alarminformation "Quittierungszeit"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.ActivationCounter">
      <summary>Alarminformation "Reaktiviert"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.ActivationTime">
      <summary>Alarminformation "Zeit des Auftretens"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Class">
      <summary>Alarminformation "Alarmklasse"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.DeactivationTime">
      <summary>Alarminformation "Deaktivierungszeit"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.FileName">
      <summary>Alarminformation "Datei" (in der der Alarm aufgezeichnet wurde)</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.FreeParam">
      <summary>Alarminformation "Freier Parameter" (Der Name des freien Parameters wird in 'HistoricalAlarmListColumn.FreeParam' eingestellt)</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Group">
      <summary>Alarminformation "Alarmgruppe"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Machine">
      <summary>Rechnername, auf dem der Alarm quittiert wurde</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.NotesCount">
      <summary>Alarminformation "Anzahl der Notizen"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Param1">
      <summary>Alarminformation "Parameter1"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Param2">
      <summary>Alarminformation "Parameter2"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Priority">
      <summary>Alarminformation "Priorität"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.State">
      <summary>Alarminformation "Status"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Symbol">
      <summary>Alarminformation "Symbol"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.Text">
      <summary>Alarminformation "Text"</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Alarm.HistoricalAlarmProperties.User">
      <summary>Name des Benutzers, der den Alarm quittiert hat</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.BaseShape">
      <summary>Basistyp für die Steuerelemente auf der grafischen Ebene</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.#ctor">
      <summary>Erzeugt eine neue Instanz der 'BaseShape'-Klasse</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Anchor">
      <summary>Ruft ab oder legt fest, welche Ränder des Steuerelements an den Rändern des zugehörigen Containers verankert sind.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Authorization">
      <summary>Legt das Verhalten des Steuerelementes bezüglich der Anbindung an die Benutzerverwaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Blink">
      <summary>Legt das Verhalten des Steuerelementes bezüglich des applikationsweit synchronisierten Blinken fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Bottom">
      <summary>Ruft den Abstand zwischen dem unteren Rand des Steuerelements und dem oberen Rand des Clientbereichs des zugehörigen Containers ab.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Bounds">
      <summary>Ruft die Größe und Position des Steuerelements ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.ContextMenu">
      <summary>Ruft das dem Steuerelement zugeordnete Kontextmenü ab oder legt dieses fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.ContextMenuStrip">
      <summary>Legt das ContextmenuStrip-Objekt fest, das dem Steuerelement zugeordnet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Cursor">
      <summary>Ruft den Cursor ab, der angezeigt wird, wenn sich der Mauszeiger über dem Steuerelement befindet, oder legt diesen fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.DesignMode">
      <summary>Gibt zurück, ob das Projekt im Designmodus ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Disposing">
      <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement gerade freigegeben werden soll.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Enabled">
      <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement auf Benutzerinteraktionen reagieren kann, oder legt diesen fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Events">
      <summary>Verknüpft Steuerelementeereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Height">
      <summary>Ruft die Höhe des Steuerelements ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.IsDisposed">
      <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement freigegeben wurde.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Left">
      <summary>Ruft die x-Koordinate des linken Randes eines Steuerelements in Pixel ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Location">
      <summary>Ruft die Koordinaten der linken oberen Ecke des Steuerelementes relativ zur linken oberen Ecke des Containers ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseHitExtent">
      <summary>Legt einen Fangbereich für die Mausaktionen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Name">
      <summary>Ruft den Namen des Steuerelements ab oder legt diesen fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.OutlineBounds">
      <summary>Ruft die Größe und Position des Rechteckes ab, in dem das Steuerelement zeichnet.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Overhang">
      <summary>Gibt an, wie weit die Zeichenroutine des Steuerelementes über die in 'Bounds' angegebenen Grenzen überschreitet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Parent">
      <summary>Ruft den übergeordneten Container des Steuerelements ab oder legt diesen fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Right">
      <summary>Ruft den Abstand zwischen dem rechten Rand des Steuerelements und dem linken Rand des zugehörigen Containers ab.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Size">
      <summary>Ruft die Höhe und Breite des Steuerelements ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Tag">
      <summary>Ruft das Objekt ab, das Daten über das Steuerelement enthält, oder legt dieses fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Top">
      <summary>Ruft die y-Koordinate des oberen Randes des Steuerelements in Pixel ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.UseWaitCursor">
      <summary>Legt fest oder gibt zurück, ob der Warte-Mauszeiger auf dem Steuerelement und allen darin befindlichen Steuerelementen angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Visible">
      <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement angezeigt wird, oder legt diesen fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.BaseShape.Width">
      <summary>Ruft die Breite des Steuerelements ab oder legt diese fest.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.BringToFront">
      <summary>Zeigt dieses Steuerelement am Anfang der z-Reihenfolge an.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.FindForm">
      <summary>Ruft das Formular ab, in dem sich das Steuerelement befindet.</summary>
      <returns>Das ermittelte Formular</returns>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.Hide">
      <summary>Verbirgt das Steuerelement vor dem Benutzer.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.HitTest(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich der klicksensitive Bereich des Steuerelementes an den angegebenen Koordinaten liegt</summary>
      <returns>'True': Es wurde auf den klicksensitiven Bereich geklickt, ansonsten 'false'</returns>
      <param name="x">x-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
      <param name="y">y-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.Invalidate">
      <summary>Erklärt einen bestimmten Bereich des Steuerelements für ungültig und veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnClick(System.EventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Formal übertragene Zusatzinformation zur Quelle des Aufrufes</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnDoubleClick(System.EventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Formal übertragene Zusatzinformation zur Quelle des Aufrufes</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch die Mauskoordinaten)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch die Mauskoordinaten)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch die Mauskoordinaten)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseEnter(System.EventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Formal übertragene Zusatzinformation zur Quelle des Aufrufes</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseHover(System.EventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Formal übertragene Zusatzinformation zur Quelle des Aufrufes</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseLeave(System.EventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Formal übertragene Zusatzinformation zur Quelle des Aufrufes</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch die Mauskoordinaten)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch die Mauskoordinaten)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch die Mauskoordinaten)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch einen Verwei auf das GDI-Objekt , in das gezeichnet wird)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.PointToClient(System.Drawing.Point)">
      <summary>Rechnet die Position des angegebenen Bildschirmpunktes in Clientkoordinaten um.</summary>
      <returns>Der umgerechnete Punkt</returns>
      <param name="p">Der umzurechnende Punkt</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.PointToScreen(System.Drawing.Point)">
      <summary>Rechnet die Position des angegebenen Clientpunktes in Bildschirmkoordinaten um.</summary>
      <returns>Der umgerechnete Punkt</returns>
      <param name="p">Der umzurechnende Punkt</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.RectangleToClient(System.Drawing.Rectangle)">
      <summary>Berechnet die Größe und die Position des angegebenen Bildschirmrechtecks in Clientkoordinaten.</summary>
      <returns>das umgerechnete Rechteck</returns>
      <param name="rect">das umzurechnende Rechteck</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>Berechnet die Größe und die Position des angegebenen Clientrechtecks in Bildschirmkoordinaten.</summary>
      <returns>das umgerechnete Rechteck</returns>
      <param name="rect">das umzurechnende Rechteck</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.ResumePaint(System.Boolean)">
      <summary>Nimmt die normale Zeichenlogik wieder auf.</summary>
      <param name="performPaint">'True': anstehende Änderungen im Steuerelement werden sofort gezeichnet, ansonsten 'false'</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.Scale(System.Drawing.SizeF)">
      <summary>Skaliert das Steuerelement und alle untergeordneten Steuerelemente.</summary>
      <param name="factor">Angabe der Skalierungsfaktoren für x- und y-Richtung</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.SendToBack">
      <summary>Sendet das Steuerelement ans Ende der z-Reihenfolge.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.Show">
      <summary>Zeigt dem Benutzer das Steuerelement an.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.SuspendPaint">
      <summary>Unterbricht vorübergehend die Zeichenlogik für das Steuerelement.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.BaseShape.Update">
      <summary>Bewirkt, dass das Steuerelement die für ungültig erklärten Bereiche mit dessen Clientbereich neu zeichnet.</summary>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.AuthorizationChanged">
      <summary>Wird ausgelöst, wenn sich durch das An-/Abmelden eines Benutzers eine Änderung der Darstellung ergibt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AuthorizationEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.Click">
      <summary>Tritt beim Klicken auf das Steuerelement ein.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.ContextMenuChanged">
      <summary>Tritt ein, wenn sich der Wert der ContextMenu-Eigenschaft ändert.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.ContextMenuStripChanged">
      <summary>Tritt auf, wenn sich der Wert der Eigenschaft ContextMenuStrip ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.CursorChanged">
      <summary>Tritt ein, wenn sich der Wert der Cursor-Eigenschaft ändert.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.DoBlink">
      <summary>Meldet den Phasenwechsel des applikationsweit synchronisierten Blinkens.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BlinkEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.DoubleClick">
      <summary>Tritt beim Doppelklicken auf das Steuerelement ein.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.EnabledChanged">
      <summary>Tritt ein, wenn sich der Enabled-Eigenschaftenwert geändert hat.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.LocationChanged">
      <summary>Tritt ein, wenn sich der Location-Eigenschaftenwert geändert hat.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseClick">
      <summary>Tritt auf, wenn das Steuerelement mit der Maus geklickt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'MouseEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseDoubleClick">
      <summary>Tritt auf, wenn das Steuerelement mit der Maus doppelt geklickt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'MouseEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseDown">
      <summary>Tritt ein, wenn sich der Mauszeiger über dem Steuerelement befindet und eine Maustaste gedrückt wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'MouseEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseEnter">
      <summary>Tritt ein, wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseHover">
      <summary>Tritt ein, wenn mit dem Mauszeiger auf das Steuerelement gezeigt wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseLeave">
      <summary>Tritt ein, wenn der Mauszeiger den Bereich des Steuerelements verlässt.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseMove">
      <summary>Tritt ein, wenn der Mauszeiger über dem Steuerelement bewegt wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'MouseEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseUp">
      <summary>Tritt ein, wenn sich der Mauszeiger über dem Steuerelement befindet und eine Maustaste losgelassen wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'MouseEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.MouseWheel">
      <summary>Tritt ein, wenn das Mausrad bewegt wird, während das Steuerelement den Fokus besitzt.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'MouseEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.Paint">
      <summary>Tritt ein, wenn das Steuerelement neu gezeichnet wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PaintEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.ParentChanged">
      <summary>Tritt ein, wenn sich der Parent-Eigenschaftenwert ändert.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.SizeChanged">
      <summary>Tritt ein, wenn sich der Size-Eigenschaftenwert ändert.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.BaseShape.VisibleChanged">
      <summary>Tritt ein, wenn sich der Visible-Eigenschaftenwert ändert.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BaseShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.LinePointAnchor">
      <summary>Kapselt die nötigen Informationen zum Binden der Position eines Linienendpunktes an ein Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LinePointAnchor.#ctor">
      <summary>Initialisiert eine neue Instanz der 'LinePointAnchor'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LinePointAnchor.Anchor">
      <summary>Legt fest, an welche Koordinaten des Zielsteuerelementes </summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LinePointAnchor.AnchorTo">
      <summary>Legt das Steuerelement fest, an das der Punkt gebunden werden soll</summary>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.LinePointAnchor.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft geändert hat </summary>
      <param name="sender">Angabe des Objektes vom Typ 'LinePointAnchor', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.LinePointStyle">
      <summary>Kapselt die nötigen Informationen zur Darstellung eines Linienendpunktes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LinePointStyle.#ctor">
      <summary>Initialisiert eine neue Instanz der 'LinePointStyle'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LinePointStyle.Color">
      <summary>Legt die Farbe für das Symbol m Linienende fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LinePointStyle.LineWidth">
      <summary>Legt fest, wie dick das Symbol am Linienende dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LinePointStyle.Size">
      <summary>Legt die Größe für das Symbol am Linienende fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LinePointStyle.Type">
      <summary>Legt fest, welches Symbol am Linienende gezeichnet wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LinePointStyle.Clone">
      <summary>Erzeugt ein Kopie des Objektes</summary>
      <returns>Die erzeugte Kopie</returns>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LinePointStyle.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt Farbe, Typ und Größe der Darstellung an</returns>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.LinePointStyle.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LinePointStyle', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.LineShape">
      <summary>Steuerelement, das eine Linie auf der grafischen Ebene darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LineShape.#ctor">
      <summary>Initialisiert eine neue Instanz der 'LineShape'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.Bounds">
      <summary>Gibt das über Start- und Endpunkt definierte Rechteck zurück </summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.CurrentLineColor">
      <summary>Gibt die aktuell verwendete Linienfarbe zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.EndPoint">
      <summary>Legt die Koordinate des Linienendpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.EndPointStyle">
      <summary>Legt das Aussehen des Linienendpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.LineColor">
      <summary>Legt die Farbe der Linie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.LineStyle">
      <summary>Legt fest, wie die Linie gezeichnet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.LineWidth">
      <summary>Legt fest, wie breit die Linie gezeichnet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.MouseHitExtent">
      <summary>Legt einen Fangbereich für die Mausaktionen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.Overhang">
      <summary>Gibt an, wie weit die Zeichenroutine des Steuerelementes über die in 'Bounds' angegebenen Grenzen überschreitet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.StartPoint">
      <summary>Legt die Koordinate des Linienstartpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.StartPointStyle">
      <summary>Legt das Aussehen des Linienstartpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.X1">
      <summary>Legt die X-Koordinate des Linienstartpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.X2">
      <summary>Legt die X-Koordinate des Linienendpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.Y1">
      <summary>Legt die Y-Koordinate des Linienstartpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.LineShape.Y2">
      <summary>Legt die Y-Koordinate des Linienendpunktes fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LineShape.HitTest(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich der klicksensitive Bereich des Steuerelementes an den angegebenen Koordinaten liegt</summary>
      <returns>'True': Es wurde auf den klicksensitiven Bereich geklickt, ansonsten 'false'</returns>
      <param name="x">x-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
      <param name="y">y-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LineShape.Invalidate">
      <summary>Erklärt einen bestimmten Bereich des Steuerelements für ungültig und veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LineShape.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="e">Zusatzinformation zur Quelle des Aufrufes (Enthält unter anderem auch einen Verwei auf das GDI-Objekt , in das gezeichnet wird)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.LineShape.Scale(System.Drawing.SizeF)">
      <summary>Skaliert das Steuerelement und alle untergeordneten Steuerelemente.</summary>
      <param name="factor">Angabe der Skalierungsfaktoren für x- und y-Richtung</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.LineShape.EndPointChanged">
      <summary>Wird ausgelöst, wenn sich eine den Linienendpunkt betreffende Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LineShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.LineShape.StartPointChanged">
      <summary>Wird ausgelöst, wenn sich eine den Linienstartpunkt betreffende Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LineShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.OutlineShape">
      <summary>Basistyp für Steuerelemente auf der grafischen Ebene, die eine geometrische Form darstellen ('RectangleShape', 'TriangleShape', 'OvalShape')</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.BackColorPattern">
      <summary>Legt eine Farbe zur Darstellung eines Musters (Eigenschaft 'PatternStyle') fest </summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.BackgroundImage">
      <summary>Legt eine Grafik fest, die im Steuerelement angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.BackgroundImageLayout">
      <summary>Legt die Position der Grafik auf dem Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.BorderColor">
      <summary>Legt die Farbe zum Zeichnen der geometrischen Form fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.BorderStyle">
      <summary>Legt den Stil zum Zeichnen der geometrischen Form fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.BorderWidth">
      <summary>Legt die Linienbreite zum Zeichnen der geometrischen Form fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.DefaultBackColorPattern">
      <summary>Legt den Vorgabewert für BackColorPattern fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.FillColor">
      <summary>Legt die Füllfarbe für das Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.FillGradientColor">
      <summary>Legt eine zweite Farbe für einen Farbverlauf fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.FillStyle">
      <summary>Legt fest, wie die geometrische Form gefüllt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.GradientStyle">
      <summary>Legt die Richtung des Farbverlaufes fest, wenn 'FillStyle' auf 'Gradient' eingestellt wurde.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.Overhang">
      <summary>Gibt an, wie weit die Zeichenroutine des Steuerelementes über die in 'Bounds' angegebenen Grenzen überschreitet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.OutlineShape.PatternStyle">
      <summary>Legt das Muster im Steuerelement fest, wenn in 'FillStyle' der Wert 'Pattern' angegeben wurde.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.OutlineShape.HitTest(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich der klicksensitive Bereich des Steuerelementes an den angegebenen Koordinaten liegt</summary>
      <returns>'True': Es wurde auf den klicksensitiven Bereich geklickt, ansonsten 'false'</returns>
      <param name="x">x-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
      <param name="y">y-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.OutlineShape.Invalidate">
      <summary>Erklärt einen bestimmten Bereich des Steuerelements für ungültig und veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.OutlineShape.Scale(System.Drawing.SizeF)">
      <summary>Skaliert das Steuerelement und alle untergeordneten Steuerelemente.</summary>
      <param name="factor">Angabe der Skalierungsfaktoren für x- und y-Richtung</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.OutlineShape.BackColorChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der 'BackColor'-Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'OutlineShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.OutlineShape.BackgroundImageChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der 'BackgroundImage'-Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'OutlineShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.OutlineShape.BackgroundImageLayoutChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der 'BackgroundImageLayout'-Eigenschaft ändert
</summary>
      <param name="sender">Angabe des Objektes vom Typ 'OutlineShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.OvalShape">
      <summary>Steuerelement, das eine Ellipse auf der grafischen Ebene darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.OvalShape.#ctor">
      <summary>Initialisiert eine neue Instanz der 'OvalShape'-Klasse.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.PictureShape">
      <summary>Steuerelement, das eine Grafik auf der grafischen Ebene darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.PictureShape.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PictureShape'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.PictureShape.BackColor">
      <summary>Legt die Hintergrundfarbe des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.PictureShape.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.PictureShape.ColorReplace">
      <summary>Gibt eine Farbe an, die im Steuerelement durch 'FillColor' ersetzt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.PictureShape.FillColor">
      <summary>Legt eine Farbe fest, die statt 'ColorReplace' verwendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.PictureShape.Image">
      <summary>Legt die im Steuerelement dargestellte Grafik fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.PictureShape.ImageAlignment">
      <summary>Legt die Darstellung und Ausrichtung der im Steuerelement dargestellten Grafiken fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.PictureShape.TransparentColor">
      <summary>Gibt eine Farbe an, die in der geladenen Grafik transparent dargestellt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.PictureShape.HitTest(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich der klicksensitive Bereich des Steuerelementes an den angegebenen Koordinaten liegt</summary>
      <returns>'True': Es wurde auf den klicksensitiven Bereich geklickt, ansonsten 'false'</returns>
      <param name="x">x-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
      <param name="y">y-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.PictureShape.Invalidate">
      <summary>Erklärt einen bestimmten Bereich des Steuerelements für ungültig und veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.PictureShape.Scale(System.Drawing.SizeF)">
      <summary>Skaliert das Steuerelement und alle untergeordneten Steuerelemente.</summary>
      <param name="factor">Angabe der Skalierungsfaktoren für x- und y-Richtung</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.RectangleShape">
      <summary>Steuerelement, das ein Rechteck auf der grafischen Ebene darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.RectangleShape.#ctor">
      <summary>Initialisiert eine neue Instanz der 'RectangleShape'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.RectangleShape.CornerRadius">
      <summary>Legt den Radius der abgerundeten Ecken fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.ShapeCollection">
      <summary>Kapselt die Steuerelemente aus einem 'ShapeContainer' als Liste</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.#ctor(VisiWinNET.Forms.GraphicLayer.ShapeContainer)">
      <summary>Initialisiert eine neue Instanz der 'ShapeCollection'-Klasse.</summary>
      <param name="owner">Verweis auf den 'ShapeContainer', der die Instanz als 'Shapes'-Eigenschaft verwendet</param>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Count">
      <summary>Gibt die Anzahl der Elemente in der Auflistung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeCollection.IsReadOnly">
      <summary>Gibt zurück, ob die Liste schreibgeschützt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeindex</summary>
      <param name="index">Angabe des zurückzugebenden Elementes über den (0-indizierten) Listenindex</param>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Item(System.String)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeschlüssel</summary>
      <param name="key">Angabe des Elementes über den Elementenamen</param>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Owner">
      <summary>Gibt einen Verweis auf das ShapeContainer-Objekt zurück, das die Liste verwendet</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Add(VisiWinNET.Forms.GraphicLayer.BaseShape)">
      <summary>Fügt der Liste ein neues Element hinzu</summary>
      <param name="value">Neu hinzuzufügendes Element</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.AddRange(VisiWinNET.Forms.GraphicLayer.BaseShape[])">
      <summary>Fügt der Liste mehrere neue Elemente hinzu</summary>
      <param name="shapes">Feld von Objekten, die zur Liste hinzugefügt werden sollen</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Clear">
      <summary>Löscht den Inhalt der Liste</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Contains(VisiWinNET.Forms.GraphicLayer.BaseShape)">
      <summary>Prüft, ob das angegebene Element bereits in der Liste vorhanden ist</summary>
      <returns>'true': das Element ist bereits in der Liste vorhanden, andernfalls 'false'</returns>
      <param name="value">zu prüfendes Element</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.ContainsKey(System.String)">
      <summary>Prüft, ob ein Element mit dem angegebenen Namen bereits in der Liste vorhanden ist</summary>
      <returns>'true': ein Element mit dem angegebenen Namen ist bereits in der Liste vorhnden, andernfalls 'false'</returns>
      <param name="key">zu prüfender Name</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.CopyTo(VisiWinNET.Forms.GraphicLayer.BaseShape[],System.Int32)">
      <summary>Kopiert die Elemente der Liste ab dem angegebenen Index in eine Variable </summary>
      <param name="array">Variable (array), in die die Elemente kopiert werden soll</param>
      <param name="index">Index des ersten zu kopierenden Elementes</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.GetEnumerator">
      <summary>Gibt einen Verweis auf eine IEnumerator-Schnittstelle aus, die Zugriff auf die Elemente einer Auflistung (Enumeration) gewährleistet. </summary>
      <returns>Ein Objekt vom Typ System.Collections.IEnumerator, dass alle Elemente enthält</returns>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.IndexOf(VisiWinNET.Forms.GraphicLayer.BaseShape)">
      <summary>Gibt den Index eines Elementes aus der Auflistung zurück</summary>
      <returns>Der angeforderte Listenindex des übergebenen Elementes oder "-1", wenn das Element in der Liste nicht existiert</returns>
      <param name="value">Objekt, dessen Index zurückgegeben werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.IndexOfKey(System.String)">
      <summary>Gibt den Index des Elementes zurück, dessen Name mit dem übergebenen Wert übereinstimmt</summary>
      <returns>Der angeforderte Listenindex des Elementes mit dem übergebenen Namen oder "-1", wenn das Element in der Liste nicht existiert</returns>
      <param name="key">Name des zu suchenden Elementes </param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Insert(System.Int32,VisiWinNET.Forms.GraphicLayer.BaseShape)">
      <summary>Fügt ein neues Element an der angegebenen Stelle in die Liste ein</summary>
      <param name="index">Angabe des Index, an der das Element eingefügt werden soll</param>
      <param name="value">Einzufügendes Element</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.Remove(VisiWinNET.Forms.GraphicLayer.BaseShape)">
      <summary>Entfernt das angegebene Element aus der Liste</summary>
      <returns>True: Das Element wurde aus der Liste gelöscht, ansonsten 'false'</returns>
      <param name="value">zu löschendes Element</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.RemoveAt(System.Int32)">
      <summary>Löscht das Element mit dem angegebenen Index aus der Liste</summary>
      <param name="index">Index des zu löschenden Elementes</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeCollection.SetChildIndex(VisiWinNET.Forms.GraphicLayer.BaseShape,System.Int32)">
      <summary>Ändert den Listenindex das angegebenen Elementes</summary>
      <param name="child">Element dessen Listenindex geändert wird</param>
      <param name="newIndex">Neuer Listenindex</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.ShapeContainer">
      <summary>Steuerelement, das einen Container für die grafische Ebene eines Formulars oder eines Steuerelementes bildet</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeContainer.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ShapeContainer'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeContainer.Cursor">
      <summary>Ruft den Cursor ab, der angezeigt wird, wenn sich der Mauszeiger über dem Steuerelement befindet, oder legt diesen fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeContainer.MouseHitExtent">
      <summary>Gibt einen Standardwert für die 'MouseHitExtend'-Eigenschaft aller enthaltenen Steuerelemente an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeContainer.PaintOffset">
      <summary>Gibt den Offset zurück, der beim Zeichnen der grafischen Elemente im Formular berücksichtigt wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeContainer.Shapes">
      <summary>Gibt eine Liste aller auf dem Container platzierten Steuerelemente zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.ShapeContainer.SmoothingMode">
      <summary>Gibt an, ob eine Glättung (Antialiasing) auf die enthaltenen Steuerelemente angewendet wird
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.ShapeContainer.GetChildAtPoint(System.Drawing.Point)">
      <summary>Ruft das untergeordnete Steuerelement ab, das sich an den angegebenen Koordinaten befindet.</summary>
      <returns>Das ermittelte Element oder Nothing, wenn auf den angegebenen Koordinaten kein Element liegt</returns>
      <param name="pt">Koordinaten, zu denen das untergeordnete Steuerelement zu ermitteln ist</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.TextShape">
      <summary>Steuerelement, das einen festen oder sprachumschaltbaren Text auf der grafischen Ebene darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.TextShape.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TextShape'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.BackColor">
      <summary>Legt die Hintergrundfarbe des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.DefaultForeColor">
      <summary>Legt den Vorgabewert für 'ForeColor' fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.Font">
      <summary>Legt die Schriftart fest, die zur textuellen Darstellung verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.ForeColor">
      <summary>Legt die Schriftfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.LocalizedText">
      <summary>Legt den auf dem Steuerelement angezeigten sprachgesteuerten Text fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.Text">
      <summary>Legt den im Steuerelement anzuzeigenden festen Text fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TextShape.TextAlign">
      <summary>Legt die Ausrichtung des Textes im Steuerelement fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.TextShape.HitTest(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich der klicksensitive Bereich des Steuerelementes an den angegebenen Koordinaten liegt</summary>
      <returns>'True': Es wurde auf den klicksensitiven Bereich geklickt, ansonsten 'false'</returns>
      <param name="x">x-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
      <param name="y">y-Koordinate (relativ zur oberen linken Ecke des Steuerelementes)</param>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.TextShape.Invalidate">
      <summary>Erklärt einen bestimmten Bereich des Steuerelements für ungültig und veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.TextShape.Scale(System.Drawing.SizeF)">
      <summary>Skaliert das Steuerelement und alle untergeordneten Steuerelemente.</summary>
      <param name="factor">Angabe der Skalierungsfaktoren für x- und y-Richtung</param>
    </member>
    <member name="E:VisiWinNET.Forms.GraphicLayer.TextShape.ForeColorChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der 'ForeColor'-Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TextShape', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.TriangleShape">
      <summary>Steuerelement, das ein Dreieck auf der grafischen Ebene darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.GraphicLayer.TriangleShape.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TriangleShape'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TriangleShape.Direction">
      <summary>Legt die Ausrichtung des Dreiecks fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.GraphicLayer.TriangleShape.Overhang">
      <summary>Gibt an, wie weit die Zeichenroutine des Steuerelementes über die in 'Bounds' angegebenen Grenzen überschreitet</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.FillStyle">
      <summary>Beschreibt die möglichen Methoden zum farblichen Füllen eines Objektes auf der grafischen Ebene</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.FillStyle.Gradient">
      <summary>Die farbliche Füllung wird als Farbverlauf von 'FillColor' zu 'GradientColor' ausgeführt. Die Richtung des Farbverlaufes wird über 'GradientStyle' festgelegt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.FillStyle.Pattern">
      <summary>Die farbliche Füllung wird durch ein Muster (Eigenschaft 'Pattern') festgelegt. 'FillColor' bestimmt die Zeichenfarbe für das Muster, 'PatternBackColor' legt die Hintergrundfarbe fest. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.FillStyle.Solid">
      <summary>Das Objekt wird einfarbig mit 'FillColor' gefüllt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.FillStyle.Transparent">
      <summary>Das Objekt wird nicht gefüllt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.GradientStyle">
      <summary>Beschreibt die möglichen Richtungen eines Farbverlaufes</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.GradientStyle.BackwardDiagonal">
      <summary>Diagonal von oben rechts nach unten links</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.GradientStyle.Center">
      <summary>Von den Kanten des Objektes zum Mittelpunkt hin</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.GradientStyle.ForwardDiagonal">
      <summary>Diagonal von oben links nach unten rechts</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.GradientStyle.Horizontal">
      <summary>Horizontal von links nach rechts</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.GradientStyle.Vertical">
      <summary>Vertikal von oben nach unten</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.LinePointType">
      <summary>Beinhaltet die möglichen Darstellungsarten von Linienendpunkten</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.ArrowIn">
      <summary>Pfeil zur Linie hinzeigend </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.ArrowOut">
      <summary>Pfeil von der Linie wegzeigend</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.Circle">
      <summary>Kreis am Ende der Linie</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.Cross">
      <summary>Kreuz am Ende der Linie</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.Diamond">
      <summary>Raute am Ende der Linie</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.None">
      <summary>Keine grafische Kennzeichnung des Linienendes</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.Square">
      <summary>Quadrat am Ende der Linie</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.SquareFix">
      <summary>Quadrat am Ende der Linie (unabhängig vom Linienwinkel immer gleich positioniert)</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.T">
      <summary>Senkrechter Strich am Ende der Linie</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.TriangleIn">
      <summary>geschlossener Pfeil zur Linie hinzeigend</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LinePointType.TriangleOut">
      <summary>geschlossener Pfeil von der Linie wegzeigend</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.LineStyle">
      <summary>Beinhaltet Einstellungen, die bestimmen, wie eine Linie gezeichnet wird</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LineStyle.Dash">
      <summary>Die Linie setzt sich aus einzelnen Teilstrichen zusammen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LineStyle.DashDot">
      <summary>Die Linie setzt sich aus einzelnen Teilstrichen und Punkten zusammen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LineStyle.DashDotDot">
      <summary>Die Linie setzt sich aus einzelnen Teilstrichen gefolgt von zwei Punkten zusammen
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LineStyle.Dot">
      <summary>Die Linie setzt sich aus einzelnen Punkten gefolgt von zwei Punkten zusammen
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.LineStyle.Solid">
      <summary>Die Linie wird als zusammenhängender Strich gezeichnet</summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.PatternStyle">
      <summary>Beinhaltet die Muster zum Füllen einer geometrischen Form auf der grafischen Ebene</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.BackwardDiagonal">
      <summary>Ein Muster von Linien, das schräg von oben rechts nach unten links verläuft. 
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Cross">
      <summary>Ein Muster von sich kreuzenden horizontalen und vertikalen Linien. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DarkDownwardDiagonal">
      <summary>Ein Muster von diagonalen Linien, die schräg von links oben nach rechts unten verlaufen, deren Abstand 50 Prozent geringer ist als bei ForwardDiagonal-Linien und die doppelt so breit sind. Dieses Muster wird nicht geglättet (Antialiasing). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DarkHorizontal">
      <summary>Ein Muster von horizontalen Linien, deren Abstand 50 Prozent geringer ist als bei Horizontal-Linien und die doppelt so breit sind. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DarkUpwardDiagonal">
      <summary>Ein Muster von diagonalen Linien, die schräg von rechts oben nach links unten verlaufen, deren Abstand 50 Prozent geringer ist als bei BackwardDiagonal-Linien und die doppelt so breit sind. Dieses Muster wird nicht geglättet (Antialiasing). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DarkVertical">
      <summary>Ein Muster von vertikalen Linien, deren Abstand 50 Prozent geringer ist als bei Vertical-Linien und die doppelt so breit sind. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DashedDownwardDiagonal">
      <summary>Ein Muster von gestrichelten, diagonalen Linien, die schräg von links oben nach rechts unten verlaufen. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DashedHorizontal">
      <summary>Ein Muster von gestrichelten, horizontalen Linien. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DashedUpwardDiagonal">
      <summary>Ein Muster von gestrichelten, diagonalen Linien, die schräg von rechts oben nach links unten verlaufen. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DashedVertical">
      <summary>Ein Muster von gestrichelten, vertikalen Linien. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DiagonalBrick">
      <summary>Ein Muster mit dem Aussehen geschichteter Ziegel, die von rechts oben nach links unten geneigt sind. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DiagonalCross">
      <summary>Ein Muster von sich kreuzenden diagonalen Linien. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Divot">
      <summary>Ein Muster mit dem Aussehen von Rasenstücken. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DottedDiamond">
      <summary>Ein Muster von nach vorne geneigten, sich kreuzenden diagonalen Linien, die aus Punkten bestehen. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.DottedGrid">
      <summary>Ein Muster von horizontalen und vertikalen Linien, die aus sich kreuzenden Punkten bestehen. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.ForwardDiagonal">
      <summary>Ein Muster von Linien, die von oben links nach unten rechts verlaufen. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Horizontal">
      <summary>Ein Muster von horizontalen Linien. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.HorizontalBrick">
      <summary>Ein Muster mit dem Aussehen von horizontal geschichteten Ziegeln. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.LargeCheckerBoard">
      <summary>Ein Muster mit dem Aussehen eines Schachbretts. Die Quadrate haben die doppelte Größe von SmallCheckerBoard-Quadraten. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.LargeConfetti">
      <summary>Ein Muster mit dem Aussehen von Konfetti, das aus größeren Komponenten als bei SmallConfetti besteht. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.LightDownwardDiagonal">
      <summary>Ein Muster von diagonalen Linien, die schräg von links oben nach rechts unten verlaufen und deren Abstand 50 Prozent größer ist bei als BackwardDiagonal-Linien. Dieses Muster wird nicht geglättet (Antialiasing). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.LightHorizontal">
      <summary>Ein Muster von horizontalen Linien, deren Abstand 50 Prozent größer ist als bei Horizontal. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.LightUpwardDiagonal">
      <summary>Ein Muster von diagonalen Linien, die schräg von rechts oben nach links unten verlaufen und deren Abstand 50 Prozent größer ist bei als BackwardDiagonal-Linien. Dieses Muster wird nicht geglättet (Antialiasing). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.LightVertical">
      <summary>Ein Muster von vertikalen Linien, deren Abstand 50 Prozent größer ist als bei Vertical. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.NarrowHorizontal">
      <summary>Ein Muster von horizontalen Linien, deren Abstand 75 Prozent geringer ist als bei Horizontal-Linien (bzw. 25 Prozent geringer als bei LightHorizontal). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.NarrowVertical">
      <summary>Ein Muster von vertikalen Linien, deren Abstand 75 Prozent geringer ist als bei Vertical-Linien (bzw. 25 Prozent geringer als bei LightVertical). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.OutlineShapedDiamond">
      <summary>Ein Muster von sich kreuzenden, diagonalen Linien, die nicht geglättet werden (Antialiasing). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent05">
      <summary>Ein 5-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 5:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent10">
      <summary>Ein 10-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 10:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent20">
      <summary>Ein 20-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 20:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent25">
      <summary>Ein 25-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 25:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent30">
      <summary>Ein 30-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 30:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent40">
      <summary>Ein 40-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 40:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent50">
      <summary>Ein 50-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 50:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent60">
      <summary>Ein 60-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 60:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent70">
      <summary>Ein 70-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 70:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent75">
      <summary>Ein 75-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 75:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent80">
      <summary>Ein 80-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 80:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Percent90">
      <summary>Ein 90-Prozent-Punktmuster. Das Verhältnis von Vordergrundfarbe zu Hintergrundfarbe beträgt 90:100. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Plaid">
      <summary>Ein Schottenmuster. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Shingle">
      <summary>Ein Muster mit dem Aussehen überlappender Schindeln, die schräg von links oben nach rechts unten verlaufen. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.SmallCheckerBoard">
      <summary>Ein Muster mit dem Aussehen eines Schachbretts. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.SmallConfetti">
      <summary>Ein Muster mit dem Aussehen von Konfetti. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.SmallGrid">
      <summary>Ein Muster von sich kreuzenden horizontalen und vertikalen Linien, deren Abstand 50 Prozent geringer ist als bei Cross. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.SolidDiamond">
      <summary>Ein Muster mit dem Aussehen eines diagonal verlaufenden Schachbretts. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Sphere">
      <summary>Ein Muster mit dem Aussehen von aneinander angrenzenden Kugeln. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Trellis">
      <summary>Ein Muster mit dem Aussehen eines Gitters. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Vertical">
      <summary>Ein Muster von vertikalen Linien. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Wave">
      <summary>Ein Muster von horizontalen, aus Tilden (~) bestehenden Linien. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.Weave">
      <summary>Ein Muster mit dem Aussehen eines gewobenen Stoffs. </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.WideDownwardDiagonal">
      <summary>Ein Muster diagonaler Linien, die schräg von links oben nach rechts verlaufen und den gleichen Abstand sowie die dreifache Breite von ForwardDiagonal haben. Dieses Muster wird nicht geglättet (Antialiasing). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.WideUpwardDiagonal">
      <summary>Ein Muster diagonaler Linien, die schräg von rechts oben nach links verlaufen und den gleichen Abstand sowie die dreifache Breite von BackwardDiagonal haben. Dieses Muster wird nicht geglättet (Antialiasing). </summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.PatternStyle.ZigZag">
      <summary>Ein Muster von horizontalen Zickzack-Linien. </summary>
    </member>
    <member name="T:VisiWinNET.Forms.GraphicLayer.TriangleDirection">
      <summary>Beinhaltet die Ausrichtungen eines Dreieckes</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.Down">
      <summary>Basislinie an der Oberkante, Spitze mittig unten</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.DownLeft">
      <summary>Basislinie diagonal, Spitze unten links</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.DownRight">
      <summary>Basislinie diagonal, Spitze unten rechts</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.Left">
      <summary>Basislinie an der rechten Kante, Spitze mittig links</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.Right">
      <summary>Basislinie an der linken Kante, Spitze mittig rechts</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.Up">
      <summary>Basislinie an der Unterkante, Spitze mittig oben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.UpLeft">
      <summary>Basislinie diagonal, Spitze oben links</summary>
    </member>
    <member name="F:VisiWinNET.Forms.GraphicLayer.TriangleDirection.UpRight">
      <summary>Basislinie diagonal, Spitze oben rechts</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ButtonBase">
      <summary>Basisklasse für eine Schaltfläche/einen Schalter </summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ButtonBase.#ctor">
      <summary>Erzeugt eine neue Instanz der 'ButtonBase'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.AutoSize">
      <summary>Legt fest, ob beim Laden einer Grafik das Steuerelement entsprechend verkleinert/vergrößert wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.ButtonStyle">
      <summary>Legt die Darstellungsart der Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.EventOnKeyRepeat">
      <summary>Legt fest, ob das 'Click'-Ereignis bei gehaltener Bedientaste wiederholt ausgelöst werden soll.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.FocusOnClick">
      <summary>Legt fest, ob das Steuerelement die Eingabemarke (Fokus) erhalten soll, wenn es per Tastatur oder Maus betätigt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.FocusRect">
      <summary>Legt fest, ob die Eingabemarke (Fokus) durch ein gestricheltes Rechteck innerhalb des Steuerelementes angezeigt werden soll.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.GlobalHotKey">
      <summary>Legt fest, wann die durch die 'Key'-Eigenschaft definierte Taste eine Funktion auslöst</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.Image">
      <summary>Legt die anzuzeigende Grafik im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.ImageAlign">
      <summary>Legt die Position der Grafik innerhalb des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.ImageDisabled">
      <summary>Legt die Grafik fest, die im deaktivierten Zustand angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.ImageDown">
      <summary>Legt die Grafik fest, die angezeigt wird, solange die Schaltfläche heruntergedrückt wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.Key">
      <summary>Legt fest, mit welcher Tastenkombination als Shortcut das Klicken auf das Steuerelement ausgelöst werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.LocalizedText">
      <summary>Legt den auf dem Steuerelement angezeigten Text fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.Text">
      <summary>Legt den auf dem Steuerelement angezeigten Text fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.TextAlign">
      <summary>Legt die Position des Textes innerhalb des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.TransparentColor">
      <summary>Legt die Farbe fest, die in der angezeigten Grafik als Transparent dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.UseMnemonic">
      <summary>Legt fest, ob die im Steuerelementetext enthaltene Zugriffstaste verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ButtonBase.VWItem">
      <summary>Anbindung an die Prozessdatenbank</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ButtonBase.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ButtonBase.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ButtonBase.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ButtonBase.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ButtonBase.PerformClick">
      <summary>Simuliert das Klicken auf das Steuertelement.</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ButtonBase.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der über 'VWItem' festgelegten Prozessvariable ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ButtonBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'DigitalChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ButtonBase.Down">
      <summary>Wird ausgelöst, wenn die Schaltfläche über Maus oder Tastatur betätigt, aber noch nicht wieder losgelassen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ButtonBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ButtonBase.Up">
      <summary>Wird ausgelöst, wenn die Schaltfläche über Maus oder Tastatur nach der Betätigung wieder losgelassen wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ButtonBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ComboBoxBase">
      <summary>Basisklasse für ein Kombinationsfeld-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ComboBoxBase'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.BackColor">
      <summary>Legt die Hintergrundfarbe des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.BackColorButton">
      <summary>Legt die Hintergrundfarbe der Schaltfläche zum Öffnen der Auswahlliste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.BackColorSelected">
      <summary>Legt die Hintergrundfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ClearText">
      <summary>Legt fest, ob der im Textfeld dargestellte Text zurückgesetzt wird, wenn die 'SelectedIndex'-Eigenschaft den Wert -1 einnimmt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.Editable">
      <summary>Legt fest, ob das Textfeld des Steuerelementes editierbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.FocusRect">
      <summary>Legt fest, ob die Eingabemarke (Fokus) durch ein gestricheltes Rechteck innerhalb des Steuerelementes angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.Font">
      <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ForeColor">
      <summary>Legt die Schriftfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ForeColorButton">
      <summary>Legt die Farbe des Pfeils auf der Schaltfläche zum Öffnen der Auswahlliste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ForeColorSelected">
      <summary>Legt die Schriftfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.HorizontalScrollBar">
      <summary>Legt fest, ob eine horizontale Bildlaufleiste angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ItemHeight">
      <summary>Legt die minimale Höhe der Listenelemente fest oder gibt sie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.MaxDropDownItems">
      <summary>Legt die Anzahl der maximal sichtbaren Listenelemente nach dem Öffnen der Auswahlliste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.Multiline">
      <summary>Legt fest, ob Feldinhalte, die mehrere Zeilen einnehmen, abgeschnitten werden.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ScrollAlwaysVisible">
      <summary>Legt fest, ob die vertikale Bildlaufleiste immer sichtbar sein soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ScrollBarProperties">
      <summary>Legt fest, wie die Bildlaufleisten des Steuerelementes dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ScrollBarStyle">
      <summary>Bestimmt das Aussehen der Bildlaufleisten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.SelectedIndex">
      <summary>Legt den Index des selektierten Listenelementes fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.SelectedIndices">
      <summary>Legt bei einer Mehrfachselektion die Indizes der selektierten Listenelemente fest oder gibt sie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.SelectedItem">
      <summary>Gibt das selektierte Listenelement zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ShowListModal">
      <summary>Legt fest, ob die Auswahlliste im Steuerelement modal sein soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.Sorted">
      <summary>Legt fest, ob und wie die Listenelemente alphabetisch sortiert werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.Text">
      <summary>Legt den aktuell im Textfeld angezeigten Text fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.TextAlign">
      <summary>Legt die Textausrichtung der Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.ThumbActive">
      <summary>Legt fest, ob die Bedienung der Bildlaufleisten über Positionsleiste oder Positionierungszeiger erlaubt sind</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ComboBoxBase.UseTouchKeyboard">
      <summary>Legt fest, ob für das Steuerelement die Bildschirmtastatur zur Verfügung stehen soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.BeginUpdate">
      <summary>Unterdrückt das Neuzeichnen des Steuerelementes bis zum Aufruf von 'EndUpdate'</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.Clear">
      <summary>Löscht alle Listenelemente aus dem Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.ClearSelected">
      <summary>Löscht den Selektionszustand aller Listenelemente im Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.EndUpdate">
      <summary>Beendet das über 'BeginUpdate' ausgelöste Unterdrücken des Neuzeichnens</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.GetSelected(System.Int32)">
      <summary>Gibt zurück, ob das angegebene Listenelement selektiert ist oder nicht</summary>
      <returns>True: Das Listenelement ist selektiert False: Das Listenelement ist nicht selektiert</returns>
      <param name="index">Index des Listenelementes, dessen Selektionstzustand zurückgegeben werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.RemoveAllSelected">
      <summary>Löscht alle selektierten Listenelement aus dem Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ComboBoxBase.SetSelected(System.Int32,System.Boolean)">
      <summary>Setzt den Selektionszustand eines Listenelementes </summary>
      <param name="index">Index des Listenelementes</param>
      <param name="val">True: Das Element wird selektiertFalse: Das Element wird deselektiert</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ComboBoxBase.BitChange">
      <summary>Wird ausgelöst, wenn sich das über 'WatchedBitNo' festgelegte Bit in der Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ComboBoxBase.Change">
      <summary>Wird ausgelöst, wenn sich der Wert der angebundenen Prozessvariable ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ComboBoxBase.DropDown">
      <summary>Wird ausgelöst, wenn sich die Auswahlliste des Kombinationsfeldes öffnet</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ComboBoxBase.DropDownClosed">
      <summary>Wird ausgelöst, wenn sich die Auswahlliste im Kombinationsfeld schließt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ComboBoxBase.SelectedIndexChanged">
      <summary>Wird ausgelöst, wenn sich die Auswahl im Steuerelement und damit der Wert der Eigenschaft 'SelectedIndex'/'SelectedIndices' ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ComboBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigRecipeLoadDialog">
      <summary>Enthält Einstellungen für den Dialog "Rezept Laden"</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRecipeLoadDialog.DefaultSortMode">
      <summary>Legt fest, wie die aufgelisteten Rezeptdateien beim Öffnen des Dialoges sortiert werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRecipeLoadDialog.ShowDeleteButton">
      <summary>Legt fest, ob der Dialog eine Schaltfläche zum Löschen von Rezeptdateien anzeigen soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigRecipeSaveDialog">
      <summary>Enthält Einstellungen für den Dialog "Rezept Speichern"</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRecipeSaveDialog.DefaultSortMode">
      <summary>Legt fest, wie die aufgelisteten Rezeptdateien beim Öffnen des Dialoges sortiert werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRecipeSaveDialog.ShowDeleteButton">
      <summary>Legt fest, ob der Dialog eine Schaltfläche zum Löschen von Rezeptdateien anzeigen soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigRightDialog">
      <summary>Klasse, die die Einstellungen für den Dialog  zum Ändern der Parameter eines Rechtes aus der Benutzerverwaltung enthält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightDialog.InputActive">
      <summary>Legt fest ob die "Aktiv"-Option angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightDialog.InputComment">
      <summary>Legt fest, ob die "Kommentar"-Eingabe für das Recht freigeschaltet werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigRightsDialog">
      <summary>Klasse, die die Einstellungen für den Dialog zum Administrieren der Rechte aus der Benutzerverwaltung enthält
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightsDialog.AuthorizationActivateButton">
      <summary>Legt die Authorisierung für die "Aktivieren"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightsDialog.AuthorizationAddButton">
      <summary>Legt die Authorisierung für die "Hinzufügen"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightsDialog.AuthorizationChangeButton">
      <summary>Legt die Authorisierung für die "Ändern"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightsDialog.AuthorizationDeactivateButton">
      <summary>Legt die Authorisierung für die "Deaktivieren"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightsDialog.AuthorizationRemoveButton">
      <summary>Legt die Authorisierung für die "Entfernen"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightsDialog.ColumnActive">
      <summary>Legt fest, ob die "Status"-Spalte in der Liste aller Rechte angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigRightsDialog.ColumnComment">
      <summary>Legt fest, ob in der Liste aller Rechte die "Kommentar"-Spalte sichtbar sein soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigUserDialog">
      <summary>Klasse, die die Einstellungen für den Dialog  zum Ändern der Parameter eines Benutzers aus der Benutzerverwaltung enthält
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserDialog.InputCode">
      <summary>Legt fest ob das Eingabefeld für den Parameter "maschineller Code" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserDialog.InputComment">
      <summary>Legt fest, ob die "Kommentar"-Eingabe für den Benutzer freigeschaltet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserDialog.InputDeactivationDuration">
      <summary>Legt fest, ob die Eingabefelder zum Festlegen eines Gültigkeitszeitraumes für den Benutzer angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserDialog.InputDeactivationTime">
      <summary>Legt fest, ob die Eingabefelder zum Festlegen eines Deaktivierungszeitpunktes für den Benutzer angezeigt werden sollen
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserDialog.InputFullName">
      <summary>Legt fest, ob das Eingabefeld für den vollen Namen des Benutzers angezeigt werden sollen
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserDialog.InputState">
      <summary>Legt fest, ob das Eingabefeld zum manuellen Wechsel des Benutzerzustandes angezeigt werden sollen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigUserGroupDialog">
      <summary>Klasse, die die Einstellungen für den Dialog  zum Ändern der Parameter einer Benutzergruppe aus der Benutzerverwaltung enthält
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupDialog.InputAutoLogOffTime">
      <summary>Legt fest, ob das Eingabefeld für den Parameter "Zeit bis zum automatischen Abmelden" freigeschaltet werden soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupDialog.InputComment">
      <summary>Legt fest, ob das "Kommentar"-Eingabefeld freigeschaltet werden soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupDialog.InputMaxFailedLogOns">
      <summary>Legt fest, ob das Eingabefeld für den Parameter "maximal erlaubte Anmeldefehlversuche" freigeschaltet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupDialog.InputRenewPasswordInterval">
      <summary>Legt fest, ob das Eingabefeld für den Parameter "Passworterneuerungsintervall" freigeschaltet werden soll

</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupDialog.InputUsersRemovable">
      <summary>Legt fest, ob das Eingabefeld für den Parameter "Benutzer dieser Gruppe dürfen gelöscht werden" freigeschaltet werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog">
      <summary>Klasse, die die Einstellungen für den Dialog zum Administrieren der Benutzergruppen aus der Benutzerverwaltung enthält
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.AuthorizationAddButton">
      <summary>Legt die Authorisierung für die "Hinzufügen"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.AuthorizationChangeButton">
      <summary>Legt die Authorisierung für die "Ändern"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.AuthorizationRemoveButton">
      <summary>Legt die Authorisierung für die "Entfernen"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.ColumnAuthorizationLevel">
      <summary>Legt fest, ob in der Liste der Benutzergruppen die Spalte "Authorisierungsebene" angezeigt werden soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.ColumnAutoLogOffTime">
      <summary>Legt fest, ob in der Liste der Benutzergruppen die Spalte "Zeit bis zum automatischen Abmelden" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.ColumnComment">
      <summary>Legt fest, ob in der Liste der Benutzergruppen die Spalte "Kommentar" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.ColumnMaxFailedLogOns">
      <summary>Legt fest, ob in der Liste der Benutzergruppen die Spalte "maximal erlaubte Anmeldefehlversuche" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.ColumnRenewPasswordInterval">
      <summary>Legt fest, ob in der Liste der Benutzergruppen die Spalte "Passworterneuerungsintervall" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.ColumnUsersCount">
      <summary>Legt fest, ob in der Liste der Benutzergruppen die Spalte "Anzahl Benutzer" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUserGroupsDialog.ColumnUsersRemovable">
      <summary>Legt fest, ob in der Liste der Benutzergruppen die Spalte "Benutzer dieser Gruppe dürfen gelöscht werden" angezeigt werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ConfigUsersDialog">
      <summary>Klasse, die die Einstellungen für den Dialog zum Administrieren der Benutzer aus der Benutzerverwaltung enthält
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.AuthorizationActivateButton">
      <summary>Legt die Authorisierung für die "Aktivieren"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.AuthorizationAddButton">
      <summary>Legt die Authorisierung für die "Hinzufügen"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.AuthorizationChangeButton">
      <summary>Legt die Authorisierung für die "Ändern"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.AuthorizationDeactivateButton">
      <summary>Legt die Authorisierung für die "Deaktivieren"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.AuthorizationRemoveButton">
      <summary>Legt die Authorisierung für die "Entfernen"-Schaltfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.ColumnCode">
      <summary>Legt fest, ob in der Liste der Benutzer die Spalte "maschineller Code" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.ColumnComment">
      <summary>Legt fest, ob in der Liste der Benutzer die Spalte "Kommentar" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.ColumnDeactivationTime">
      <summary>Legt fest, ob in der Liste der Benutzer die Spalte "Deaktivierungszeitpunkt" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.ColumnFullName">
      <summary>Legt fest, ob in der Liste der Benutzer die Spalte "Voller Name" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.ColumnRemainingLogOns">
      <summary>Legt fest, ob in der Liste der Benutzer die Spalte "verbleibende Anmeldeversuche" angezeigt werden soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.ColumnRenewPassword">
      <summary>Legt fest, ob in der Liste der Benutzer die Spalte "Passwortgültigkeitsdauer" angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ConfigUsersDialog.ColumnState">
      <summary>Legt fest, ob in der Liste der Benutzer die Spalte "Status" angezeigt werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ContainerControlBase">
      <summary>Basisklasse der sichtbaren VisiWinNET-Steuerelemente, die einen Container für weitere Steuerelemente darstellen.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ContainerControlBase.#ctor">
      <summary>Erzeugt eine neue Instanz der ContainerControlBase-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ContainerControlBase.Authorization">
      <summary>Legt das Verhalten des Steuerelementes bezüglich der Anbindung an die Benutzerverwaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ContainerControlBase.Blink">
      <summary>Legt das Verhalten des Steuerelementes bezüglich des applikationsweit synchronisierten Blinken fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ContainerControlBase.Events">
      <summary>Verknüpft Steuerelementeereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ContainerControlBase.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ContainerControlBase.ProjectDesignMode">
      <summary>Gibt zurück, ob das Projekt im Designmodus ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ContainerControlBase.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ContainerControlBase.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ContainerControlBase.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ContainerControlBase.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ContainerControlBase.EndInit">
      <summary>Beendet die Initialisierungsphase des Steuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ContainerControlBase.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ContainerControlBase.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ContainerControlBase.AuthorizationChanged">
      <summary>Wird ausgelöst, wenn sich durch das An-/Abmelden eines Benutzers eine Änderung der Darstellung ergibt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ContainerControlBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AuthorizationObject.AuthorizationEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ContainerControlBase.DoBlink">
      <summary>Meldet den Phasenwechsel des applikationsweit synchronisierten Blinkens.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ContainerControlBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BlinkService.BlinkEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ControlBase">
      <summary>Stellt die Basisfunktionalität eines VisiWinNET-Steuerelementes ohne Container-Funktion dar</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ControlBase.#ctor">
      <summary>Erzeugt eine neue Instanz der ControlBase-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.Authorization">
      <summary>Legt das Verhalten des Steuerelementes bezüglich der Anbindung an die Benutzerverwaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.BackColor">
      <summary>Ruft die Hintergrundfarbe für das Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.Blink">
      <summary>Legt das Verhalten des Steuerelementes bezüglich des applikationsweit synchronisierten Blinken fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.Events">
      <summary>Verknüpft Steuerelementeereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.Font">
      <summary>Legt die Schriftart für das Steuerelement fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.ForeColor">
      <summary>Ruft die Vordergrundfarbe des Steuerelements ab oder legt diese fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.ProjectDesignMode">
      <summary>Gibt zurück, ob das Projekt im Designmodus ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ControlBase.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ControlBase.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ControlBase.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ControlBase.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ControlBase.EndInit">
      <summary>Beendet die Initialisierungsphase des Steuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ControlBase.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ControlBase.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ControlBase.AuthorizationChanged">
      <summary>Wird ausgelöst, wenn sich durch das An-/Abmelden eines Benutzers eine Änderung der Darstellung ergibt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ControlBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'AuthorizationObject.AuthorizationEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ControlBase.DoBlink">
      <summary>Meldet den Phasenwechsel des applikationsweit synchronisierten Blinkens.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ControlBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BlinkService.BlinkEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.FontClassDependentObject">
      <summary>Klasse, die die für eine Schriftartenumschaltung nötigen Informationen kapselt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.FontClassDependentObject.#ctor">
      <summary>Initialisiert eine neue Instanz der 'FontClassDependentObject'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.FontClassDependentObject.Font">
      <summary>Legt die aktuell zu verwendende Schriftart fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.FontClassDependentObject.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.FontClassDependentObject.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.FontClassDependentObject.FontChanged">
      <summary>Wird ausgelöst, wenn sich die Schriftart ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'FontClassDependentObject', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.FontClassDependentObject.FontClassChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der 'FontClass'-Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'FontClassDependentObject', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.InvalidInputEventArgs">
      <summary>Gibt Informationen über den Eingabefehler im 'InvalidInput'-Ereignis zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.InvalidInputEventArgs.CharacterFilter">
      <summary>Gibt den angewendeten Zeichenkettenfilter zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.InvalidInputEventArgs.InvalidCharacter">
      <summary>Gibt das eingegebene und vom Filter als unzulässig erkannte Zeichen zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ListBoxBase">
      <summary>Basisklasse für eine Auswahlliste</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListBoxBase'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.BackColor">
      <summary>Legt die Hintergrundfarbe des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.BackColorSelected">
      <summary>Legt die Hintergrundfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.CurrentBackColor">
      <summary>Gibt die aktuelle Hintergrundfarbe des ListBox-Steuerelementes zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.CurrentBackColorSelected">
      <summary>Gibt die aktuelle Hintergrundfarbe des ListBox-Steuerelementes für ein selektiertes Listenelement zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.CurrentForeColor">
      <summary>Gibt die aktuelle Textfarbe des ListBox-Steuerelementes zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.CurrentForeColorSelected">
      <summary>Gibt die aktuelle Textfarbe des ListBox-Steuerelementes für ein selektiertes Listenelement zurück.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.FocusRect">
      <summary>Legt fest, ob um das zuletzt selektierte Element ein Markierungsrahmen gezeichnet wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.Font">
      <summary>Legt die Schriftart im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ForeColor">
      <summary>Legt die Schriftfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ForeColorSelected">
      <summary>Legt die Schriftfarbe des markierten Listenelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.HorizontalScrollBar">
      <summary>Legt fest, ob eine horizontale Bildlaufleiste angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.IntegralHeight">
      <summary>Ruft einen Wert ab, der angibt, ob die Größe des Steuerelements automatisch so angepasst wird, dass keine Elemente abgeschnitten werden, oder legt diesen fest.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ItemHeight">
      <summary>Legt die minimale Höhe der Listenelemente fest oder gibt sie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.Multiline">
      <summary>Legt fest, ob Feldinhalte, die mehrere Zeilen einnehmen, abgeschnitten werden.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ScrollAlwaysVisible">
      <summary>Legt fest, ob die vertikale Bildlaufleiste immer sichtbar sein soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ScrollBarIsVisible">
      <summary>Gibt zurück, ob die Bildlaufleiste zur Zeit sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ScrollBarProperties">
      <summary>Legt fest, wie die Bildlaufleisten des Steuerelementes dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ScrollBarSize">
      <summary>Gibt die Breite der Bildlaufleiste (in Pixeln) an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ScrollBarStyle">
      <summary>Bestimmt das Aussehen der Bildlaufleisten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.SelectedIndex">
      <summary>Gibt den Index des selektierten Listenelementes an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.SelectedIndices">
      <summary>Gibt bei Mehrfachselektion ('SelectionMode'= 'Multi') die Indizes der selektierten Elemente als Feld zurück.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.SelectionMode">
      <summary>Gibt an, wie Listenelemente vom Bediener selektiert werden können</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.Sorted">
      <summary>Legt fest, ob und wie die Listenelemente alphabetisch sortiert werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.Text">
      <summary>Gibt den Text des selektierten Elementes wieder</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.TextAlign">
      <summary>Legt die Textausrichtung der Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListBoxBase.ThumbActive">
      <summary>Legt fest, ob die Bedienung der Bildlaufleisten über Positionsleiste oder Positionierungszeiger erlaubt sind</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.BeginUpdate">
      <summary>Unterdrückt das Neuzeichnen des Steuerelementes bis zum Aufruf von 'EndUpdate'
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.ClearSelected">
      <summary>Setzt die Selektion zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.EndUpdate">
      <summary>Beendet das über 'BeginUpdate' ausgelöste Unterdrücken des Neuzeichnens</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.FindAndSelectValue(System.String,System.Boolean)">
      <summary>Selektiert/ deselektiert das Listenelement mit dem angegebenen Text</summary>
      <returns>Index des selektierten Elementes. Wird kein entsprechendes Element gefunden, wird der Wert "-1" zurückgegeben.</returns>
      <param name="s">Zeichenkette, nach der zu suchen ist</param>
      <param name="select">True: das Element soll selektiert werdenFalse: das Element soll deselektiert werden</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll.
</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.GetSelected(System.Int32)">
      <summary>Gibt zurück, ob das angegebene Listenelement selektiert ist</summary>
      <returns>True: Das über Index angegebene Listenelement ist selektiert False: Das über Index angegebene Listenelement ist nicht selektiert</returns>
      <param name="index">Angabe des Index des Listenelementes, dessen Selektionszustand zurückgegeben werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur.
</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.HasTooWideItems">
      <summary>Gibt zurück, ob ein oder mehrere Elemente zu breit für die Darstellung im Steuerelement sind.</summary>
      <returns>True: Ein oder mehrere Elemente benötigen mehr Platz, als durch die Breite des Steuerelementes vorgegeben ist.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.ScrollToIndex(System.Int32)">
      <summary>Führt einen Bildlauf durch, so dass das angegebene Element in der Liste sichtbar wird.</summary>
      <returns>True: Das Element mit dem angegebenen Index konnte durch einen Bildlauf sichtbar gemacht werden, ansonsten false.</returns>
      <param name="index">Index des Elementes, das sichtbar werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListBoxBase.SetSelected(System.Int32,System.Boolean)">
      <summary>Selektiert/ deselektiert das angegebene Listenelement</summary>
      <param name="index">Index des zu selektierenden/deselektierenden Listenelementes</param>
      <param name="value">True: Das Element wird selektiert.False: Das Element wird deselektiert.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListBoxBase.BitChange">
      <summary>Wird ausgelöst, wenn sich das über 'WatchedBitNo' festgelegte Bit in der Prozessvariablen ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'BitChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListBoxBase.Change">
      <summary>Wird ausgelöst, wenn sich der angebundene Prozessvariablenwert ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'StateChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListBoxBase.SelectedIndexChanged">
      <summary>Wird ausgelöst, wenn sich der Selektionszustand im Steuerelement ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListBoxBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ListViewBase">
      <summary>Basisklasse für ein VisiWinNET-Listenansicht-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewBase'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.BackColorItemEven">
      <summary>Legt die Hintergrundfarbe für die geraden (also das 2., 4., 6., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.BackColorItemOdd">
      <summary>Legt die Hintergrundfarbe für die ungeraden (also das 1., 3., 5., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.BackColorSelected">
      <summary>Legt die Hintergrundfarbe für die im Steuerelement selektierte Zeile fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.Columns">
      <summary>Definiert die anzuzeigenden Spalten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ContentRectangle">
      <summary>Gibt die Abmessungen de Rechteckes zurück, das zur Darstellung des Inhaltes verwendet wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.CurrentCursor">
      <summary>Legt den aktuellen Mauszeiger im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.DateTimeFormat">
      <summary>Legt das Format der Datums-/Zeitwerte im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.FocusRect">
      <summary>Legt fest, ob das selektierte Listenelement durch einen gestrichelten Rahmen gekennzeichnet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.Font">
      <summary>Legt die Schriftart fest, mit der die Daten im Steuerelement angezeigt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ForeColorItemEven">
      <summary>Legt die Textfarbe für die geraden (also das 2., 4., 6., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ForeColorItemOdd">
      <summary>Legt die Textfarbe für die ungeraden (also das 1., 3., 5., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ForeColorSelected">
      <summary>Legt die Textfarbe für die im Steuerelement selektierte Zeile fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.Grid">
      <summary>Legt fest, ob zwischen den einzelnen Datenfeldern Datenblattlinien angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.GridColor">
      <summary>Legt die Farbe für die Linien fest, die die Felder im Steuerelement unterteilen.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.Header">
      <summary>Legt das Aussehen des Listenkopfes (also der ersten Zeile, die die Überschriften der Spalten beinhaltet) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.HScrollBarValue">
      <summary>Gibt den Wert der Value-Eigenschaft der horizontalen Bildlaufleiste zurück.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ItemAutoHeight">
      <summary>Legt fest, ob textuelle Daten automatisch umgebrochen werden und damit eine Anpassung der Höhe einer Zeile vorgenommen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ItemHeight">
      <summary>Legt die minimale Höhe einer Datenzeile fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ScrollBarProperties">
      <summary>Legt fest, wie die Bildlaufleisten des Steuerelementes dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.ScrollBarWidth">
      <summary>Legt die Breite der vertikalen Bildlaufleiste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.SelectedIndex">
      <summary>Gibt den Index der im Steuerelement selektierten Datenzeile zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBase.SuspendResize">
      <summary>Legt fest, ob die Breite der Spalten zur Laufzeit einstellbar sein soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.BeginUpdate">
      <summary>Unterdrückt beim Hinzufügen oder Ändern mehrerer Daten das Refresh bis zum Aufruf von 'EndUpdate'.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ClearList">
      <summary>Löscht den Inhalt der Liste</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.EndUpdate">
      <summary>Signalisiert das Ende der Datenänderung und führt ein Refresh der Steuerelementedarstellung aus.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.PointInHeader(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich die angegebene Koordinate im Listenkopf befindet</summary>
      <returns>True: Die Koordinate befindet sich im Listenkopf, ansonsten False</returns>
      <param name="x">x-Koordinate</param>
      <param name="y">y-Koordinate</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollDown(System.Int32)">
      <summary>Führt einen Bildlauf nach unten aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
      <param name="count">Anzahl der Elemente, um die die Ansicht verschoben werden soll. Wird 'count' nicht angebenen, verschiebt sich die Ansicht um ein Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollDown">
      <summary>Führt einen Bildlauf nach unten aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollPageDown">
      <summary>Führt einen seitenweisen Bildlauf nach unten aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollPageUp">
      <summary>Führt einen seitenweisen Bildlauf nach oben aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollToBottom">
      <summary>Führt einen Bildlauf an das Ende der Liste aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das letzte Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollToIndex(System.Int32)">
      <summary>Führt einen Bildlauf zum angegebenen Element aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das angegebene Element wurde nicht gefunden.</returns>
      <param name="index">Angabe des Elementeindex, zu dem der Bildlauf erfolgen soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollToTop">
      <summary>Führt einen Bildlauf an den Anfang der Liste aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollUp(System.Int32)">
      <summary>Führt einen Bildlauf nach oben aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
      <param name="count">Anzahl der Elemente, um die die Ansicht verschoben werden soll. Wird 'count' nicht angebenen, verschiebt sich die Ansicht um ein Element.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.ScrollUp">
      <summary>Führt einen Bildlauf nach oben aus</summary>
      <returns>True: Der Bildlauf konnte ausgeführt werden False: Der Bildlauf konnte nicht ausgeführt werden. Das erste Element der Auflistung ist bereits sichtbar.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.Sort(System.Int32,System.Boolean,System.Collections.IComparer)">
      <summary>Sortiert die Listenelemente nach dem Inhalt der über den Index angegebenen Spalte mithilfe des übergebenen Elementevergleichs-Objektes.</summary>
      <returns>true: Die Sortierung wurde ausgeführt, ansonsten false.</returns>
      <param name="columnIndex">Index der Spalte, nach deren Inhalt sortiert werden soll.</param>
      <param name="sortDown">True: Absteigende Sortierreihenfolge.False. Aufsteigende Sortierreihenfolge.</param>
      <param name="comparer">Objekt, mit dessen 'Compare'-Methode der Elementevergleich ausgeführt wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.Sort(System.String,System.Boolean,System.Collections.IComparer)">
      <summary>Sortiert die Listenelemente nach dem Inhalt der über den Namen angegebenen Spalte mithilfe des übergebenen Elementevergleichs-Objektes.</summary>
      <returns>true: Die Sortierung wurde ausgeführt, ansonsten false.</returns>
      <param name="columnName">Name der Spalte, nach deren Inhalt sortiert werden soll.</param>
      <param name="sortDown">True: Absteigende Sortierreihenfolge.False. Aufsteigende Sortierreihenfolge.</param>
      <param name="comparer">Objekt, mit dessen 'Compare'-Methode der Elementevergleich ausgeführt wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.Sort(System.String,System.Boolean)">
      <summary>Sortiert die Listenelemente nach dem Inhalt der über den Namen angegebenen Spalte.</summary>
      <returns>true: Die Sortierung wurde ausgeführt, ansonsten false.</returns>
      <param name="columnName">Name der Spalte, nach deren Inhalt sortiert werden soll.</param>
      <param name="sortDown">True: Absteigende Sortierreihenfolge.False. Aufsteigende Sortierreihenfolge.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBase.Sort(System.Int32,System.Boolean)">
      <summary>Sortiert die Listenelemente nach dem Inhalt der über den Index angegebenen Spalte.</summary>
      <returns>true: Die Sortierung wurde ausgeführt, ansonsten false.</returns>
      <param name="columnIndex">Index der Spalte, nach deren Inhalt sortiert werden soll.</param>
      <param name="sortDown">True: Absteigende Sortierreihenfolge.False. Aufsteigende Sortierreihenfolge.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListViewBase.SelectedIndexChanged">
      <summary>Wird ausgelöst, wenn sich die Selektion im Steuerelement ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListViewBase', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'SelectedIndexChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ListViewBaseColumn">
      <summary>Stellt die Basisklasse für eine Spalte in den VisiwinNET-Listenansicht-Steuerelementen dar</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.#ctor(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'ListViewBaseColumn'-Klasse.</summary>
      <param name="text">Wert für die Eigenschaft 'HeaderText'.</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Horizontale Ausrichtung (links, rechts, zentriert) der Informationen in der Spalte.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.#ctor(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewBaseColumn'-Klasse.</summary>
      <param name="text">Wert für die Eigenschaft 'HeaderText'.</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Horizontale Ausrichtung des Feldinhaltes.</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.#ctor(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'ListViewBaseColumn'-Klasse.</summary>
      <param name="text">Wert für die Eigenschaft 'HeaderText'.</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Horizontale Ausrichtung des Feldinhaltes.</param>
      <param name="sortable">Die Liste soll nach dem Inhalt dieser Spalte sortiert werden können.</param>
      <param name="visible">True: Die Spalte soll sichtbar sein, ansonsten False</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewBaseColumn'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.Alignment">
      <summary>Legt die horizontale Ausrichtung der Informationen in der Spalte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.HeaderText">
      <summary>Legt den festen, nicht sprachumschaltbaren Text im Spaltenkopf fest, wenn keine Angaben in 'LocalizedHederText' vorgenommen werden.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.ListView">
      <summary>Legt den Verweis auf das ListView-Objekt fest, das die Spalte enthält.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.LocalizedHeaderText">
      <summary>Legt den Bezeichner für einen Text aus der Sprachumschaltung fest, der im Spaltenkopf dargestellt wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.Name">
      <summary>Legt den Namen der Spalte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.Sortable">
      <summary>Obsolet. Verwenden Sie stattdessen 'SortMode'.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.SortMode">
      <summary>Legt fest, ob und wie die Liste nach dem Inhalt der Spalte sortiert wird.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.Visible">
      <summary>Legt fest, ob die Spalte sichtbar sein soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.Width">
      <summary>Legt die Breite der Spalte (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseColumn.X">
      <summary>Gibt die horizontale Position der linken Seite der Spalte zurück.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Je nach Verwendung wird diese Methode in den abgeleiteten Klassen überschrieben und hat unterschiedliche Rückgabewerte</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListViewBaseColumn.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert und dadurch ein erneutes Auslesen/ Auswerten notwendig wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ListViewBaseItem">
      <summary>Basisklasse für eine Zeile eines Listensteuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseItem.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ListViewBaseItem'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseItem.#ctor(System.Object[])">
      <summary>Initialisiert eine neue Instanz der 'ListViewBaseItem'-Klasse.</summary>
      <param name="list">Feld von Werten, die in der angegeben Reihenfolge zu den Spalten des Steuerelementes zugeordnet werden.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseItem.#ctor(VisiWinNET.Forms.Internals.ListViewBase)">
      <summary>Initialisiert eine neue Instanz der 'ListViewBaseItem'-Klasse mit der Angabe eines Verweises auf das Steuerelement, das die Liste verwendet.
</summary>
      <param name="listViewBase">Verweis auf das Steuerelement, das die Liste verwendet.</param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.BackColor">
      <summary>Legt die Hintergrundfarbe für die Zeile fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.ForeColor">
      <summary>Legt die Textfarbe für die Zeile fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.Height">
      <summary>Legt die Höhe der Zeile fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.Index">
      <summary>Legt die Position in der Liste fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.Key">
      <summary>Legt den eindeutigen Schlüssel der Zeile fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.ListViewBase">
      <summary>Legt den Verweis auf das ListView-Objekt fest, das die Spalte enthält.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.Selected">
      <summary>Gibt zurück, ob die Zeile im Steuerelement selektiert ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.Tag">
      <summary>Legt eine frei verwendbare Zusatzinformation zur Zeile fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewBaseItem.Top">
      <summary>Gibt den grafischen Abstand zur oberen Kante des Steuerelementes zurück. </summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseItem.Clone">
      <summary>Erzeugt ein Kopie des Objektes</summary>
      <returns>Die erzeugte Kopie</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewBaseItem.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Boolean,System.Int32,System.Boolean)">
      <summary>Zeichnet das Element in das übergebene Graphics-Objekt.
</summary>
      <param name="g">Graphics-Objekt, in das sich das Element zeichnet.</param>
      <param name="rectangle">Rechteck, in das sich das Element zeichnet.</param>
      <param name="font">Schriftart.</param>
      <param name="itemAutoHeight">True: Das Element berechnet seine Höhe selbst, ansonsten false.</param>
      <param name="hScrollValue">Optionale Angabe eines Offsets, der durch einen horizontalen Bildlauf das gezeichnete Element nach links verschiebt.</param>
      <param name="drawFocus">True: Das Element wird mit einem Fokusrahmen gekennzeichnet.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListViewBaseItem.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert und dadurch ein erneutes Auslesen/ Auswerten notwendig wird.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListViewBaseItem.PropertyChanging">
      <summary>Wird ausgelöst, bevor der geänderte Wert einer Eigenschaft im Objekt übernommen wird.</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangingEventArgs' mit weiteren Informationen zum Ereignis.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ListViewColumnCollection">
      <summary>Auflistung von Spalten eines Listenansichts-Steuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.#ctor(System.Windows.Forms.Control)">
      <summary>Initialisiert eine neue Instanz der 'ListViewColumnCollection'-Klasse.</summary>
      <param name="control">Angabe des Steuerelementes, zu der die Auflistung als Columns-Eigenschaft hinzugefügt werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewColumnCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeindex</summary>
      <param name="index">Angabe des Elementes über den 0-basierten Index</param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewColumnCollection.Item(System.String)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeschlüssel</summary>
      <param name="name">Elementeschlüssel.</param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ListViewColumnCollection.Width">
      <summary>Legt die Breite für alle Spalten gemeinsam fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.Add(VisiWinNET.Forms.Internals.ListViewBaseColumn)">
      <summary>Fügt ein neues Element in der Auflistung ein</summary>
      <param name="listViewColumn">Das hinzuzufügende Spaltenobjekt</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.AddRange(VisiWinNET.Forms.Internals.ListViewBaseColumn[])">
      <summary>Fügt der Auflistung mehrere neue Elemente hinzu</summary>
      <param name="listViewColumns">Feld von hinzuzufügenden Spaltenobjekten</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.IndexFromPosition(System.Int32)">
      <summary>Gibt den Index der Spalte zurück, die an der angegebenen X-Position angezeigt wird.
</summary>
      <returns>Index der Spalte oder -1, wenn sich unter der angegebenen X-Position keine Spalte befindet.</returns>
      <param name="x">x-Position.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.IndexOf(System.String)">
      <summary>Gibt den Listenindex der über den Namen angegebenen Spalte zurück.
</summary>
      <returns>Der 0-indizierte Index oder -1, wenn die Spalte nicht in der Liste enthalten ist.</returns>
      <param name="name">Name der Spalte, deren Index zu ermitteln ist.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.IndexOf(VisiWinNET.Forms.Internals.ListViewBaseColumn)">
      <summary>Gibt den Listenindex der angegebenen Spalte zurück.
</summary>
      <returns>Der 0-indizierte Index oder -1, wenn die Spalte nicht in der Liste enthalten ist.</returns>
      <param name="column">Referenz auf die Spalte, deren Index zu ermitteln ist.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.Remove(VisiWinNET.Forms.Internals.ListViewBaseColumn)">
      <summary>Löscht den ersten Verweis auf das angegebene Objekt aus der Auflistung</summary>
      <param name="listViewColumn">Angabe des zu löschenden Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.RemoveAll(VisiWinNET.Forms.Internals.ListViewBaseColumn)">
      <summary>Löscht das angegebene Objekt aus der Auflistung</summary>
      <param name="listViewColumn">Angabe des zu löschenden Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ListViewColumnCollection.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Durch Semikolonzeichen getrennte Angabe der enthaltenen Spaltentypen</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListViewColumnCollection.CollectionChanged">
      <summary>Wird ausgelöst, wenn eine Spalte hinzugefügt oder gelöscht wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ListViewColumnCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Index des Elementes, das gelöscht oder hinzugefügt wurde</param>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ListViewColumnCollection.ColumnPropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft eines enthaltenen Column-Objektes ändert.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.LogarithmProperties">
      <summary>Kapselt Informationen zur logarithmischen Darstellung in einer Skala</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.LogarithmProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der 'LogarithmProperties'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.LogarithmProperties.#ctor(System.Boolean,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'LogarithmProperties'-Klasse.</summary>
      <param name="enabled">Wert für die 'Enabled'-Eigenschaft</param>
      <param name="logBase">Wert für die 'LogBase'-Eigenschaft</param>
      <param name="showLines">Wert für die 'ShowLines'-Eigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.LogarithmProperties.Enabled">
      <summary>Legt fest, ob die logarithmische Darstellung angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.LogarithmProperties.LogBase">
      <summary>Legt die Basis des Logarithmus fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.LogarithmProperties.ShowLines">
      <summary>Legt fest, ob die im logarithmischen Raster liegenden Linien zwischen den Werten angezeigt werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.LogarithmProperties.ContentEquals(VisiWinNET.Forms.Internals.LogarithmProperties)">
      <summary>Gibt zurück, ob die Eigenschaftenwerte des Objektes mit denen eines Vergleichsobjektes identisch sind.
</summary>
      <returns>True: Die Eigenschaftenwerte sind identisch, ansonsten false.</returns>
      <param name="other">Das Vergleichsobjekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.LogarithmProperties.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt die EInstellungen der Eigenschaften im Objekt zurück</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.LogarithmProperties.PropertyChanged">
      <summary>Wird ausgelöst, sobald sich eine Eigenschaft im Objekt ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LogarithmProperties', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ScaleAutoAlignment">
      <summary>Klasse zum automatischen Einteilen von Skalen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleAutoAlignment.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ScaleAutoAlignment'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleAutoAlignment.#ctor(System.Boolean,VisiWinNET.Forms.ScaleDivisionType,System.Double,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'ScaleAutoAlignment'-Klasse.</summary>
      <param name="enabled">Wert für die Eigenschaft 'Enabled'</param>
      <param name="divisionType">Wert für die Eigenschaft 'DivisionType'</param>
      <param name="scaleSpacing">Wert für die Eigenschaft 'ScaleSpacing'</param>
      <param name="rulerSpacing">Wert für die Eigenschaft 'RulerSpacing'</param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleAutoAlignment.DivisionType">
      <summary>Gibt die Schrittweiten an, die bei der automatischen Neueinteilung der Skala verwendet werden können. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleAutoAlignment.Enabled">
      <summary>Aktiviert die automatische Skaleneinteilung</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleAutoAlignment.RulerSpacing">
      <summary>Gibt den minimalen Abstand (in Pixeln) zwischen zwei Skalenlinien an.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleAutoAlignment.ScaleSpacing">
      <summary>Gibt den minimalen Abstand zwischen zwei Skalenbeschriftungswerten bezogen auf die aktuell verwendte Schriftart an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleAutoAlignment.ContentEquals(VisiWinNET.Forms.Internals.ScaleAutoAlignment)">
      <summary>Gibt zurück, ob die Eigenschaftenwerte des Objektes mit denen eines Vergleichsobjektes identisch sind.
</summary>
      <returns>True: Die Eigenschaftenwerte sind identisch, ansonsten false.</returns>
      <param name="other">Das Vergleichsobjekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleAutoAlignment.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Hier wird der Wert der Eigenschaft DivisionType zurückgegeben, wenn 'Enabled'=true ist.</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ScaleAutoAlignment.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ScaleAutoAlignment', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment">
      <summary>Klasse zum automatischen Einteilen einer Zeitskala</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ScaleDateTimeAutoAlignment'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.#ctor(System.Boolean,System.Double,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'ScaleDateTimeAutoAlignment'-Klasse.</summary>
      <param name="enabled">Wert für die Eigenschaft 'Enabled'</param>
      <param name="scaleSpacing">Wert für die Eigenschaft 'ScaleSpacing'</param>
      <param name="rulerSpacing">Wert für die Eigenschaft 'RulerSpacing'</param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.Enabled">
      <summary>Aktiviert die automatische Skaleneinteilung</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.RulerSpacing">
      <summary>Gibt den minimalen Abstand (in Pixeln) zwischen zwei Rasterlinien an.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.ScaleSpacing">
      <summary>Gibt den minimalen Abstand zwischen zwei Skalenbeschriftungswerten bezogen auf die aktuell verwendte Schriftart an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.UseWeek">
      <summary>Legt fest, ob bei der Skalenaufteilung auch Wochen als Raster verwendet werden sollen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.Clone">
      <summary>Erzeugt ein Kopie des Objektes</summary>
      <returns>Die erzeugte Kopie</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.ContentEquals(VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment)">
      <summary>Gibt zurück, ob die Eigenschaftenwerte des Objektes mit denen eines Vergleichsobjektes identisch sind.
</summary>
      <returns>True: Die Eigenschaftenwerte sind identisch, ansonsten false.</returns>
      <param name="other">Das Vergleichsobjekt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt die Einstellungen von 'Enabled', 'RulerSpacing' und 'ScaleSpacing' zurück</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.ScaleDateTimeAutoAlignment.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'ScaleDateTimeAutoAlignment', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.SelectedIndexChangedEventArgs">
      <summary>Stellt Daten für das 'SelectedIndexChanged'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.SelectedIndexChangedEventArgs.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'SelectedIndexChangedEventArgs'-Klasse.</summary>
      <param name="index">Wert für die Eigenschaft 'Index'. </param>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.SelectedIndexChangedEventArgs.Index">
      <summary>Gibt den Index des selektierten Listenelementes zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.StateObject">
      <summary>Basisklasse für die Zuordnung einer Information zu einem oder mehreren Zustandswerten einer Variablen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.StateObject.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateObject'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.StateObject.Fault">
      <summary>Legt fest, ob der Zustand über eine zweite Prozessvariable ('VWItemFault') als Fehlerzustand interpretiert werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.StateObject.Name">
      <summary>Gibt einen Namen für den Status an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.StateObject.State">
      <summary>Beschreibt einen oder mehrere Variablenzustände</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.StateObject.Contains(System.Long)">
      <summary>Gibt zurück, ob der übergebene Wert mit einem der Werte der 'State'-Eigenschaft übereinstimmt</summary>
      <returns>True: der über die 'State'-Eigenschaft definierte Wertebereich beinhaltet den übergebenen 'state'-Parameter, ansonsten 'false'</returns>
      <param name="state">Wert, der mit der State-Eigenschaft verglichen werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.StateObject.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Name und Wert der State-Eigenschaft</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Internals.StateObject.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich der Wert einer Eigenschaft ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'StateObject', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.TextOutBase">
      <summary>Basisklasse für textdarstellende Steuerelemente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Internals.TextOutBase.#ctor">
      <summary>Erzeugt eine neue Instanz der 'TextOutBase'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.TextOutBase.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Internals.TextOutBase.TextAlign">
      <summary>Legt die Position des Textes innerhalb des Steuerelementes fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.InvalidInputEventHandler">
      <summary>Delegat für das Ereignis 'InvalidInput'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.ListViewColumnCollectionChangedHandler">
      <summary>Delegat für das Ereignis 'CollectionChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.SelectedIndexChangedEventHandler">
      <summary>Delegat für das Ereignis 'SelectedIndexChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.CharacterFilterModes">
      <summary>Enthält verschiedene Filter für die Eingabe von Zeichenketten</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.CharacterFilterModes.Filename">
      <summary>Die in einem Dateinamen unzulässigen Zeichen (z.B.: \ / : * ? " &lt; &gt; |) werden in der Eingabe gefiltert.
Die Einschränkungen für Dateinamen sind betriebssystemabhängig.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.CharacterFilterModes.None">
      <summary>Es werden keine Zeichen gefiltert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.CharacterFilterModes.Pathname">
      <summary>Die in einer Pfadangabe unzulässigen Zeichen (z.B.: \ : * ? " &lt; &gt; |) werden in der Eingabe gefiltert.
Die Einschränkungen für Pfadangaben sind betriebssystemabhängig.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.DateTimeUnit">
      <summary>Enthält die möglichen Einheiten zur Darstellung einer Zeitskala</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Days">
      <summary>Das Interval wird in 'Tagen' angegeben </summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Hours">
      <summary>Das Interval wird in 'Stunden' angegeben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Milliseconds">
      <summary>Das Interval wird in 'Millisekunden' angegeben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Minutes">
      <summary>Das Interval wird in 'Minuten' angegeben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Months">
      <summary>Das Interval wird in 'Monaten' angegeben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Seconds">
      <summary>Das Interval wird in 'Sekunden' angegeben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Weeks">
      <summary>Das Interval wird in 'Wochen' angegeben</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.DateTimeUnit.Years">
      <summary>Das Interval wird in 'Jahren' angegeben</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Internals.UnitLayouts">
      <summary>Umfasst die möglichen Einstellungen zur Positionierung des Einheitentextes in einer Skala
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.UnitLayouts.AtMaxValue">
      <summary>Angabe des Einheitentextes am Maximalwert der Skala</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.UnitLayouts.AtMinValue">
      <summary>Angabe des Einheitentextes am Minimalwert der Skala</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Internals.UnitLayouts.BehindScaleValues">
      <summary>Angabe des Einheitentextes an jedem Skalenwert</summary>
    </member>
    <member name="T:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox">
      <summary>Steuerelement das die Umschaltung der Sprache über ein Kombinationsfeld erlaubt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.#ctor">
      <summary>Initialisiert eine neue Instanz der 'LanguageComboBox'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.Editable">
      <summary>Überschrieben, keine Funktion</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.LanguageMode">
      <summary>Legt fest, welche Textausgabe in der Auswahlliste erfolgt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.Text">
      <summary>Überschrieben, keine Funktion</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.TextGroup">
      <summary>Überschrieben, keine Funktion</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.TextPrefix">
      <summary>Überschrieben, keine Funktion</summary>
    </member>
    <member name="P:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.TextType">
      <summary>Überschrieben, keine Funktion </summary>
    </member>
    <member name="P:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.UseTouchKeyboard">
      <summary>Überschrieben, keine Funktion</summary>
    </member>
    <member name="M:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.LanguageSwitching.LanguageComboBox.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="T:VisiWinNET.Forms.LanguageSwitching.LanguageModes">
      <summary>Beinhaltet die verschiedenen Anzeigemöglichkeiten für eine Sprachauflistung</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.DisplayName">
      <summary>Ruft den Kulturnamen im Format "Vollständige Sprache (Vollständiges Land/Region)" in der Sprache der lokalisierten Version von .NET Framework ab</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.EnglishName">
      <summary>Ruft den Kulturnamen im Format "Vollständige Sprache (Vollständiges Land/Region)" auf Englisch ab</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.LCID">
      <summary>Gibt die LCID (Locale Identifier) für die aktuelle CultureInfo an. Die LCID ist ein numerischer Wert.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.NativeName">
      <summary>Ruft den Kulturnamen im Format "Vollständige Sprache (Vollständiges Land/ Region)" in der Sprache ab, auf deren Anzeige die Kultur festgelegt wurde.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.ParentNativeName">
      <summary>Ruft den Namen der übergeordnete Kultur zur Sprache ab.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.ProjectLanguageName">
      <summary>Ruft den Namen aus der Sprachendefinition ab</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.ThreeLetterISOLanguageName">
      <summary>Ruft den aus drei Buchstaben bestehenden Code nach ISO 639-2 für die Sprache ab</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.ThreeLetterWindowsLanguageName">
      <summary>Ruft den aus drei Buchstaben bestehenden Code für die Sprache ab, wie er in der Windows-API definiert ist.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.LanguageSwitching.LanguageModes.TwoLetterISOLanguageName">
      <summary>Ruft den aus zwei Buchstaben bestehenden Code nach ISO 639-1 für die Sprache ab.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.BorderStyle">
      <summary>Bestimmt den Rahmen eines Steuerelementes, das im Druckdesign verwendet wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.BorderStyle.#ctor">
      <summary>Initialisiert eine neue Instanz der 'BorderStyle'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.Bottom">
      <summary>Legt den Stil der unteren Rahmenlinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.BottomVisible">
      <summary>Gibt zurück, ob die untere Rahmenlinie sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.Default">
      <summary>Legt einen Rahmenstil als Vorgabe für die vier Kanten des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.Left">
      <summary>Legt den Stil der linken Rahmenlinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.LeftVisible">
      <summary>Gibt zurück, ob die linke Rahmenlinie sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.Right">
      <summary>Legt den Stil der rechten Rahmenlinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.RightVisible">
      <summary>Gibt zurck, ob die rechte Rahmenlinie sichtbar ist
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.Top">
      <summary>Legt den Stil der oberen Rahmenlinie fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.BorderStyle.TopVisible">
      <summary>Gibt zurck, ob die obere Rahmenlinie sichtbar ist
</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.BorderStyle.PropertyChanged">
      <summary>Tritt auf, wenn sich ein Eigenschaftenwert ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'BorderStyle', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.DateTime">
      <summary>Steuerelement zur Ausgabe von Datum und Uhrzeit auf einem Druckerformular</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.DateTime.#ctor">
      <summary>Initialisiert eine neue Instanz der 'DateTime'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.DateTime.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.DateTime.Format">
      <summary>Legt eine (sprachumschaltbare) Formatierung für die Ausgabe fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.DateTime.TextAlign">
      <summary>Legt die Position des Textes innerhalb des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.DateTime.VWItem">
      <summary>Legt die Prozessvariable fest, deren Wert im Steuerelement angezeigt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.DateTime.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.DateTime.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PageElement">
      <summary>Basisklasse für Steuerelemente, die auf einem Druckerformular platziert werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageElement.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PageElement'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageElement.BackColor">
      <summary>Legt die Hintergrundfarbe im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageElement.BorderStyle">
      <summary>Legt den Rahmen des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageElement.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageElement.Visible">
      <summary>Legt fest, ob das Objekt sichtbar sein soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageElement.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageElement.EndInit">
      <summary>Beendet die Initialisierungsphase des Steuerelementes</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PageElementCollection">
      <summary>Auflistung von Steuerelementen auf einem 'PrinterFormDocument'</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageElementCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PageElementCollection'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageElementCollection.Item(System.Int32)">
      <summary>Gibt das über den Index angesprochene Element der Auflistung zurück</summary>
      <param name="index">Angabe des (0-indizierten) Index</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageElementCollection.Add(VisiWinNET.Forms.Printing.IPageElement)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <param name="pageElement">Hinzuzufügendes 'PageElement'-Objekt</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageElementCollection.AddRange(VisiWinNET.Forms.Printing.IPageElement[])">
      <summary>Fügt der Auflistung mehrere Elemente hinzu</summary>
      <param name="pageElements">Feld von 'IPageElement'-Objekten</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageElementCollection.Remove(VisiWinNET.Forms.Printing.IPageElement)">
      <summary>Löscht ein Element aus der Auflistung</summary>
      <param name="pageElement">Angabe des zu löschenden 'IPageElement'-Objektes</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PageMargins">
      <summary>Legt den Rand zwischen den Papierkanten und dem bedruckten Bereich fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageMargins.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PageMargins'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageMargins.Bottom">
      <summary>Legt den unteren Rand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageMargins.Left">
      <summary>Legt den linken Rand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageMargins.Right">
      <summary>Legt den rechten Rand fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageMargins.Top">
      <summary>Legt den oberen Rand fest</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.PageMargins.PropertyChanged">
      <summary>Wird ausgelöst, wenn der Wert einer der enthaltenen Eigenschaften geändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PageMargins', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PageSettings">
      <summary>Beinhaltet Einstellungen für die Druckseite</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PageSettings'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageSettings.#ctor(VisiWinNET.Forms.Printing.PageSettings)">
      <summary>Initialisiert eine neue Instanz der 'PageSettings'-Klasse.</summary>
      <param name="settings">Übergabe eines 'PageSettings'-Objektes, dessen Einstellungen auf die Eigenschaften des neu instanziierten Objektes übertragen werden.</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageSettings.Format">
      <summary>Legt das Papierformat fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageSettings.Margins">
      <summary>Legt die Seitenränder fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageSettings.Orientation">
      <summary>Legt die Ausrichtung des Papiers fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageSettings.PaperKind">
      <summary>Gibt die gewählte Papiergröße zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PageSettings.Size">
      <summary>Gibt die Größe des Papiers zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageSettings.CopyToPrinterPageSettings(System.Drawing.Printing.PageSettings)">
      <summary>Kopiert die Einstellungen des Objetes in ein 'System.Drawing.Printing.PageSettings'-Objekt</summary>
      <param name="printerPageSettings">Objekt, in das die EIgenschaftenwerte zu kopieren sind</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PageSettings.GetBounds">
      <summary>Gibt den Druckbereich der Seite als 'Rectangle' zurück</summary>
      <returns>Objekt vom Typ 'Rectangle', das den Druckbereich beschreibt</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.PageSettings.PropertyChanged">
      <summary>Tritt auf, wenn sich ein Eigenschaftenwert ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PageSettings', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Picture">
      <summary>Steuerelement, das ein Bild auf einer Druckseite ausgibt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Picture.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Picture'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Picture.Image">
      <summary>Legt die Grafik fest, die im Steuerelement angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Picture.ImageSizeMode">
      <summary>Legt fest, wie sich die Größe von Steuerelement und Grafik beim Laden eines neuen Bildes aneinander anpassen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PrinterForm">
      <summary>Formular zur grafischen Gestaltung eines Ausdruckes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterForm.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PrinterForm'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrinterForm.PageSettings">
      <summary>Legt die Größe, Ausrichtung und Rändereinstellungen für das Druckerformular fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterForm.CreatePrintDocument">
      <summary>Erzeugt ein Objekt, das das Rendern der Druckdaten eines Druckerformulares kapselt</summary>
      <returns>Objekt vom Typ 'PrinterFormDocument'</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PrinterFormDocument">
      <summary>Kapselt die Renderfunktion eines 'PrinterForm'-Objektes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormDocument.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PrinterFormDocument'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrinterFormDocument.PageElements">
      <summary>Legt die Steuerelemente fest, die sich in das Druckdokument hineinzeichnen sollen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PrinterFormsCollection">
      <summary>Auflistung von 'PrinterFormCollectionItem'-Objekten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormsCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PrinterFormsCollection'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrinterFormsCollection.Item(System.Int32)">
      <summary>Gibt das über den Index angesprochene Element der Auflistung zurück</summary>
      <param name="index">Angabe des (0-indizierten) Index</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormsCollection.Add(VisiWinNET.Forms.Printing.PrinterFormsCollectionItem)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <param name="item">Neu hinzuzufügendes 'PrinterFormCollectionItem'-Objekt</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormsCollection.AddRange(VisiWinNET.Forms.Printing.PrinterFormsCollectionItem[])">
      <summary>Fügt der Auflistung mehrere Elemente hinzu</summary>
      <param name="items">Feld von 'PrinterFormCollectionItem'-Objekten</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormsCollection.Remove(VisiWinNET.Forms.Printing.PrinterFormsCollectionItem)">
      <summary>Löscht ein Element aus der Auflistung</summary>
      <param name="item">Angabe des zu löschenden 'PrinterFormCollectionItem'-Objektes</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PrinterFormsCollectionItem">
      <summary>Kapselt als Element von 'PrinterFormsCollection' ein Druckerformular</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormsCollectionItem.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PrinterFormsCollectionItem'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormsCollectionItem.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'PrinterFormsCollectionItem'-Klasse.</summary>
      <param name="printerForm">Name des Druckerformulares</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrinterFormsCollectionItem.PrinterForm">
      <summary>Legt den Namen des Druckerformulars fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrinterFormsCollectionItem.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenkette</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PrintHandler">
      <summary>Komponente zum Starten und Überwachen eines Druckvorganges</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PrintHandler'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'PrintHandler'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrintHandler.Events">
      <summary>Verknüpft Steuerelementeereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrintHandler.IsPrinting">
      <summary>Gibt zurück, ob aktuell ein Druckauftrag von der Komponente angesteuert wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrintHandler.PrinterForms">
      <summary>Legt fest, welche Druckerformulare über den 'Print'-Befehl zum Drucker gesendet werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrintHandler.ShowPrintingDialog">
      <summary>Legt fest, ob während des Ausdruckes ein Statusfenster angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrintHandler.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrintHandler.UnloadFormsAfterPrinting">
      <summary>Legt fest, ob die während des Ausdruckes erzeugten Druckerformularinstanzen nach dem Ausdruck entladen werden sollen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.Cancel">
      <summary>Bricht die Erstellung des aktuell laufenden Ausdruckes ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.Print">
      <summary>Startet einen Ausdruck</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.PrintScreenshot">
      <summary>Startet den Ausdruck eines Screendumps</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintHandler.ShowPrinterSettings">
      <summary>Öffnet den Windows-Systemdialog der Druckerverwaltung</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.PrintHandler.PrintingFailed">
      <summary>Wird ausgelöst, wenn ein Druckauftrag durch einen Fehler abgebrochen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PrintHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.PrintHandler.PrintingSucceeded">
      <summary>Wird ausgelöst, nachdem ein Druckauftrag vom 'PrintHandler' erfolgreich abgearbeitet wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PrintHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PrintHandlerEventAgent">
      <summary>Dieser Typ wird von der VisiWinNET Infrastruktur verwendet. Bitte nicht verwenden.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PrintingDialog">
      <summary>Formular, das den Status eines Ausdruckes anzeigt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.PrintingDialog.#ctor">
      <summary>Initialisiert eine neue Instanz der 'PrintingDialog'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.PrintingDialog.StatusText">
      <summary>Legt den anzuzeigenden Statustext fest</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.PrintingDialog.CancelRequest">
      <summary>Wird ausgelöst, wenn auf dem Formular die "Abbrechen"-Schaltfläche gedrückt wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'PrintingDialog', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Table">
      <summary>Stellt die Basisklasse einer ausdruckbaren Tabelle dar</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Table.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Table'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.BackColor">
      <summary>Legt die Hintergrundfarbe der Tabelle fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.BackColorItemEven">
      <summary>Legt die Hintergrundfarbe für die geraden (also das 2., 4., 6., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.BackColorItemOdd">
      <summary>Legt die Hintergrundfarbe für die ungeraden (also das 1., 3., 5., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.BorderStyle">
      <summary>Bestimmt die Umrandung des Ausgabebereiches</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.Columns">
      <summary>Definiert die anzuzeigenden Spalten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.CurrentCursor">
      <summary>Legt den aktuellen Mauszeiger im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.DateTimeFormat">
      <summary>Legt das Format der Datums-/Zeitwerte im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.ForeColor">
      <summary>Legt die Textfarbe im Ausgabebereich fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.ForeColorItemEven">
      <summary>Legt die Textfarbe für die geraden (also das 2., 4., 6., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.ForeColorItemOdd">
      <summary>Legt die Textfarbe für die ungeraden (also das 1., 3., 5., ...) Listenelemente fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.Grid">
      <summary>Legt fest, ob zwischen den einzelnen Datenfeldern Linien angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.Header">
      <summary>Legt das Aussehen des Listenkopfes (also der ersten Zeile, die die Überschriften der Spalten beinhaltet) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.ItemAutoHeight">
      <summary>Legt fest, ob textuelle Daten automatisch umgebrochen werden und damit eine Anpassung der Höhe einer Zeile vorgenommen wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.ItemHeight">
      <summary>Legt die minimale Höhe einer Datenzeile fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Table.Items">
      <summary>Gibt die Zeilen des Listensteuerelementes als Auflistung zurück
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Table.ClearTable">
      <summary>Löscht die Zeilen der Tabelle</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Table.PointInHeader(System.Int32,System.Int32)">
      <summary>Gibt zurück, ob sich die angegebene Koordinate im Tabellenkopf befindet</summary>
      <returns>True: Die Koordinate befindet sich im Listenkopf, ansonsten False</returns>
      <param name="x">x-Koordinate</param>
      <param name="y">y-Koordinate</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.TableColumn">
      <summary>Kapselt die Informationen einer Spalte des 'Table'-Steuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumn.#ctor(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'TableColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="align">Wert für die Eigenschaft 'Alignment'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumn.#ctor(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'TableColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="align">Wert für die Eigenschaft 'Alignment'</param>
      <param name="bSortable">Wert für die Eigenschaft 'Sortable'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumn.#ctor(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'TableColumn'-Klasse.</summary>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="align">Wert für die Eigenschaft 'Alignment'</param>
      <param name="bSortable">Wert für die Eigenschaft 'Sortable'</param>
      <param name="visible">True: Die Spalte soll sichtbar sein, ansonsten False</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TableColumn'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumn.Alignment">
      <summary>Legt die horizontale Ausrichtung der Informationen in der Spalte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumn.HeaderText">
      <summary>Legt fest, welcher Text als Spaltenbeschreibung im Listenkopf dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumn.Name">
      <summary>Legt den Namen der Spalte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumn.Sortable">
      <summary>Legt fest, ob der Listeninhalt nach dem Inhalt der Spalte sortiert werden kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumn.Visible">
      <summary>Legt fest, ob die Spalte sichtbar sein soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumn.Width">
      <summary>Legt die Breite der Spalte (in Pixeln) fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Je nach Verwendung wird diese Methode in den abgeleiteten Klassen überschrieben und hat unterschiedliche Rückgabewerte</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.TableColumnCollection">
      <summary>Auflistung von Spalten eines druckbaren Tabellensteuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.#ctor(System.Windows.Forms.Control)">
      <summary>Initialisiert eine neue Instanz der 'TableColumnCollection'-Klasse.</summary>
      <param name="control">Das 'Table'-Steuerelement, für das die Auflistung gelten soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumnCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeindex</summary>
      <param name="index">Zugriff auf das Element über den 0-basierten Aufzählungsindex</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumnCollection.Item(System.String)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeschlüssel</summary>
      <param name="index">Zugriff auf das Element über den Spaltennamen</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableColumnCollection.Width">
      <summary>Legt die Breite für alle Spalten gemeinsam fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.Add(VisiWinNET.Forms.Printing.TableColumn)">
      <summary>Fügt ein neues Element in der Auflistung ein</summary>
      <param name="tableColumn">Das hinzuzufügende Spaltenobjekt</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.AddRange(VisiWinNET.Forms.Printing.TableColumn[])">
      <summary>Fügt der Auflistung mehrere neue Elemente hinzu</summary>
      <param name="tableColumns">Feld von hinzuzufügenden Spaltenobjekten</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.IndexFromPosition(System.Int32)">
      <summary>Gibt den Index der Spalte zurück, die an der angegebenen X-Position angezeigt wird.
</summary>
      <returns>Index der Spalte oder -1, wenn sich unter der angegebenen X-Position keine Spalte befindet.</returns>
      <param name="x">x-Position.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.Remove(VisiWinNET.Forms.Printing.TableColumn)">
      <summary>Löscht den ersten Verweis auf das angegebene Objekt aus der Auflistung</summary>
      <param name="tableColumn">Angabe des zu löschenden Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.RemoveAll(VisiWinNET.Forms.Printing.TableColumn)">
      <summary>Löscht das angegebene Objekt aus der Auflistung</summary>
      <param name="tableColumn">Angabe des zu löschenden Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableColumnCollection.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Durch Semikolonzeichen getrennte Angabe der enthaltenen Spaltentypen</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.TableColumnCollection.CollectionChanged">
      <summary>Wird ausgelöst, wenn eine Spalte hinzugefügt oder gelöscht wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TableColumnCollection', das das Ereignis ausgelöst hat.</param>
      <param name="index">Index des Elementes, das gelöscht oder hinzugefügt wurde</param>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.TableColumnCollection.LanguageChange">
      <summary>Wird ausgelöst, wenn die Sprache im Projekt umgestellt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TableColumnCollection', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'LanguageChangeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.TableHeader">
      <summary>Kapselt Informationen zum Aussehen des Tabellenkopfes im 'Table'-Steuerelement</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableHeader.Grid">
      <summary>Legt fest, ob der Tabellenkopf mit Rahmenlinien ausgegeben werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableHeader.Repeat">
      <summary>Legt fest, ob der Tabellenkopf auf jeder Seite erneut ausgegeben werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableHeader.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableHeader.GetHeight">
      <summary>Gibt die aus dem Inhalt errechnete Höhe des Objektes zurück.</summary>
      <returns>Die errechnete Höhe.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.TableItem">
      <summary>Basisklasse für eine Zeile eines ausdruckbaren Tabellensteuerelementes</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItem.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TableItem'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItem.#ctor(System.Object[])">
      <summary>Initialisiert eine neue Instanz der 'TableItem'-Klasse.</summary>
      <param name="list">Das 'Table'-Steuerelement, für das die Auflistung gelten soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableItem.Key">
      <summary>Legt den eindeutigen Schlüssel der Zeile fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableItem.Selected">
      <summary>Legt fest, ob das Objekt selektiert dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableItem.Tag">
      <summary>Legt eine frei verwendbare Zusatzinformation zur Zeile fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItem.CompareTo(System.Object)">
      <summary>Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</summary>
      <returns>0, wenn die verglichenen Objekte gleich sind</returns>
      <param name="value">Zu vergleichendes Objekt</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.TableItemCollection">
      <summary>Auflistung, die die Zeilen eines druckbaren Tabellensteuerelementes kapselt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.#ctor(VisiWinNET.Forms.Printing.Table)">
      <summary>Initialisiert eine neue Instanz der 'TableItemCollection'-Klasse.</summary>
      <param name="list">Das 'Table'-Steuerelement, für das die Auflistung gelten soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableItemCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung über den Elementeindex</summary>
      <param name="index">Zugriff auf das Element über den Elementeindex</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TableItemCollection.Item(System.Object)">
      <summary>Zugriff auf ein Element der Auflistung über den eindeutigen Schlüssel</summary>
      <param name="key">Zugriff auf das Element über den eindeutigen Schlüssel (Bei der 'Add'-Methode angegeben)</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Add(System.Object,VisiWinNET.Forms.Printing.TableItem)">
      <summary>Fügt ein neues Listenelement am Ende der Liste an</summary>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Add(VisiWinNET.Forms.Printing.TableItem)">
      <summary>Fügt ein neues Listenelement am Ende der Liste an</summary>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Add(System.Object,VisiWinNET.Forms.Printing.TableItem,System.Object)">
      <summary>Fügt ein neues Listenelement am Ende der Liste an</summary>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Add(VisiWinNET.Forms.Printing.TableItem,System.Object)">
      <summary>Fügt ein neues Listenelement am Ende der Liste an</summary>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.AddRange(VisiWinNET.Forms.Printing.TableItem[])">
      <summary>Fügt der Auflistung mehrere Zeilen hinzu</summary>
      <param name="tableItems">Feld von Objekten des Typs 'TableItem', das die hinzuzufügenden Zeilen enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Clear">
      <summary>Löscht alle Zeilen aus der Auflistung</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Insert(System.Int32,VisiWinNET.Forms.Printing.TableItem,System.Object)">
      <summary>Fügt der Auflistung an der angegeben Position eine neue Zeile mit 'Tag' hinzu</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Insert(System.Int32,System.Object,VisiWinNET.Forms.Printing.TableItem)">
      <summary>Fügt der Auflistung an der angegeben Position eine neue  mit 'Key' hinzu</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Insert(System.Int32,VisiWinNET.Forms.Printing.TableItem)">
      <summary>Fügt der Auflistung an der angegeben Position eine neue Zeile hinzu</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Insert(System.Int32,System.Object,VisiWinNET.Forms.Printing.TableItem,System.Object)">
      <summary>Fügt der Auflistung an der angegeben Position eine neue Zeile mit 'Tag' und 'Key' hinzu</summary>
      <param name="index">Position, an der das Element eingefügt werden soll. Die Angabe einer 0 beispielsweise fügt die neue Zeile am Anfang der Auflistung ein.</param>
      <param name="key">Angabe eines eindeutigen Schlüssels für die Zeile. Anhand des 'Key' kann über die Item-Eigenschaft das Element später in der Auflistung gesucht werden.</param>
      <param name="tableItem">Angabe des Objektes, das zur Auflistung hinzugefügt werden soll</param>
      <param name="tag">'Tag' legt eine frei verwendbare Zusatzinformation zur Zeile fest. Der Tag-Parameter kann mit einem Objekt verknüpft werden, das Informationen enthält, die in der weiteren Verarbeitung der Zeile benötigt werden, die aber nicht anzeigerelevant sind.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Remove(System.Object)">
      <summary>Löscht die angegebene Zeile aus der Auflistung</summary>
      <param name="key">Der Schlüssel des zu löschenden Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.Remove(VisiWinNET.Forms.Printing.TableItem)">
      <summary>Löscht die angegebene Zeile aus der Auflistung</summary>
      <param name="tableItem">Das zu löschende Objekt</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.RemoveAll(VisiWinNET.Forms.Printing.TableItem)">
      <summary>Löscht das angegebene Objekt aus der Auflistung</summary>
      <param name="tableItem">Angabe des zu löschenden Objektes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.RemoveAll(System.Object)">
      <summary>Löscht das angegebene Objekt aus der Auflistung</summary>
      <param name="obj">Angabe des zu löschenden Elementes über den Schlüssel</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TableItemCollection.RemoveAt(System.Int32)">
      <summary>Löscht ein Element unter Angabe der Position aus der Auflistung</summary>
      <param name="index">Angabe des zu löschenden Elementes über die Position</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Text">
      <summary>Steuerelement, das einen Text (fest, variablenwertbezogen und/oder sprachumgeschaltet) auf einem Druckerformular darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Text.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Text'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Text.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Text.LocalizedText">
      <summary>Legt den auf dem Steuerelement angezeigten sprach-/variablengesteuerten Text fest oder gibt ihn zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Text.TextAlign">
      <summary>Legt die Position des Textes innerhalb des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Text.UseItemText">
      <summary>Legt fest, dass das Steuerelement nur den zur angebundenen Prozessvariablen festgelegten sprachumschaltbaren Text anzeigen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Text.VWItem">
      <summary>Legt die Prozessvariable fest, deren Wertänderung die Auswahl des anzuzeigenden Textes ändert oder deren sprachumschaltbarer Text im Steuerelement dargestellt werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.TextRegion">
      <summary>Klasse, die einen Ausgabebereich im Steuerelement 'Variable' repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TextRegion.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TextRegion'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.BackColor">
      <summary>Legt die Hintergrundfarbe des Ausgabebereiches fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.ClientRect">
      <summary>Gibt ein 'Rectangle'-Objekt zurück, dass Abmessungen und Position des zur Verfügung stehenden Ausgabebereiches enthält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.Font">
      <summary>Legt die Schriftart fest oder gibt sie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.ForeColor">
      <summary>Legt die Textfarbe im Ausgabebereich fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.Height">
      <summary>Gibt die Höhe des 'TextRegion'-Objektes zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.IsVisible">
      <summary>Gibt zurück, ob das Textfeld sichtbar ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.Location">
      <summary>Gibt die Koordinaten der linken oberen Ecke des 'TextRegion'-Objektes bezogen auf das verwendende Steuerelement zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.SizeRatio">
      <summary>Gibt das Größenverhältnis von Ausgabebereich und Steuerelement an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.Text">
      <summary>Ermöglicht die Einblendung eines festen Textes oder eines sprachumschaltbaren Textes aus der Gruppe "Benutzertexte"</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.TextAlign">
      <summary>Legt die horizontale Ausrichtung des Textes im Ausgabebereich fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.Visibility">
      <summary>Legt fest, wie die Sichtbarkeit des Textfeldes im Steuerelement gesteuert werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.TextRegion.Width">
      <summary>Gibt die Breite des 'TextRegion'-Objektes zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TextRegion.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TextRegion.Draw(System.Drawing.Graphics)">
      <summary>Zeichnet das Textfeld in das angegebene 'Graphics' Objekt</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TextRegion.DrawRegion(System.Drawing.Graphics,System.String,System.Boolean)">
      <summary>Führt das Zeichnen des Ausgabebereiches aus</summary>
      <param name="g">Objekt vom Typ 'System.Drawing.Graphics', in das hineingezeichnet werden soll</param>
      <param name="text">Text, der angezeigt werden soll</param>
      <param name="drawText">True: der angegebene Text wird gezeichnetFalse: der angegebene Text wird nicht gezeichnet</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TextRegion.OnEndInit">
      <summary>Nur intern verwendete Methode</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.TextRegion.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>in diesem Fall wird eine leere Zeichenkette zurückgegeben</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Printing.TextRegion.ViewChanged">
      <summary>Wird ausgelöst, wenn sich die Anzeige ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TextRegion', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Variable">
      <summary>Steuerelement zur Ausgabe eines Prozessvariablenwertes auf einem Druckerformular</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Variable.#ctor">
      <summary>Initialisiert eine neue Instanz der 'Variable'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.FontClass">
      <summary>Legt den Bezug zu einer Fontklasse aus der Sprachumschaltung fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.Format">
      <summary>Legt das Ein-/Ausgabeformat bei numerischen Prozesswerten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.Label">
      <summary>Legt das Aussehen des Bereiches fest, der die Variablenbeschreibung darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.RegionLayout">
      <summary>Legt die Position des Bereiches fest, der die Prozessvariablenbeschreibung enthält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.TextAlign">
      <summary>Legt die Position des Textes innerhalb des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.Unit">
      <summary>Legt das Aussehen des Bereiches fest, der den Einheitentext darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.UseItemText">
      <summary>Legt fest, ob der in der Prozessvariablendefinition festgelegte Text anstelle des im Steuerelement festgelegten Textes verwendet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.UseItemUnit">
      <summary>Legt fest, ob als Einheitentext der Text der aktiven Einheitenumrechnung angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Variable.VWItem">
      <summary>Anbindung an eine Prozessvariable</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Variable.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Variable.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.BorderStyles">
      <summary>Enthält die Rahmenstile für Druck-Steuerelemente</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.BorderStyles.Default">
      <summary>Rahmenstil der Vorgabe (Default-Eigenschaft) verwenden</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.BorderStyles.None">
      <summary>Kein Rahmen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.BorderStyles.Solid">
      <summary>Durchgezogene Linie als Rahmen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PageFormat">
      <summary>Enthält verschiedene Papierformate</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.PageFormat.A4">
      <summary>A4 (210 × 297 mm)
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.PageFormat.A5">
      <summary>A5 (148 × 210 mm)
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.PageFormat.Custom">
      <summary>Benutzerdefiniert. Die Papiergröße wird aus der Eigenschaft 'PageSettings.Size' ermittelt </summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.PageFormat.Legal">
      <summary>Legal (8,5 x 14 Inch)</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.PageFormat.Letter">
      <summary>letter (8,5 x 11 Inch)</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.PageOrientation">
      <summary>Enhält mögliche Papierausrichtungen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.PageOrientation.Landscape">
      <summary>Querformat</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Printing.PageOrientation.Portrait">
      <summary>Hochformat</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Alarm.AlarmTable">
      <summary>Steuerelement zum Ausdrucken der aktuell im System anstehenden Alarminformationen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTable.#ctor">
      <summary>Initialisiert eine neue Instanz der 'AlarmTable'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.AlarmTable.Alarms">
      <summary>Gibt eine Auflistung der vom Steuerelement erfassten anstehenden Alarme zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.AlarmTable.Columns">
      <summary>Legt die Spalten und damit die anzuzeigenden Alarminformationen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.AlarmTable.Filter">
      <summary>Legt einen Anzeigefilter für die Informationen in der Tabelle fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.AlarmTable.SortMode">
      <summary>Legt das Verhalten des Steuerelementes beim Auftreten neuer Alarme fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.AlarmTable.StateColoring">
      <summary>Legt fest, ob zur Darstellung der Alarmzustände die in den Alarmklassendefinitionen angegebenen Farben verwendet werden sollen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn">
      <summary>Kapselt die Informtionen einer Spalte im 'AlarmTable'-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
      <param name="sortable">Legt fest, ob das Sortieren nach den Spaltenwerten erlaubt ist</param>
      <param name="bVisible">Legt fest, ob die Spalte sichtbar ist</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Legt die Spaltenbreite fest</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties)">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean,System.String)">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
      <param name="sortable">Legt fest, ob das Sortieren nach den Spaltenwerten erlaubt ist</param>
      <param name="bVisible">Legt fest, ob die Spalte sichtbar ist</param>
      <param name="freeParam">Name eines freien Parameters aus der Konfiguration des Alarmsystems</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
      <param name="sortable">Legt fest, ob das Sortieren nach den Spaltenwerten erlaubt ist</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.AlarmProperties,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'AlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.AlarmProperty">
      <summary>Gibt den Typ der Alarminformation zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.FreeParam">
      <summary>Legt den Namen des freien Parameters fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.AlarmTableColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt den Typ der Spalte laut 'AlarmProperties'-Aufzählung zurück</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable">
      <summary>Steuerelement zum Ausdrucken der vom System aufgezeichneten Alarminformationen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.#ctor">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTable'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.Alarms">
      <summary>Gibt eine Auflistung der vom Steuerelement erfassten aufgezeichneten Alarme zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.Columns">
      <summary>Legt die Spalten und damit die anzuzeigenden Alarminformationen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.DefaultSortColumn">
      <summary>Legt den Index der Spalte fest, nach deren Inhalt die Daten sortiert werden sollen, wenn ein neues Abfrageergebnis dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.DefaultSortMode">
      <summary>Legt fest, wie Daten im Steuerelement sortiert werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.Filter">
      <summary>Legt den Filter für die anzuzeigenden Alarme fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.HistoricalFile">
      <summary>Filtert die angezeigten Informationen nach Dateiinhalten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.MaxFileTime">
      <summary>Gibt den Zeitstempel des letzten aufgezeichneten Alarms zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.MinFileTime">
      <summary>Gibt den Zeitstempel des ersten aufgezeichneten Alarms zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTable.StateColoring">
      <summary>Legt fest, ob zur Darstellung der Alarmzustände die in den Alarmklassendefinitionen angegebenen Farben verwendet werden sollen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn">
      <summary>Kapselt die Informtionen einer Spalte im 'HistoricalAlarmTable'-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="width">Legt die Spaltenbreite fest</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
      <param name="sortable">Legt fest, ob das Sortieren nach den Spaltenwerten erlaubt ist</param>
      <param name="bVisible">Legt fest, ob die Spalte sichtbar ist</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean,System.String)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
      <param name="sortable">Legt fest, ob das Sortieren nach den Spaltenwerten erlaubt ist</param>
      <param name="bVisible">Legt fest, ob die Spalte sichtbar ist</param>
      <param name="freeParam">Name eines freien Parameters aus der Konfiguration des Alarmsystems</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
      <param name="header">Legt den Text im Tabellenkopf fest</param>
      <param name="width">Legt die Spaltenbreite fest</param>
      <param name="alignment">Legt die Textausrichtung fest</param>
      <param name="sortable">Legt fest, ob das Sortieren nach den Spaltenwerten erlaubt ist</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.#ctor(VisiWinNET.Forms.Alarm.HistoricalAlarmProperties)">
      <summary>Initialisiert eine neue Instanz der 'HistoricalAlarmTableColumn'-Klasse.</summary>
      <param name="alarmProperty">Gibt die Alarminformation an, die durch die Klasse repräsentiert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.FreeParam">
      <summary>Legt den Namen des freien Parameters fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.HistoricalAlarmProperty">
      <summary>Gibt den Typ der Alarminformation zurück</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Alarm.HistoricalAlarmTableColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt den Typ der Spalte laut 'AlarmProperties'-Aufzählung zurück</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Recipe.RecipeTable">
      <summary>Steuerelement, das Datei- oder Werteinformationen zu einer Rezeptdefinition für einen Ausdruck zur Verfügung stellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Recipe.RecipeTable.#ctor">
      <summary>Initialisiert eine neue Instanz der 'RecipeTable'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTable.ClassName">
      <summary>Legt den Namen der Rezeptdefinition fest, deren Informationen (Dateien/Werte) im Steuerelement angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTable.Columns">
      <summary>Legt fest, welche Spalten im Steuerelement sichtbar sein sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTable.FileName">
      <summary>Gibt in der Werteansicht den Namen der geladenen Rezeptdatei zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTable.SortColumn">
      <summary>Legt den Index der Spalte fest, nach deren Inhalt die Daten sortiert werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTable.SortMode">
      <summary>Legt fest, wie Daten im Steuerelement sortiert werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTable.View">
      <summary>Legt fest, welche Ansicht im Steuerelement angezeigt werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn">
      <summary>Klasse, die eine Spalte in der ausdruckbaren Rezeptliste repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'RecipeTableColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
      <param name="name">Name der Spalte</param>
      <param name="header">Text, der im Spaltenkopf darzustellen ist</param>
      <param name="width">Breite der Spalte </param>
      <param name="alignment">Textausrichtung der in der Spalte dargestellten Feldinhalte</param>
      <param name="sortable">Der Inhalt der Liste soll nach den Feldinhalten dieser Spalte sortierbar sein</param>
      <param name="bVisible">True: Die Spalte soll sichtbar sein, ansonsten False</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties)">
      <summary>Initialisiert eine neue Instanz der 'RecipeTableColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'RecipeTableColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
      <param name="name">Name der Spalte</param>
      <param name="header">Text, der im Spaltenkopf darzustellen ist</param>
      <param name="width">Breite der Spalte </param>
      <param name="alignment">Textausrichtung der in der Spalte dargestellten Feldinhalte</param>
      <param name="sortable">Der Inhalt der Liste soll nach den Feldinhalten dieser Spalte sortierbar sein</param>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'RecipeTableColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'RecipeTableColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
      <param name="name">Name der Spalte</param>
      <param name="header">Text, der im Spaltenkopf darzustellen ist</param>
      <param name="width">Breite der Spalte </param>
      <param name="alignment">Textausrichtung der in der Spalte dargestellten Feldinhalte</param>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.Name">
      <summary>Gibt den Namen der Spalte zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.RecipeListProperty">
      <summary>Gibt zurück, welche Information in der Spalte dargestellt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Printing.Recipe.RecipeTableColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt den Typ der Spalte zurück</returns>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.ColorList">
      <summary>Komponente, die eine Liste von Farbwert-Variablenwert-Paaren für eine Eigenschaftenbindung zur Verfügung stellt.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.ColorList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ColorList'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.ColorList.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'ColorList'-Klasse.</summary>
      <param name="container">Containerobjekt, auf dem die Komponente liegen soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.ColorList.Colors">
      <summary>Beschreibt die Farbwert-Variablenwert-Paare als Liste von 'StateColor'-Objekten.
</summary>
    </member>
    <member name="E:VisiWinNET.Forms.PropertyBinding.ColorList.ColorsChanged">
      <summary>Wird ausgelöst, wenn sich der Inhalt der 'Colors'-Eigenschaft geändert hat </summary>
      <param name="sender">Angabe des Objektes vom Typ 'ColorList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs'</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.EnumList">
      <summary>Komponente, die eine Liste von Aufzählungswert-Variablenwert-Paaren für eine Eigenschaftenbindung zur Verfügung stellt.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.EnumList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'EnumList'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.EnumList.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'EnumList'-Klasse.</summary>
      <param name="container">Containerobjekt, auf dem die Komponente liegen soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.EnumList.EnumType">
      <summary>Gibt den Aufzählungstyp der Liste an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.EnumList.EnumTypeAssemblyName">
      <summary>Gibt das Assembly an, in dem die Enumeration deklariert ist.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.EnumList.EnumValues">
      <summary>Beschreibt die Aufzählungswert-Variablenwert-Paare als Liste von 'StateEnum'-Objekten.
</summary>
    </member>
    <member name="E:VisiWinNET.Forms.PropertyBinding.EnumList.EnumValuesChanged">
      <summary>Wird ausgelöst, wenn sich der Inhalt der 'EnumValues'-Eigenschaft geändert hat </summary>
      <param name="sender">Angabe des Objektes vom Typ 'EnumList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.ImageList">
      <summary>Komponente, die eine Liste von Grafik-Variablenwert-Paaren für eine Eigenschaftenbindung zur Verfügung stellt.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.ImageList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'ImageList'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.ImageList.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'ImageList'-Klasse.</summary>
      <param name="container">Containerobjekt, auf dem die Komponente liegen soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.ImageList.Images">
      <summary>Beschreibt die Grafiken-Variablenwert-Paare als Liste von 'StateImage'-Objekten.
</summary>
    </member>
    <member name="E:VisiWinNET.Forms.PropertyBinding.ImageList.ImagesChanged">
      <summary>Wird ausgelöst, wenn sich der Inhalt der 'Images'-Eigenschaft geändert hat </summary>
      <param name="sender">Angabe des Objektes vom Typ 'ImageList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.LinearConverter">
      <summary>Bestimmt eine Umrechnung eines Zahlenwertes über eine lineare Gleichung </summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.LinearConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der 'LinearConverter'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.LinearConverter.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'LinearConverter'-Klasse.</summary>
      <param name="container">Containerobjekt, auf dem die Komponente liegen soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.LinearConverter.FormulaFactor">
      <summary>Gibt die Steigung der Gleichung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.LinearConverter.FormulaOffset">
      <summary>Gibt den Offset der Gleichung zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.LinearConverter.ItemMaxValue">
      <summary>Gibt die obere Grenze für den Variablenwert an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.LinearConverter.ItemMinValue">
      <summary>Gibt die untere Grenze für den Variablenwert an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.LinearConverter.MaxValue">
      <summary>Gibt die obere Grenze für den Eigenschaftenwert an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.LinearConverter.MinValue">
      <summary>Gibt die untere Grenze für den Eigenschaftenwert an
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.LinearConverter.CalculateItemValue(System.Double)">
      <summary>Errechnet (invers) anhand des Ausgangswertes den Eingangswert der Umrechnung </summary>
      <returns>Der errechnete Eingangswert</returns>
      <param name="value">Ausgangswert</param>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.LinearConverter.CalculateValue(System.Double)">
      <summary>Errechnet anhand des Eingangswertes den Ausgangswert der Umrechnung </summary>
      <returns>Der errechnete Ausgangswert</returns>
      <param name="itemValue">Eingangswert</param>
    </member>
    <member name="E:VisiWinNET.Forms.PropertyBinding.LinearConverter.FormulaChanged">
      <summary>Wird ausgelöst, wenn die durch 'ItemMaxvalue/ ItemMinValue/ MaxValue/MinValue' bestimmte Umrechnung verändert wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'LinearConverter', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs'</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateColor">
      <summary>Beschreibt die Verknüpfung einer Farbe zu einem oder mehren Variablenwerten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateColor.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateColor'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateColor.Color">
      <summary>Legt die Farbe fest, die angezeigt werden soll, wenn der Variablenwert einem der in 'State' angegebenen Werten entspricht</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateColor.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Der Farbwert</returns>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateColorCollection">
      <summary>Liste von Farbwerten, die zu Variablenwerten zugeordnet sind</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateColorCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateColorCollection'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateColorCollection.GetColor(System.Long,System.Boolean)">
      <summary>Ermittelt die zum angegebenen Variablenwert zugehörige Farbe</summary>
      <returns>Die 'Color'-Eigenschaft des ersten Listenelementes, dessen 'Contains'-Methode 'true' zurückgibt und dessen 'Fault'-Eigenschaft mit dem übergebenen 'fault'-Parameter übereinstimmt.</returns>
      <param name="state">Zu suchender 'State'-Wert</param>
      <param name="fault">Zu suchender 'Fault'-Wert</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateEnum">
      <summary>Beschreibt die Verknüpfung eines Aufzählungswertes (Enum) zu einem oder mehren Variablenwerten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateEnum.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateEnum'-Klasse.
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateEnum.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der 'StateEnum'-Klasse.
</summary>
      <param name="enumType">Wert für die 'EnumType'-Eigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateEnum.EnumType">
      <summary>Gibt den Aufzählungstyp der Liste an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateEnum.EnumValue">
      <summary>Legt den Aufzählungswert fest, der einer Eigenschaft zugeordnet werden soll, wenn der Variablenwert einem der in 'State' angegebenen Werten entspricht
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateEnum.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Der Enumerationswert als Zeichenkette</returns>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateEnumCollection">
      <summary>Liste von Aufzählungswerten, die zu Variablenwerten zugeordnet sind</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateEnumCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateEnumCollection'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateEnumCollection.AssemblyName">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateEnumCollection.EnumType">
      <summary>Legt den vollen Typnamen der Aufzählung fest. deren Elemente in der Liste verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateEnumCollection.GetEnumValue(System.Long,System.Boolean)">
      <summary>Ermittelt den zum angegebenen Variablenwert zugehörigen Aufzählungswert</summary>
      <returns>Die 'EnumValue'-Eigenschaft des ersten Listenelementes, dessen 'Contains'-Methode 'true' zurückgibt und dessen 'Fault'-Eigenschaft mit dem übergebenen 'fault'-Parameter übereinstimmt.</returns>
      <param name="state">Zu suchender 'State'-Wert</param>
      <param name="fault">Zu suchender 'Fault'-Wert</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateImage">
      <summary>Beschreibt die Verknüpfung einer Grafik zu einem oder mehren Variablenwerten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateImage.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateImage'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateImage.Image">
      <summary>Legt die Grafik fest, die einer Eigenschaft zugeordnet werden soll, wenn der Variablenwert einem der in 'State' angegebenen Werten entspricht

</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateImageCollection">
      <summary>Liste von Grafiken, die zu Variablenwerten zugeordnet sind</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateImageCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateImageCollection'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateImageCollection.GetImage(System.Long,System.Boolean)">
      <summary>Ermittelt die zum angegebenen Variablenwert zugehörige Grafik</summary>
      <returns>Die 'Image'-Eigenschaft des ersten Listenelementes, dessen 'Contains'-Methode 'true' zurückgibt und dessen 'Fault'-Eigenschaft mit dem übergebenen 'fault'-Parameter übereinstimmt.</returns>
      <param name="state">Zu suchender 'State'-Wert</param>
      <param name="fault">Zu suchender 'Fault'-Wert</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateText">
      <summary>Beschreibt die Verknüpfung eines sprachumschaltbaren oder festen Textes zu einem oder mehren Variablenwerten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateText.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateText'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateText.LocalizedText">
      <summary>Legt den Namen eines Textes aus der Sprachumschaltung fest, der einer Eigenschaft zugeordnet werden soll, wenn der Variablenwert einem der in 'State' angegebenen Werten entspricht</summary>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.StateText.Text">
      <summary>Legt einen Text fest, der einer Eigenschaft zugeordnet werden soll, wenn der Variablenwert einem der in 'State' angegebenen Werten entspricht</summary>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.StateTextCollection">
      <summary>Liste von Texten, die zu Variablenwerten zugeordnet sind</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateTextCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der 'StateTextCollection'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.StateTextCollection.GetText(System.Long,System.Boolean)">
      <summary>Ermittelt den zum angegebenen Variablenwert zugehörigen Text</summary>
      <returns>Die 'Text'-Eigenschaft des ersten Listenelementes, dessen 'Contains'-Methode 'true' zurückgibt und dessen 'Fault'-Eigenschaft mit dem übergebenen 'fault'-Parameter übereinstimmt.</returns>
      <param name="state">Zu suchender 'State'-Wert</param>
      <param name="fault">Zu suchender 'Fault'-Wert</param>
    </member>
    <member name="T:VisiWinNET.Forms.PropertyBinding.TextList">
      <summary>Komponente, die eine Liste von Text-Variablenwert-Paaren für eine Eigenschaftenbindung zur Verfügung stellt.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.TextList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TextList'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.PropertyBinding.TextList.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'TextList'-Klasse.</summary>
      <param name="container">Containerobjekt, auf dem die Komponente liegen soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.PropertyBinding.TextList.Texts">
      <summary>Beschreibt die Text-Variablenwert-Paare als Liste von 'StateText'-Objekten.
</summary>
    </member>
    <member name="E:VisiWinNET.Forms.PropertyBinding.TextList.TextsChanged">
      <summary>Wird ausgelöst, wenn sich der Inhalt der 'Texts'-Eigenschaft geändert hat </summary>
      <param name="sender">Angabe des Objektes vom Typ 'TextList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Recipe.RecipeClassHandler">
      <summary>Komponente, die die Steuerung von Rezepten in der Applikation erlaubt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.#ctor">
      <summary>Initialisiert eine neue Instanz der 'RecipeClassHandler'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.#ctor(System.ComponentModel.IContainer)">
      <summary>Initialisiert eine neue Instanz der 'RecipeClassHandler'-Klasse.</summary>
      <param name="container">Angabe des Containers, auf dem die Komponente platziert werden soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.Events">
      <summary>Verknüpft Steuerelementeereignisse mit Funktionen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.FontClassButtons">
      <summary>Legt die Fontklassendefinition für die Schaltflächen der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.FontClassCaptions">
      <summary>Legt die Fontklassendefinition für die Titelzeile der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.FontClassInputs">
      <summary>Legt die Fontklassendefinition für die Eingabeelemente der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.FontClassLabels">
      <summary>Legt die Fontklassendefinition für die Beschriftungen der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.MinHeightButtons">
      <summary>Legt die minimale Höhe der Schaltflächen auf den Dialogen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.MinHeightInputs">
      <summary>Legt die minimale Höhe der Eingabeelemente auf den Dialogen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.RecipeClass">
      <summary>Legt den Namen der Rezeptdefinition fest, das durch die Komponente angesteuert werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.RecipeFile">
      <summary>Legt Eigenschaften für die Rezeptdateien fest, die über die Komponente gelesen oder geschrieben werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.RecipeLoadDialog">
      <summary>Legt Einstellungen für den Dialog "Rezept laden" fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.RecipeSaveDialog">
      <summary>Legt Einstellungen für den Dialog "Rezept speichern" fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeClassHandler.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Delete">
      <summary>Löscht die zuletzt geladene Rezeptdatei</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Delete(System.String,System.Boolean)">
      <summary>Löscht die angegebene Rezeptdatei</summary>
      <param name="fileName">Name der zu löschenden Datei</param>
      <param name="confirmDelete">True: Eine Meldefenster wird vor dem Löschen gezeigt, dass den benutzer zur Bestätigung des Löschens auffordertFalse: Die Datei wird ohne Rückmeldung gelöscht</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Get">
      <summary>Lädt die Werte der Rezeptelemente der aktuell eingestellten Rezeptklasse aus dem Prozess in den Rezeptpuffer</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.GetRecipeClassObject">
      <summary>Gibt das aktuell mit der Komponente verbundene 'RecipeClass'-Objekt zurück</summary>
      <returns>Objekt vom Typ 'RecipeClass', das in der 'RecipeClass'-Eigenschaft über den Namen angegeben wurde</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Load">
      <summary>Lädt die Rezeptwerte aus der über die Eigenschaft 'RecipeFile' angegebenen Datei in den Rezeptpuffer</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Load(System.String,System.Boolean)">
      <summary>Lädt die Rezeptwerte aus der im Parameter 'fileName' angegebenen Datei in den Rezeptpuffer</summary>
      <param name="fileName">Name der Rezeptdatei</param>
      <param name="normalized">Rezeptwerte können absolut oder relativ interpretiert werden. Bei der absoluten Interpretation werden die Werte direkt mit dem VWOPC-Kernel ausgetauscht. Die relative Interpretation ermöglicht über den Normfaktor und die Sollfaktorvariable die Umrechnung bezogen auf eine "Normmenge". Wird in der Anwendung nur mit absoluten Rezeptwerten gearbeitet, muss der Parameter immer auf False stehen. True: Die Rezeptwerte werden als relative Werte aus dem Rezept in den Rezeptpuffer geladen. Es erfolgt keine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen. Die relativen Rezeptwerte sollten nur zur Bearbeitung des Rezeptes geladen werden, und dürfen nicht in den Prozess übertragen werden. False: Die Rezeptwerte werden als absolute Werte aus dem Rezept in den Rezeptpuffer geladen. Es erfolgt eine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen. Die absoluten Rezeptwerte dürfen nicht zur Bearbeitung des Rezeptes geladen werden. Sie sollten nur zur Übertragung in den Prozess geladen werden.Wird 'normalized' nicht im Funktionsaufruf verwendet, werden die Werte absolut übertragen.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Save">
      <summary>Speichert die Rezeptwerte als Datei. Der Dateiname wird durch die 'RecipeFile'-Eigenschaft vorgegeben</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Save(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Speichert die Rezeptwerte als Datei. Der Dateiname wird durch den 'fileName'-Parameter vorgegeben</summary>
      <param name="fileName">Name der Rezeptdatei. Die Angabe muss dabei ohne Dateiendung und Pfad erfolgen. </param>
      <param name="description">Beschreibung der Rezeptdatei</param>
      <param name="confirmOverwrite">True: Eine Meldefenster wird angezeigt, wenn die angegebene Datei bereits existiert. Hier muss der Benutzer das Überschreiben bestätigen.False: Die Datei wird ohne Rückmeldung überschrieben</param>
      <param name="normalized">Rezeptwerte können absolut oder relativ interpretiert werden. Bei der absoluten Interpretation werden die Werte direkt mit dem VWOPC-Kernel ausgetauscht. Die relative Interpretation ermöglicht über den Normfaktor und die Sollfaktorvariable die Umrechnung bezogen auf eine "Normmenge". Wird in der Anwendung nur mit absoluten Rezeptwerten gearbeitet, muss der Parameter immer auf False stehen. True:Die aktuellen Rezeptwerte des Rezeptpuffers werden als relative Werte interpretiert. Es erfolgt beim Speichern der Werte keine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen. False:Die aktuellen Rezeptwerte des Rezeptpuffers werden als absolute Werte interpretiert. Es erfolgt beim Speichern der Werte eine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.Set">
      <summary>Schreibt die aktuellen Werte des Rezeptpuffers in den Prozess</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.ShowLoadRecipeDialog">
      <summary>Ruft einen Auswahldialog auf und lädt die gewählte Rezeptdatei in den Rezeptpuffer</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.ShowSaveRecipeDialog">
      <summary>Ruft eine Dialog zum Festlegen eines Rezeptdateinamens auf und speichert die Rezeptdaten unter dem hier vorgegebenen Namen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.StartEdit">
      <summary>Versetzt alle Item-Objekte, deren Eigenschaft 'RecipeMember' auf 'True' steht und deren Prozesswert als Element des Rezeptes definiert sind, in den Rezeptmodus</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeClassHandler.StopEdit">
      <summary>Beendet den durch die Methode 'StartEdit' gestarteten Rezeptmodus der Itemobjekte</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.FileDeleted">
      <summary>Wird ausgelöst, nachdem eine Rezeptdatei gelöscht wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.GetDoneFailed">
      <summary>Wird ausgelöst, wenn beim Aufruf der 'Get'-Methode ein Fehler aufgetreten ist</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.GetDoneSucceeded">
      <summary>Wird ausgelöst, wenn die 'Get'-Methode erfolgreich abgeschlossen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.LoadDoneFailed">
      <summary>Wird ausgelöst, wenn beim Aufruf der 'Load'-Methode ein Fehler aufgetreten ist</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.LoadDoneSucceeded">
      <summary>Wird ausgelöst, wenn die 'Load'-Methode erfolgreich abgeschlossen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.RecipeClassChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der Eigenschaft 'RecipeClass' geändert hat.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.SaveDoneFailed">
      <summary>Wird ausgelöst, wenn beim Aufruf der 'Save'-Methode ein Fehler aufgetreten ist</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.SaveDoneSucceeded">
      <summary>Wird ausgelöst, wenn die 'Save'-Methode erfolgreich abgeschlossen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.SaveExceededMaxFiles">
      <summary>Signalisiert die Überschreitung der maximalen Anzahl von Dateien zu einem Rezept</summary>
      <param name="sender">Objekt vom Typ 'ReipeClassHandler', das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'EventArgs'</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.SetDoneFailed">
      <summary>Wird ausgelöst, wenn beim Aufruf der 'Set'-Methode ein Fehler aufgetreten ist</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeClassHandler.SetDoneSucceeded">
      <summary>Wird ausgelöst, wenn die 'Set'-Methode erfolgreich abgeschlossen wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeClassHandler', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Recipe.RecipeFileProperties">
      <summary>Kapselt die Parameter der Funktionen einer 'RecipeClassHandler'-Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeFileProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der 'RecipeFileProperties'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeFileProperties.ConfirmDelete">
      <summary>Legt fest, ob vor dem Löschen einer Rezeptdatei eine Benutzerbestätigung erfolgen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeFileProperties.ConfirmOverwrite">
      <summary>Legt fest, ob vor dem Überschreiben einer Rezeptdatei eine Benutzerbestätigung erfolgen soll
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeFileProperties.FileDescription">
      <summary>Legt einen beschreibenden Text für die Rezeptdatei fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeFileProperties.FileName">
      <summary>Legt den Rezeptdateinamen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeFileProperties.Normalized">
      <summary>Legt fest, ob die Werte absolut oder relativ interpretiert werden</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeFileProperties.ConfirmDeleteChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der Eigenschaft 'ConfirmDelete' ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeFileProperties', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeFileProperties.ConfirmOverwriteChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der Eigenschaft 'ConfirmOverwrite' ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeFileProperties', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeFileProperties.FileDescriptionChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der Eigenschaft 'FileDescription' ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeFileProperties', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeFileProperties.FileNameChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der Eigenschaft 'FileName' ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeFileProperties', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeFileProperties.NormalizedChanged">
      <summary>Wird ausgelöst, wenn sich der Wert der Eigenschaft 'Normalized' ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeFileProperties', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Recipe.RecipeList">
      <summary>Steuerelement, das Datei- oder Werteinformationen zu einer Rezeptdefinition in Form einer Tabelle darstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'RecipeList'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.AutoUpdate">
      <summary>Legt fest, ob Änderungen am Rezeptpuffer durch Transferfunktionen (Load/Get) anderer Objekte der Inhalt des Steuerelementes automatisch aktualisiert werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.ClassName">
      <summary>Legt den Namen der Rezeptdefinition fest, deren Informationen (Dateien/Werte) im Steuerelement angezeigt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.Columns">
      <summary>Legt fest, welche Spalten im Steuerelement sichtbar sein sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.DefaultSortColumn">
      <summary>Legt den Index der Spalte fest, nach deren Inhalt die Daten sortiert werden sollen, wenn ein neues Abfrageergebnis dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.DefaultSortMode">
      <summary>Legt fest, wie Daten im Steuerelement sortiert werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.EditMode">
      <summary>Legt fest, wie der Editiermodus im Wertefeld gestartet wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.FileName">
      <summary>Gibt in der Werteansicht den Namen der geladenen Rezeptdatei zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.Format">
      <summary>Legt das Ein-/Ausgabeformat bei numerischen Prozesswerten fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.LimitCheck">
      <summary>Legt fest, ob und wie eine Eingabebereichsbegrenzung durchgeführt wird. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.ReadOnly">
      <summary>Legt fest, ob im Steuerelement Rezeptwerte bearbeitet werden können</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.RecipeClass">
      <summary>Gibt das Objekt zurück, das die Eigenschaften der in 'ClassName' angegebenen Rezeptdefinition kapselt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.RecipeClassHandler">
      <summary>Stellt den Bezug zu einer 'RecipeClassHandler'-Komponente her, die den Inhalt des der Liste steuert</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.SelectedRecipeFile">
      <summary>Gibt ein Objekt zurück, das den Zugriff auf die im Steuerelement selektierte Rezeptdatei ermöglicht</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.UseTouchKeyboard">
      <summary>Legt fest, ob für das Steuerelement die Bildschirmtastatur zur Verfügung stehen soll.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeList.View">
      <summary>Legt fest, welche Ansicht im Steuerelement angezeigt werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.AttachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.DetachItems">
      <summary>Meldet alle enthaltenen Variablenbindungen beim Variablenkern ab</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.GetRecipe">
      <summary>Überträgt die Werte der Rezeptelemente der aktuell eingestellten Rezeptklasse aus dem Prozess in den Rezeptpuffer</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.LoadRecipe(System.String,System.Boolean)">
      <summary>Startet das Laden der Rezeptelementewerte des aktuell eingestellten Rezeptes aus der im Parameter 'fileName' angegebenen Rezeptdatei in den Rezeptpuffer</summary>
      <param name="fileName">Name der Rezeptdatei</param>
      <param name="normalized">Rezeptwerte können absolut oder relativ interpretiert werden. Bei der absoluten Interpretation werden die Werte direkt mit dem VWOPC-Kernel ausgetauscht. Die relative Interpretation ermöglicht über den Normfaktor und die Sollfaktorvariable die Umrechnung bezogen auf eine "Normmenge". Wird in der Anwendung nur mit absoluten Rezeptwerten gearbeitet, muss der Parameter immer auf False stehen. True: Die Rezeptwerte werden als relative Werte aus dem Rezept in den Rezeptpuffer geladen. Es erfolgt keine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen. Die relativen Rezeptwerte sollten nur zur Bearbeitung des Rezeptes geladen werden, und dürfen nicht in den Prozess übertragen werden. False: Die Rezeptwerte werden als absolute Werte aus dem Rezept in den Rezeptpuffer geladen. Es erfolgt eine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen. Die absoluten Rezeptwerte dürfen nicht zur Bearbeitung des Rezeptes geladen werden. Sie sollten nur zur Übertragung in den Prozess geladen werden.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.SaveRecipe(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Speichert die aktuellen Werte des Rezeptpuffers in die im Parameter 'fileName' angegebene Rezeptdatei</summary>
      <param name="fileName">Name der Rezeptdatei. Die Angabe muss dabei ohne Dateiendung und Pfad erfolgen. </param>
      <param name="description">Beschreibung der Rezeptdatei</param>
      <param name="forceOverwrite">True: Falls die im Parameter 'ileName' angegebene Rezeptdatei bereits existiert, werden die Werte in dieser Datei überschrieben. False: Falls die im Parameter 'FileName' angegebene Rezeptdatei bereits existiert, werden die Werte in dieser Datei nicht überschrieben. Die alten Werte der Datei bleiben erhalten. Die aktuellen Werte aus dem Rezeptpuffer werden nicht gespeichert.</param>
      <param name="normalized">Rezeptwerte können absolut oder relativ interpretiert werden. Bei der absoluten Interpretation werden die Werte direkt mit dem VWOPC-Kernel ausgetauscht. Die relative Interpretation ermöglicht über den Normfaktor und die Sollfaktorvariable die Umrechnung bezogen auf eine "Normmenge". Wird in der Anwendung nur mit absoluten Rezeptwerten gearbeitet, muss der Parameter immer auf False stehen. True:Die aktuellen Rezeptwerte des Rezeptpuffers werden als relative Werte interpretiert. Es erfolgt beim Speichern der Werte keine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen. False:Die aktuellen Rezeptwerte des Rezeptpuffers werden als absolute Werte interpretiert. Es erfolgt beim Speichern der Werte eine automatische Umrechnung anhand des Normfaktors und der Sollfaktorvariablen.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.SetRecipe">
      <summary>Schreibt die aktuellen Werte des Rezeptpuffers in den Prozess</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeList.UpdateFileView">
      <summary>Startet das Einlesen der Dateiinformationen</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeList.GetDone">
      <summary>Wird ausgelöst, nachdem die Rezeptwerte des Rezepts über die Methode 'Get' in den Rezeptpuffer geladen wurden</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'GetRecipeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeList.LoadDone">
      <summary>Wird ausgelöst, nachdem die Rezeptwerte des Rezepts über die Methode 'Load' aus der Datei in den Rezeptpuffer geladen wurden</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'LoadRecipeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeList.SaveDone">
      <summary>Wird ausgelöst, nachdem die aktuellen Rezeptwerte des Rezeptpuffers über die Methode 'Save' in einer Rezeptdatei gespeichert wurden</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'SaveRecipeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeList.SetDone">
      <summary>Wird ausgelöst, nachdem die aktuellen Werte des Rezeptpuffers über die Methode 'Set' in den Prozess geschrieben wurden</summary>
      <param name="sender">Angabe des Objektes vom Typ 'RecipeList', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'SetRecipeEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Recipe.RecipeList.ViewUpdated">
      <summary>Wird ausgelöst, wenn Änderungen an den Rezeptwerten durch andere Quellen (siehe Eigenschaft 'AutoUpdate') an das Steuerelement weitergereicht wurden.
</summary>
      <param name="sender">Objekt, das das Ereignis auslöst.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Recipe.RecipeListColumn">
      <summary>Klasse, die eine Spalte in der Rezeptliste repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'RecipeListColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
      <param name="name">Name der Spalte</param>
      <param name="header">Text, der im Spaltenkopf darzustellen ist</param>
      <param name="width">Breite der Spalte </param>
      <param name="alignment">Textausrichtung der in der Spalte dargestellten Feldinhalte</param>
      <param name="sortable">Der Inhalt der Liste soll nach den Feldinhalten dieser Spalte sortierbar sein</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties)">
      <summary>Initialisiert eine neue Instanz der 'RecipeListColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'RecipeListColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
      <param name="name">Name der Spalte</param>
      <param name="header">Text, der im Spaltenkopf darzustellen ist</param>
      <param name="width">Breite der Spalte </param>
      <param name="alignment">Textausrichtung der in der Spalte dargestellten Feldinhalte</param>
      <param name="sortable">Der Inhalt der Liste soll nach den Feldinhalten dieser Spalte sortierbar sein</param>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'RecipeListColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.#ctor(VisiWinNET.Forms.Recipe.RecipeListProperties,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'RecipeListColumn'-Klasse.</summary>
      <param name="property">Angabe der Information, die in der Spalte angezeigt werden soll</param>
      <param name="name">Name der Spalte</param>
      <param name="header">Text, der im Spaltenkopf darzustellen ist</param>
      <param name="width">Breite der Spalte </param>
      <param name="alignment">Textausrichtung der in der Spalte dargestellten Feldinhalte</param>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeListColumn.HeaderText">
      <summary>Legt den festen, nicht sprachumschaltbaren Text im Spaltenkopf fest, wenn keine Angaben in 'LocalizedHederText' vorgenommen werden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeListColumn.LocalizedHeaderText">
      <summary>Legt den Bezeichner für einen Text aus der Sprachumschaltung fest, der im Spaltenkopf dargestellt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeListColumn.Name">
      <summary>Gibt den Namen der Spalte zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Recipe.RecipeListColumn.RecipeListProperty">
      <summary>Gibt zurück, welche Information in der Spalte dargestellt wird</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Recipe.RecipeListColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt den Typ der Spalte zurück</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Recipe.RecipeListEditMode">
      <summary>Beinhaltet die möglichen Einstellungen zum Starten des Ediermodus in einer Rezeptliste.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListEditMode.ClickOnRow">
      <summary>Beim Klicken auf eine Zeile wechselt das Wertefeld der Zeile in den Editiermodus.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListEditMode.ClickOnSelectedRow">
      <summary>Beim Klicken auf die markierte Zeile wechselt das Wertefeld der Zeile in den Editiermodus.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListEditMode.ClickOnValueCell">
      <summary>Beim Klicken auf das Wertefeld einer Zeile wechselt es in den Editiermodus.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Recipe.RecipeListProperties">
      <summary>Aufzählung, die die möglichen Spalteninformationen in der Anzeige eines 'RecipeList'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.FileChangedAt">
      <summary>Änderungsdatum der Rezeptdateien</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.FileChangedBy">
      <summary>Name des Benutzers, der die Datei geändert hat</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.FileChangesCount">
      <summary>Anzahl der Dateiänderungen, Revisionen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.FileDescription">
      <summary>Beschreibung der Datei</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.FileName">
      <summary>Dateiname</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.FileNotesCount">
      <summary>Anzahl der Notizen, die in der Datei gespeichert sind</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.ItemAlias">
      <summary>Alias der Prozessvariablen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.ItemDefaultValue">
      <summary>Wert des Parameters "Vorgabewert" der Prozessvariablen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.ItemMaxValue">
      <summary>Wert des Parameters "Maximalwert" der Prozessvariablen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.ItemMinValue">
      <summary>Wert des Parameters "Minimalwert" der Prozessvariablen
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.ItemText">
      <summary>Wert des Parameters "Text" der Prozessvariablen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.ItemUnit">
      <summary>Einheitentexte der Prozessvariablen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.ItemValue">
      <summary>Werte der Prozessvariablen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListProperties.None">
      <summary>Keine Information</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Recipe.RecipeListViews">
      <summary>Aufzählung, die die möglichen Anzeigen eines 'RecipeList'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListViews.Files">
      <summary>Das Steuerelement listet alle Rezeptdateien der genannten Rezeptdefinition auf</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListViews.Items">
      <summary>Das Steuerelement listet die Informationen der als Rezeptelemente definierten Prozessvariablen auf</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Recipe.RecipeListViews.None">
      <summary>Es wird keine spezielle Ansicht im Steuerelement festgelegt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.Curve">
      <summary>Klasse, die die Basisfunktionalität einer Trendkurve beinhaltet</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.Curve.#ctor">
      <summary>Erzeugt eine neue Instanz der 'Curve'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.Curve.LineColor">
      <summary>Legt die Farbe der Trendkurve fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.Curve.LineStyle">
      <summary>Legt die Linienart der Kurve fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.Curve.LineWidth">
      <summary>Legt die Linienbreite der Trendkurve fest</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.Curve.ViewChanged">
      <summary>Wird ausgelöst, wenn die Änderung einer Eigenschaft das Neuzeichnen der Kurve verlangt</summary>
      <param name="sender">Angabe des Objektes vom Typ 'Curve', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.CurvesRequestedTrendDataEventArgs">
      <summary>Stellt Daten für das 'CurvesRequestedTrendData'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.CurvesRequestedTrendDataEventArgs.#ctor(VisiWinNET.Forms.Trend.RequestedTrendDataState)">
      <summary>Initialisiert eine neue Instanz der 'CurvesRequestedTrendDataEventArgs'-Klasse.</summary>
      <param name="requestedTrendDataState">Wert für die 'State'-Eigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.CurvesRequestedTrendDataEventArgs.State">
      <summary>Gibt den Status der Datenabfrage zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.MarkerPoint">
      <summary>Klasse, die im TrendChart-Steuerelement den Schnittpunkt einer Trendkurve mit der vertikalen Markierungslinie beschreibt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.MarkerPoint.#ctor(VisiWinNET.Forms.Trend.TrendCurve)">
      <summary>Initialisiert eine neue Instanz der 'MarkerPoint'-Klasse unter Angabe eines TrendCurve-Objektes.
</summary>
      <param name="curve">Angabe eines 'TrendCurve'-Objektes, mit dem die Markierungslinie den Schnittpunkt bildet</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.MarkerPoint.#ctor(VisiWinNET.Forms.Trend.TrendCurve,System.Double)">
      <summary>Initialisiert eine neue Instanz der 'MarkerPoint'-Klasse unter Angabe eines TrendCurve-Objektes und des Schnittpunktwertes.
</summary>
      <param name="curve">Angabe eines 'TrendCurve'-Objektes, mit dem die Markierungslinie den Schnittpunkt bildet</param>
      <param name="val">Angabe des y-Schnittpunktwertes</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.MarkerPoint.#ctor(VisiWinNET.Forms.Trend.TrendCurve,System.Double,System.Double,System.Double,System.String)">
      <summary>Initialisiert eine neue Instanz der 'MarkerPoint'-Klasse unter Angabe eines TrendCurve-Objektes, des Schnittpunktwertes, des Variablenrohwertes, des über eine Einheitenklasse umgerechneten Wertes und der formatierten Wertausgabe.
</summary>
      <param name="curve">Angabe eines 'TrendCurve'-Objektes, mit dem die Markierungslinie den Schnittpunkt bildet</param>
      <param name="value">Angabe des y-Schnittpunktwertes</param>
      <param name="rawValue">Angabe des Rohwertes der Prozessvalriablen</param>
      <param name="calculatedValue">Angabe des über die Einheitenklasse umgerechneten Wertes der Prozessvariablen</param>
      <param name="formattedValue">Angabe des über Einheitenklasse und DecPoint umgerechneten Wertes der Prozessvariablen</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.MarkerPoint.CalculatedValue">
      <summary>Gibt den umgerechneten Wert unter der Markierungslinie zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.MarkerPoint.Curve">
      <summary>Gibt das 'Curves'-Objekt der Trendkurve zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.MarkerPoint.FormattedValue">
      <summary>Gibt den umgerechneten Wert unter der Markierungslinie als String zurück, wobei die Einstellung DecPoint im 'TrendScale'-Objekt zusätzlich berücksichtigt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.MarkerPoint.RawValue">
      <summary>Gibt den Wert unter unter der Markierungslinie ohne Berücksichtigung der "Einheitenklasse (Anzeige)" zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.MarkerPoint.Valid">
      <summary>Gibt zurück, ob ein realer Trendwert unter der Markierungslinie liegt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.MarkerPoint.Value">
      <summary>Diese Eigenschaft ist obsolet. Verwenden Sie stattdessen 'RawValue', 'CalculatedValue' oder 'FormattedValue'</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.MarkerPoint.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Fasst die Eigenschaften 'Value' und 'Time' zusammen, z.B.: "|Value: 48 |Time: 12.12.2003 15:15:20:375 |"</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendChart">
      <summary>Steuerelement, dass den zeitlichen Verlauf von Trendwerten als Diagramm darstellt
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendChart.#ctor">
      <summary>Erzeugt eine neue Instanz der 'TrendChart'-Klasse.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.Curves">
      <summary>Legt die anzuzeigenden Trendkurven fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.Grid">
      <summary>Legt die Farben für die Skalierungslinien im Diagramm fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.Marker">
      <summary>Legt die Einstellungen für die vertikale Markierungslinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.Notes">
      <summary>Legt fest, wie Archivnotizen im Steuerelement wiedergegeben werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.PlotArea">
      <summary>Legt das Aussehen der Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.ScaleDragAndDropEnabled">
      <summary>Legt fest, ob die Kurvenskalen zur Laufzeit über Mausbedienung bewegt werden können</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.ScaleLayout">
      <summary>Legt das Verhalten der Kurvenskalen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.SuspendUpdate">
      <summary>Legt fest, ob nach dem Ändern eines Eigenschaftenwertes Trendwerte neu gelesen werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.TimeScale">
      <summary>Legt die Parameter für die Zeitachse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.TransferMode">
      <summary>Legt fest, wie Trenddaten bei der Initialisierung oder bei einer Rückansicht gelesen werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendChart.ZoomMode">
      <summary>Legt fest, wie der Benutzer im Steuerelement einen Bereich vergrößern kann</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendChart.CaptureResolution">
      <summary>Puffert die aktuellen Ansichtenparameter zur Wiederherstellung einer Ansicht</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendChart.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendChart.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendChart.ResetResolution">
      <summary>Stellt die über 'CaptureResolution' gepufferte Ansicht wieder her</summary>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.CurvesRequestedTrendData">
      <summary>Wird ausgelöst, wenn intern im Steuerelement eine asynchrone Abfrage auf Daten gestartet oder beendet wurde</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'CurvesRequestedTrendDataEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.FileChanged">
      <summary>Tritt auf, wenn sich die Eigenschaft 'FileName' eines 'TrendCurve'-Objektes ändert, das im 'TrendChart'-Objekt verwendet wird.</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendCurve', in dem die 'FileName'-Eigenschaft geändert wurde.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.MarkerPointsChanged">
      <summary>Wird ausgelöst, wenn die Markierungslinie bewegt wird oder die Kurven sich unter der Markierungslinie verschieben</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt des Typs 'TrendMarkerPointsChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.OnlineChanged">
      <summary>Wird ausgelöst, wenn zwischen der aktuellen und der aufgezeichneten Ansicht umgeschaltet wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.SliderScroll">
      <summary>Wird ausgelöst, wenn der Schieberegler für die Markierungslinie bewegt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'SliderScrollEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.TimeChanged">
      <summary>Tritt auf, wenn sich die Einstellungen der Zeitachse in der rückblickenden Ansicht geändert haben</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.TrendCurvePropertyChanged">
      <summary>Wird ausgelöst, wenn sich die Eigenschaft eines 'TrendCurve'-Objektes aus der 'Curves'-Auflistung ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.TrendNoteMouseDown">
      <summary>Wird ausgelöst, wenn mit der Maus auf eine im 'trendChart' dargestellte Notiz geklickt wird</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'TrendNoteMouseDownEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendChart.TrendTimeScalePropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im 'TrendTimeScale'-Objekt (Eigenschaft 'TimeScale') ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendChart', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'EventArgs', das keine weiteren Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendCurve">
      <summary>Klasse, die eine Trendkurve im 'TrendChart'-Steuerelement repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurve.#ctor(VisiWinNET.Forms.Trend.TrendCurve)">
      <summary>Erzeugt eine neue Instanz der 'TrendCurve'-Klasse als Kopie der als rCurve angegebenen Kurve.</summary>
      <param name="rCurve">Objekt vom Typ 'TrendCurve', dessen Eigenschaftenwerte in das neu erzeugte Objekt kopiert werden</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurve.#ctor">
      <summary>Erzeugt eine neue Instanz der 'TrendCurve'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurve.#ctor(System.Double,System.Double,VisiWinNET.Forms.Trend.TrendCurveStyles,System.Int32,VisiWinNET.Forms.Trend.CurveLineStyles,System.Drawing.Color,System.String,System.String,System.String,VisiWinNET.Forms.Trend.TrendScale)">
      <summary>Erzeugt eine neue Instanz der 'TrendCurve'-Klasse.</summary>
      <param name="minValue">Wert für die Eigenschaft 'MinValue'</param>
      <param name="maxValue">Wert für die Eigenschaft 'MaxValue'</param>
      <param name="style">Wert für die Eigenschaft 'Style'</param>
      <param name="lineWidth">Wert für die Eigenschaft 'LineWidth'</param>
      <param name="lineStyle">Wert für die Eigenschaft 'LineStyle'</param>
      <param name="lineColor">Wert für die Eigenschaft 'LineColor'</param>
      <param name="archiveName">Wert für die Eigenschaft 'Archive'</param>
      <param name="trendName">Wert für die Eigenschaft 'Trend'</param>
      <param name="fileName">Wert für die Eigenschaft 'FileName'</param>
      <param name="scale">Wert für die Eigenschaft 'Scale'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurve.#ctor(System.Double,System.Double,VisiWinNET.Forms.Trend.TrendCurveStyles,System.Int32,VisiWinNET.Forms.Trend.CurveLineStyles,System.Drawing.Color,System.String,System.String,System.String,VisiWinNET.Forms.Trend.TrendScale,VisiWinNET.Forms.PropertyBindingCollection)">
      <summary>Erzeugt eine neue Instanz der 'TrendCurve'-Klasse.</summary>
      <param name="minValue">Wert für die Eigenschaft 'MinValue'</param>
      <param name="maxValue">Wert für die Eigenschaft 'MaxValue'</param>
      <param name="style">Wert für die Eigenschaft 'Style'</param>
      <param name="lineWidth">Wert für die Eigenschaft 'LineWidth'</param>
      <param name="lineStyle">Wert für die Eigenschaft 'LineStyle'</param>
      <param name="lineColor">Wert für die Eigenschaft 'LineColor'</param>
      <param name="archiveName">Wert für die Eigenschaft 'Archive'</param>
      <param name="trendName">Wert für die Eigenschaft 'Trend'</param>
      <param name="fileName">Wert für die Eigenschaft 'FileName'</param>
      <param name="scale">Wert für die Eigenschaft 'Scale'</param>
      <param name="bindings">Objekt vom Typ 'PropertyBindingsCollection', das die Eigenschaftenbindungen enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurve.#ctor(System.Double,System.Double,VisiWinNET.Forms.Trend.TrendCurveStyles,System.Int32,VisiWinNET.Forms.Trend.CurveLineStyles,System.Drawing.Color,System.String,System.String,System.String,VisiWinNET.Forms.Trend.TrendScale,VisiWinNET.Forms.PropertyBindingCollection,System.Boolean)">
      <summary>Erzeugt eine neue Instanz der 'TrendCurve'-Klasse.</summary>
      <param name="minValue">Wert für die Eigenschaft 'MinValue'</param>
      <param name="maxValue">Wert für die Eigenschaft 'MaxValue'</param>
      <param name="style">Wert für die Eigenschaft 'Style'</param>
      <param name="lineWidth">Wert für die Eigenschaft 'LineWidth'</param>
      <param name="lineStyle">Wert für die Eigenschaft 'LineStyle'</param>
      <param name="lineColor">Wert für die Eigenschaft 'LineColor'</param>
      <param name="archiveName">Wert für die Eigenschaft 'Archive'</param>
      <param name="trendName">Wert für die Eigenschaft 'Trend'</param>
      <param name="fileName">Wert für die Eigenschaft 'FileName'</param>
      <param name="scale">Wert für die Eigenschaft 'Scale'</param>
      <param name="bindings">Objekt vom Typ 'PropertyBindingsCollection', das die Eigenschaftenbindungen enthält.</param>
      <param name="unitConversion">Wert für die 'UnitConversion' Eigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.Archive">
      <summary>Legt den Namen der Archivdefinition fest, aus der die darzustellende Trendkurve stammt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.CalculatedMaxValue">
      <summary>Legt den umgerechneten Wert fest, der maximal im Trendiagramm dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.CalculatedMinValue">
      <summary>Legt den umgerechneten Wert fest, der minimal im Trendiagramm dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.FileName">
      <summary>Legt einen Dateinamen für die Abfrage von Daten fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.LineColor">
      <summary>Legt die Farbe der Kurve fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.MaxValue">
      <summary>Legt den Wert fest, der maximal im Trenddiagramm dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.MinValue">
      <summary>Legt den Wert fest, der minimal im Trenddiagramm dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.Scale">
      <summary>Legt das Aussehen der Werteskala zur Kurve fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.Style">
      <summary>Legt fest, wie die Kurve ausgegeben wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.Trend">
      <summary>Legt den Namen der Trenddefinition fest, deren Werte durch die Kurve dargestellt werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurve.UnitConversion">
      <summary>Legt fest, ob eine Einheitenumrechnung in der Kurvendarstellung angezeigt werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurve.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurve.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt als Informationen die Namen der Archiv- und Trenddefintionen zurück. Beispiel: TrendCurve(Archive: TestArchiveDefinition, Trend: TrdSine)</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendCurveCollection">
      <summary>Auflistung von Trendkurven eines 'TrendChart'-Diagramms</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendCurveCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Elementes. Jedes Element einer Auflistung hat einen Index. Die Indizes der Elemente beginnen mit "0".</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurveCollection.Add(VisiWinNET.Forms.Trend.TrendCurve)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <returns>Index des neu hinzugefügten Elementes</returns>
      <param name="pCurve">Objekt vom Typ 'TrendCurve', das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurveCollection.Contains(VisiWinNET.Forms.Trend.TrendCurve)">
      <summary>Gibt zurück, ob das angegebene Element bereits in der Auflistung vorhanden ist</summary>
      <returns>True: Das Element ist bereits in der Auflistung vorhanden False: das Element ist noch nicht in der Auflistung enthalten</returns>
      <param name="pCurve">Objekt vom Typ 'TrendCurve', das mit den Elementen in der Auflistung verglichen wird. Der Vergleich wird anhand der Eigenschaften 'Archive' und 'Trend' durchgeführt.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurveCollection.IndexOf(VisiWinNET.Forms.Trend.TrendCurve)">
      <summary>Gibt den Index eines Elementes aus der Auflistung zurück</summary>
      <returns>Index des Elementes aus der Auflistung, wenn vorhanden, ansonsten -1.</returns>
      <param name="pCurve">Objekt, dessen Index zurückgegeben werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurveCollection.Insert(System.Int32,VisiWinNET.Forms.Trend.TrendCurve)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <param name="index">Index, das das neue Element haben soll. Die Indizes aller folgenden Elemente verschieben sich um jeweils 1.</param>
      <param name="pCurve">Objekt, das hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurveCollection.Remove(VisiWinNET.Forms.Trend.TrendCurve)">
      <summary>Löscht ein Element aus der Auflistung</summary>
      <param name="pCurve">Objekt, das gelöscht werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendCurveCollection.ToArray">
      <summary>Gibt die enthaltenen Elemente als Feld vom Typ 'TrendCurve' zurück</summary>
      <returns>Feld vom Typ 'TrendCurve'</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendGrid">
      <summary>Klasse,die die Farben der Gitternetzlinien im Diagramm eines 'TrendChart'-Steuerelementes zusammenfasst</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendGrid.#ctor">
      <summary>Erzeugt eine neue Instanz der 'TrendGrid'-Klasse.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendGrid.ColorXMajor">
      <summary>Legt die Farbe der Hauptgitternetzlinien auf der Zeitachse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendGrid.ColorXMinor">
      <summary>Legt die Farbe der Nebengitternetzlinien auf der Zeitachse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendGrid.ColorYMajor">
      <summary>Legt die Farbe der Hauptgitternetzlinien auf der Werteachse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendGrid.ColorYMinor">
      <summary>Legt die Farbe der Nebengitternetzlinien auf der Werteachse fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendGrid.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt die eingestellten Farbwerte als Zeichenkette zurück</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendGrid.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendGrid', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendLegend">
      <summary>Steuerelement das eine Legende zu einem 'TrendChart' anzeigt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegend.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TrendLegend'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendLegend.Columns">
      <summary>Legt die angezeigten Informationen im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendLegend.TrendChart">
      <summary>Legt fest, zu welchem 'TrendChart'-Steuerelement auf dem Formular die Legende dargestellt werden soll</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendLegendColumn">
      <summary>Kapselt die Informationen einer angezeigten Spalte im 'TrendLegend'-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.#ctor(VisiWinNET.Forms.Trend.TrendLegendProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'TrendLegendColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'TrendLegendProperty'</param>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
      <param name="sortable">Wert für die Eigenschaft 'Sortable'</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TrendLegendColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.#ctor(VisiWinNET.Forms.Trend.TrendLegendProperties,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'TrendLegendColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'TrendLegendProperty'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.#ctor(VisiWinNET.Forms.Trend.TrendLegendProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'TrendLegendColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'TrendLegendProperty'</param>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.#ctor(VisiWinNET.Forms.Trend.TrendLegendProperties)">
      <summary>Initialisiert eine neue Instanz der 'TrendLegendColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'TrendLegendProperty'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.#ctor(VisiWinNET.Forms.Trend.TrendLegendProperties,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'TrendLegendColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'TrendLegendProperty'</param>
      <param name="header">Wert für die Eigenschaft 'HeaderText'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
      <param name="alignment">Wert für die Eigenschaft 'Alignment'</param>
      <param name="sortable">Wert für die Eigenschaft 'Sortable'</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.#ctor(VisiWinNET.Forms.Trend.TrendLegendProperties,System.Int32)">
      <summary>Initialisiert eine neue Instanz der 'TrendLegendColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'TrendLegendProperty'</param>
      <param name="width">Wert für die Eigenschaft 'Width'</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendLegendColumn.HeaderText">
      <summary>Legt den festen, nicht sprachumschaltbaren Text im Spaltenkopf fest, wenn keine Angaben in 'LocalizedHederText' vorgenommen werden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendLegendColumn.LocalizedHeaderText">
      <summary>Legt den Bezeichner für einen Text aus der Sprachumschaltung fest, der im Spaltenkopf dargestellt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendLegendColumn.Name">
      <summary>Legt den Namen der Spalte fest.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendLegendColumn.TrendLegendProperty">
      <summary>Legt fest, welche Information in der Spalte angezeigt werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendLegendColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendMarker">
      <summary>Klasse, die die Markierungslinie senkrecht zur Zeitachse und den entsprechenden Schieberegler in einem 'TrendChart' steuert</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarker.LineColor">
      <summary>Legt die Farbe der vertikalen Markierungslinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarker.MarkerPoints">
      <summary>Gibt die Schnittpunkte der Markierungslinie mit den Trendkurven als Feld vom 'MarkerPoint'-Objekten zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarker.Position">
      <summary>Legt die Position der Markierungslinie im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarker.Slider">
      <summary>Legt die Funktion des Schiebereglers für die Markierungslinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarker.TimeStamp">
      <summary>Gibt den Zeitstempel zurück, auf dem die Markierungslinie die Zeitachse schneidet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarker.Visible">
      <summary>Legt fest, ob die Markierungslinie sichtbar sein soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendMarker.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendMarker.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendMarker.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Kurzbeschreibung über verschiedene Einstellungen des Objektes</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendMarkerPointsChangedEventArgs">
      <summary>Stellt Daten für das 'MarkerPointsChanged'-Ereignis bereit.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarkerPointsChangedEventArgs.MarkerPoints">
      <summary>Beschreibt die Schnittpunkte der Trendkurven mit der Markierungslinie</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendMarkerPointsChangedEventArgs.Time">
      <summary>Gibt die Zeit des Wertes zurück, der durch die Markierungslinie selektiert wird</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendNoteMouseDownEventArgs">
      <summary>Stellt Daten für das 'TrendNoteMouseDown'-Ereignis bereit.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendNoteMouseDownEventArgs.#ctor(System.String,System.String,System.DateTime,System.Windows.Forms.MouseEventArgs)">
      <summary>Initialisiert eine neue Instanz der 'TrendNoteMouseDownEventArgs'-Klasse.</summary>
      <param name="archiveName">Wert für die Eigenschaft 'Archive'</param>
      <param name="text">Wert für die Eigenschaft 'Text'</param>
      <param name="timeStamp">Wert für die Eigenschaft 'Time'</param>
      <param name="e">Wert für die Eigenschaft 'Mouse'</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNoteMouseDownEventArgs.Archive">
      <summary>Gibt den Namen des Archives an, in dem die Notiz verfasst wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNoteMouseDownEventArgs.Mouse">
      <summary>Gibt die Mausaktion an, die auf der Notizdarestllung im Steuerelement ausgeführt wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNoteMouseDownEventArgs.Text">
      <summary>Gibt den Notiztext zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNoteMouseDownEventArgs.Time">
      <summary>Gibt den Zeitstempel der Notiz zurück</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendNotes">
      <summary>Klasse, die die Ansicht der Archivnotizen in einem 'TrendChart'-Steuerelement festlegt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendNotes.#ctor(VisiWinNET.Forms.Trend.TrendChart)">
      <summary>Erzeugt eine neue Instanz der 'TrendNotes'-Klasse.
</summary>
      <param name="pTrend">Angabe des 'TrendChart'-Steuerelementes, für das das neu instanzierte Objekt als 'Notes'-Eigenschaft wirken soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNotes.ForeColor">
      <summary>Legt die Schriftfarbe fest, mit der Archivnotizen ausgegeben werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNotes.Image">
      <summary>Legt das Symbol fest, das im 'TrendChart'-Steuerelement für eine Notiz angezeigt wird, wenn die 'Mode'-Eigenschaft auf 'Graphical' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNotes.Mode">
      <summary>Legt fest, wie Archivnotizen angezeigt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNotes.UseDefaultTrendNoteForm">
      <summary>Legt fest, ob die Anzeige einer Trendnotiz über das im 'TrendChart' implementierte Notizenfenster erfolgen soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendNotes.Visible">
      <summary>Legt fest, ob die Archivnotizen angezeigt werden sollen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendNotes.Refresh">
      <summary>Lädt die Trendnotizen erneut aus der Archivdatei in die Ansicht</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendPlotArea">
      <summary>Klasse, die das Aussehen der Diagrammfläche eines 'TrendChart'-Steuerelementes festlegt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendPlotArea.BackColor">
      <summary>Legt die Hintergrundfarbe der Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendPlotArea.BorderColor">
      <summary>Legt die Rahmenfarbe der Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendPlotArea.BorderStyle">
      <summary>Legt den Rahmenart der Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendPlotArea.MarginBottom">
      <summary>Legt den Abstand zwischen Diagrammfläche und unterer Kante des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendPlotArea.MarginLeft">
      <summary>Legt den Abstand zwischen Diagrammfläche und linker Kante des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendPlotArea.MarginRight">
      <summary>Legt den Abstand zwischen Diagrammfläche und rechter Kante des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendPlotArea.MarginTop">
      <summary>Legt den Abstand zwischen Diagrammfläche und oberer Kante des Steuerelementes fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendPlotArea.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Gibt die im Objekt eingestellte Hintergrundfarbe an</returns>
    </member>
    <member name="E:VisiWinNET.Forms.Trend.TrendPlotArea.PropertyChanged">
      <summary>Wird ausgelöst, wenn sich eine Eigenschaft im Objekt ändert</summary>
      <param name="sender">Angabe des Objektes vom Typ 'TrendPlotArea', das das Ereignis ausgelöst hat.</param>
      <param name="e">Objekt vom Typ 'PropertyChangedEventArgs', das weitere Informationen zum Ereignis enthält.</param>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendScale">
      <summary>Klasse, die die Skala für eine Trendkurve festlegt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.#ctor(System.Int32,System.Drawing.Font,System.Drawing.Color,System.Double,System.Double,System.Int32,System.Boolean)">
      <summary>Erzeugt eine neue Instanz der 'TrendScale'-Klasse.</summary>
      <param name="decPoint">Wert für die 'DecPoint'-Eigenschaft</param>
      <param name="font">Wert für die 'Font'-Eigenschaft</param>
      <param name="foreColor">Wert für die 'ForeColor'-Eigenschaft</param>
      <param name="majorAlignment">Wert für die 'MajorAlignment'-Eigenschaft</param>
      <param name="minorAlignment">Wert für die 'MinorAlignment'-Eigenschaft</param>
      <param name="position">Wert für die 'Position'-Eigenschaft</param>
      <param name="visible">Wert für die 'Visible'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.#ctor(VisiWinNET.Forms.Trend.TrendScale)">
      <summary>Erzeugt eine neue Instanz der 'TrendScale'-Klasse.</summary>
      <param name="rTrendScale">Objekt vom Typ 'TrendScale', dessen Eigenschaftenwerte in das neu erzeugte Objekt kopiert werden</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.#ctor">
      <summary>Erzeugt eine neue Instanz der 'TrendScale'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.#ctor(System.Int32,System.Drawing.Font,System.Drawing.Color,System.Double,System.Double,System.Int32,System.Boolean,VisiWinNET.Forms.Internals.ScaleAutoAlignment,VisiWinNET.Forms.Internals.LogarithmProperties)">
      <summary>Erzeugt eine neue Instanz der 'TrendScale'-Klasse.</summary>
      <param name="decPoint">Wert für die 'DecPoint'-Eigenschaft</param>
      <param name="font">Wert für die 'Font'-Eigenschaft</param>
      <param name="foreColor">Wert für die 'ForeColor'-Eigenschaft</param>
      <param name="majorAlignment">Wert für die 'MajorAlignment'-Eigenschaft</param>
      <param name="minorAlignment">Wert für die 'MinorAlignment'-Eigenschaft</param>
      <param name="position">Wert für die 'Position'-Eigenschaft</param>
      <param name="visible">Wert für die 'Visible'-Eigenschaft</param>
      <param name="autoAlignment">Angabe des Wertes für die 'AutoAlignment'-Eigenschaft</param>
      <param name="logarithm">Angabe eines Objektes für die logarithmische Darstellung</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.#ctor(System.Int32,System.Drawing.Font,System.Drawing.Color,System.Double,System.Double,System.Int32,System.Boolean,VisiWinNET.Forms.Internals.ScaleAutoAlignment)">
      <summary>Erzeugt eine neue Instanz der 'TrendScale'-Klasse.</summary>
      <param name="decPoint">Wert für die 'DecPoint'-Eigenschaft</param>
      <param name="font">Wert für die 'Font'-Eigenschaft</param>
      <param name="foreColor">Wert für die 'ForeColor'-Eigenschaft</param>
      <param name="majorAlignment">Wert für die 'MajorAlignment'-Eigenschaft</param>
      <param name="minorAlignment">Wert für die 'MinorAlignment'-Eigenschaft</param>
      <param name="position">Wert für die 'Position'-Eigenschaft</param>
      <param name="visible">Wert für die 'Visible'-Eigenschaft</param>
      <param name="autoAlignment">Angabe des Wertes für die 'AutoAlignment'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.#ctor(System.Int32,System.Drawing.Font,System.Drawing.Color,System.Double,System.Double,System.Int32,System.Boolean,VisiWinNET.Forms.Internals.ScaleAutoAlignment,VisiWinNET.Forms.Internals.LogarithmProperties,VisiWinNET.Forms.Trend.TrendScaleUnitLayouts)">
      <summary>Erzeugt eine neue Instanz der 'TrendScale'-Klasse.</summary>
      <param name="decPoint">Wert für die 'DecPoint'-Eigenschaft</param>
      <param name="font">Wert für die 'Font'-Eigenschaft</param>
      <param name="foreColor">Wert für die 'ForeColor'-Eigenschaft</param>
      <param name="majorAlignment">Wert für die 'MajorAlignment'-Eigenschaft</param>
      <param name="minorAlignment">Wert für die 'MinorAlignment'-Eigenschaft</param>
      <param name="position">Wert für die 'Position'-Eigenschaft</param>
      <param name="visible">Wert für die 'Visible'-Eigenschaft</param>
      <param name="autoAlignment">Angabe des Wertes für die 'AutoAlignment'-Eigenschaft</param>
      <param name="logarithm">Angabe eines Objektes für die logarithmische Darstellung</param>
      <param name="unitLayout">Wert für die 'UnitLayout'-Eigenschaft</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.#ctor(System.Int32,System.Drawing.Font,System.Drawing.Color,System.Double,System.Double,System.Int32,System.Boolean,VisiWinNET.Forms.Internals.ScaleAutoAlignment,VisiWinNET.Forms.Internals.LogarithmProperties,VisiWinNET.Forms.Trend.TrendScaleUnitLayouts,VisiWinNET.Forms.Format,VisiWinNET.Forms.LimitsVisibilities)">
      <summary>Erzeugt eine neue Instanz der 'TrendScale'-Klasse.</summary>
      <param name="decPoint">Wert für die 'DecPoint'-Eigenschaft</param>
      <param name="font">Wert für die 'Font'-Eigenschaft</param>
      <param name="foreColor">Wert für die 'ForeColor'-Eigenschaft</param>
      <param name="majorAlignment">Wert für die 'MajorAlignment'-Eigenschaft</param>
      <param name="minorAlignment">Wert für die 'MinorAlignment'-Eigenschaft</param>
      <param name="position">Wert für die 'Position'-Eigenschaft</param>
      <param name="visible">Wert für die 'Visible'-Eigenschaft</param>
      <param name="autoAlignment">Angabe des Wertes für die 'AutoAlignment'-Eigenschaft</param>
      <param name="logarithm">Angabe eines Objektes für die logarithmische Darstellung</param>
      <param name="unitLayout">Wert für die 'UnitLayout'-Eigenschaft</param>
      <param name="format">Wert für die 'Format'-Eigenschaft</param>
      <param name="limitsVisibility">Wert für die 'LimitsVisibility'-Eigenschaft</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.AutoAlignment">
      <summary>Gibt ein Objekt zurück, dass eine automatische Skalierung unterstützt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.DecPoint">
      <summary>Legt die Anzahl der Nachkommastellen fest oder verschiebt ganzzahlige Werte um die angegebene Anzahl von Dezimalstellen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.Font">
      <summary>Legt die Schriftart für die Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.ForeColor">
      <summary>Legt die Schriftfarbe für die Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.Format">
      <summary>Legt das Zahlenformat der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.FormattedMaxValue">
      <summary>Gibt den umgerechneten Maximalwert unter berücksichtigung der DecPoint-Eigenschaft zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.FormattedMinValue">
      <summary>Gibt den umgerechneten Minimalwert unter berücksichtigung der DecPoint-Eigenschaft zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.InternalFont">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.LimitsVisibility">
      <summary>Legt fest, wie die Grenzen des Wertebereiches auf der Skala aufgeführt werden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.Logarithm">
      <summary>Legt fest, ob die Skalenaufteilung logarithmisch oder linear eingeteilt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.MajorAlignment">
      <summary>Legt die Schrittweite der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.MaxValue">
      <summary>Gibt den Maximalwert der Skala zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.MinorAlignment">
      <summary>Legt die Schrittweite der Nebengitternetzlinien im Diagramm fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.MinValue">
      <summary>Gibt den Minimalwert der Skala zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.Position">
      <summary>Legt die Position der Skala fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.UnitLayout">
      <summary>Legt fest, wo der Einheitentext in der Skala angezeigt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.UnitText">
      <summary>Gibt den Einheitentext zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendScale.Visible">
      <summary>Legt fest, ob die Skala sichtbar sein soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendScale.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendSlider">
      <summary>Klasse die den Schieberegler zum Bewegen der Markierungslinie im 'TrendChart'-Steuerelement funktional beschreibt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendSlider.AutoSize">
      <summary>Legt fest, ob der Schieberegler beim Laden einer Grafik entsprechend verkleinert/vergrößert wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendSlider.Image">
      <summary>Legt die Grafik fest, die den Schieberegler darstellt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendSlider.PlotAreaPitch">
      <summary>Legt einen zusätzlichen Abstand zwischen Diagrammfläche und Schieberegler fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendSlider.Size">
      <summary>Legt die Größe des Schieberegler fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendSlider.Style">
      <summary>Legt die grafische Oberfläche des Schiebereglerknopfes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendSlider.Visible">
      <summary>Legt fest, ob der Schieberegler sichtbar sein soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendSlider.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Kurzbeschreibung über verschiedene Einstellungen des Objektes</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendTime">
      <summary>Steuerelement, dass die Manipulation der Zeitachse eines 'TrendChart' ermöglicht. 
</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendTime.#ctor">
      <summary>Initialisiert eine neue Instanz der 'TrendTime'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.DateTimeInProperties">
      <summary>Legt das Datums-/Zeitformatformat fest, wenn 'DisplayMode' auf 'DateTimeIn' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.DisplayMode">
      <summary>Legt die Darstellung der Bedienoberfläche fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.LargeChange">
      <summary>Legt das Intervall für den schnellen Vor-/Rücklauf fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.PreventInputOnUpdate">
      <summary>Legt fest, ob die Bedienelemente im Steuerelement deaktiviert werden sollen, wenn das verknüpfte 'TrendChart'-Steuerelement durch die Anforderung größerer Datenmengen zeitweise nicht aktualisiert werden kann.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.ScrollBarProperties">
      <summary>Legt das Erscheinungsbild der Bildlaufleiste fest, wenn 'DisplayMode' auf 'ScrollBar' eingestellt ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.SmallChange">
      <summary>Legt das Intervall für den normalen Vor-/Rücklauf fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.SynchronizeScrollChange">
      <summary>Legt fest, ob die Eigenschaften 'LargeChange' und 'SmallChange' automatisch an eine geänderte Zeitskalenauflösung angepasst werden sollen.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTime.TrendChart">
      <summary>Legt das 'TrendChart'-Steuerelement fest, dessen Zeitachse gesteuert werden soll</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendTime.GetDefaultEvent">
      <summary>Gibt den Namen des Ereignisses zurück, das als Vorgabeereignis verwendet werden soll</summary>
      <returns>Der Name des Ereignisses, das beim Öffnen der Eigenschaftenseite "Ereignisverarbeitung" vorausgewählt wird.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendTime.GetSupportedEventAgents">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendTimeScale">
      <summary>Klasse, die die Parameter der Zeitachse eines 'TrendChart'-Steuerelementes festlegt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendTimeScale.#ctor(VisiWinNET.Forms.Trend.TrendChart)">
      <summary>Erzeugt eine neue Instanz der 'TrendTimeScale'-Klasse.
</summary>
      <param name="pTrend">Angabe des 'TrendChart'-Steuerelementes, für das das neu instanzierte Objekt als 'TimeScale'-Eigenschaft wirken soll</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.AutoAlignment">
      <summary>Gibt ein Objekt zurück, dass eine automatische Skalierung unterstützt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.DateTimeFormat">
      <summary>Legt das Format der Datums-/Zeitwerte an der Zeitachse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.ForeColor">
      <summary>Legt die Schriftfarbe für die Datums-/Zeitangabe an der Zeitsachse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.From">
      <summary>Gibt die älteste im Diagramm angezeigte Zeit zurück. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.MajorAlignment">
      <summary>Bestimmt das Raster der Zeitangaben und der Hauptgitternetzlinien, die von der Zeitachse ausgehen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.MinorAlignment">
      <summary>Bestimmt das Raster der Nebengitternetzlinien, die von der Zeitachse ausgehen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.Online">
      <summary>Legt fest, ob die aktuell einlaufenden Werte angezeigt oder ob die Ansicht auf einen früheren Zeitpunkt umgeschaltet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.Orientation">
      <summary>Legt die Anzeigerichtung im Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.PlotAreaPitch">
      <summary>Legt einen Abstand zwischen Zeitachsenwerten und Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.Position">
      <summary>Legt fest, wo die Zeitachse dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.Resolution">
      <summary>Legt fest, welcher Zeitraum durch die Diagrammfläche dargestellt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.To">
      <summary>Legt die jüngste im Diagramm angezeigte Zeit fest. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.TrendTimeScale.Visible">
      <summary>Legt fest, ob die Skalenwerte der Zeitachse angezeigt werden</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendTimeScale.BeginInit">
      <summary>Leitet die Initialisierungsphase der Komponente ein</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendTimeScale.EndInit">
      <summary>Beendet die Initialisierungsphase der Komponente</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.TrendTimeScale.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Kurzbeschreibung über verschiedene Einstellungen des Objektes</returns>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraph">
      <summary>Steuerelement zur Darstellung von X/Y-Diagrammen</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraph.#ctor">
      <summary>Initialisiert eine neue Instanz der 'XYGraph'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.Border">
      <summary>Legt die Umrandung des Steuerelementes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.Curves">
      <summary>Legt die anzuzeigenden Kurven fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.Grid">
      <summary>Legt die Farben für die Skalierungslinien im Diagramm fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.InnerMargin">
      <summary>Definiert einen Rand zwischen den Steuerelementeabmessungen und dem Bereich, der vom Steuerelement als Ausgabe verwendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.PlotArea">
      <summary>Legt das Aussehen der Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.XScale">
      <summary>Legt das Aussehen und die Skalierung der X-Achse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.YScale">
      <summary>Legt das Aussehen und die Skalierung der Y-Achse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.ZoomMode">
      <summary>Legt fest, wie der Benutzer im Steuerelement einen Bereich vergrößern kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraph.ZoomScaleBehavior">
      <summary>Legt fest, wo die Skalen dargestellt werden, wenn in das Steuerelement hineingezoomt wird. 

</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraph.ApplyChanges">
      <summary>Löst ein Neuzeichnen im Steuerelement aus, wenn die Kurvenwerte manuell in das Steuerelement geladen werden.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraph.CaptureResolution">
      <summary>Puffert die aktuellen Ansichtenparameter zur Wiederherstellung einer Ansicht</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraph.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraph.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraph.ResetResolution">
      <summary>Stellt die über 'CaptureResolution' gepufferte Ansicht wieder her</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphCurve">
      <summary>Kapselt die Einstellungen für eine Kurve im 'XYGraph'-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurve.#ctor">
      <summary>Initialisiert eine neue Instanz der 'XYGraphCurve'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurve.#ctor(System.Drawing.Color,VisiWinNET.Forms.Trend.CurveLineStyles,System.Int32,System.String,System.String,System.String,System.Int32,System.String)">
      <summary>Initialisiert eine neue Instanz der 'XYGraphCurve'-Klasse.</summary>
      <param name="_lineColor">Wert für die Eigenschaft 'LineColor'</param>
      <param name="_lineStyle">Wert für die Eigenschaft 'LineStyle'</param>
      <param name="_lineWidth">Wert für die Eigenschaft 'LineWidth'</param>
      <param name="_vwItemX_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemX' verwendet wird</param>
      <param name="_vwItemY_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemY' verwendet wird</param>
      <param name="_vwItemArrLen_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemArrayLength' verwendet wird</param>
      <param name="_vwItemTrigger_BitNumber">Bitnummer in der Prozessvariablen die in der Eigenschaft 'VWItemTrigger' verwendet wird</param>
      <param name="_vwItemTrigger_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemTrigger' verwendet wird</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurve.#ctor(System.Drawing.Color,VisiWinNET.Forms.Trend.CurveLineStyles,System.Int32,System.String,System.String,System.String,System.Int32,System.String,VisiWinNET.Forms.PropertyBindingCollection)">
      <summary>Initialisiert eine neue Instanz der 'XYGraphCurve'-Klasse.</summary>
      <param name="_lineColor">Wert für die Eigenschaft 'LineColor'</param>
      <param name="_lineStyle">Wert für die Eigenschaft 'LineStyle'</param>
      <param name="_lineWidth">Wert für die Eigenschaft 'LineWidth'</param>
      <param name="_vwItemX_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemX' verwendet wird</param>
      <param name="_vwItemY_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemY' verwendet wird</param>
      <param name="_vwItemArrLen_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemArrayLength' verwendet wird</param>
      <param name="_vwItemTrigger_BitNumber">Bitnummer in der Prozessvariablen die in der Eigenschaft 'VWItemTrigger' verwendet wird</param>
      <param name="_vwItemTrigger_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemTrigger' verwendet wird</param>
      <param name="bindings">Objekt vom Typ 'PropertyBindingsCollection', das die Eigenschaftenbindungen enthält.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurve.#ctor(System.Drawing.Color,VisiWinNET.Forms.Trend.CurveLineStyles,System.Int32,System.String,System.String,System.String,System.Int32,System.String,VisiWinNET.Forms.PropertyBindingCollection,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'XYGraphCurve'-Klasse.</summary>
      <param name="_lineColor">Wert für die Eigenschaft 'LineColor'</param>
      <param name="_lineStyle">Wert für die Eigenschaft 'LineStyle'</param>
      <param name="_lineWidth">Wert für die Eigenschaft 'LineWidth'</param>
      <param name="_vwItemX_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemX' verwendet wird</param>
      <param name="_vwItemY_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemY' verwendet wird</param>
      <param name="_vwItemArrLen_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemArrayLength' verwendet wird</param>
      <param name="_vwItemTrigger_BitNumber">Bitnummer in der Prozessvariablen die in der Eigenschaft 'VWItemTrigger' verwendet wird</param>
      <param name="_vwItemTrigger_Name">Name der Prozessvariablen die in der Eigenschaft 'VWItemTrigger' verwendet wird</param>
      <param name="bindings">&lt;p class="HDC_Header"&gt;&lt;span class="expandcollapse" tabindex="0"&gt;&lt;img id="descriptionToggle" class="toggle" name="toggleSwitch" src="collapse.jpg"&gt;Beschreibung&lt;/span&gt;&lt;/p&gt;&lt;div id="descriptionSection" class="section" name="collapseableSection"&gt;$Content$ &lt;/div&gt; false</param>
      <param name="unitConversionX">&lt;p class="HDC_Header"&gt;&lt;span class="expandcollapse" tabindex="0"&gt;&lt;img id="descriptionToggle" class="toggle" name="toggleSwitch" src="collapse.jpg"&gt;Beschreibung&lt;/span&gt;&lt;/p&gt;&lt;div id="descriptionSection" class="section" name="collapseableSection"&gt;$Content$ &lt;/div&gt; false</param>
      <param name="unitConversionY">&lt;p class="HDC_Header"&gt;&lt;span class="expandcollapse" tabindex="0"&gt;&lt;img id="descriptionToggle" class="toggle" name="toggleSwitch" src="collapse.jpg"&gt;Beschreibung&lt;/span&gt;&lt;/p&gt;&lt;div id="descriptionSection" class="section" name="collapseableSection"&gt;$Content$ &lt;/div&gt; false</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphCurve.Points">
      <summary>Beinhaltet als Auflistung die Punkte der Kurve. 
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphCurve.PropertyBindings">
      <summary>Bindet Eigenschaftenwerte an Laufzeitdaten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphCurve.VWItemArrayLength">
      <summary>Legt den Namen der Prozessvariablen fest, die die anzuzeigende Anzahl von Kurvenpunkten enthält</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphCurve.VWItemTrigger">
      <summary>Legt den Namen der Prozessvariablen fest, die als Trigger zum Laden in die Anzeige verwendet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphCurve.VWItemX">
      <summary>Legt den Namen der Prozessvariablen fest, deren Feldelemente die X-Koordinaten der Kurve enthalten</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphCurve.VWItemY">
      <summary>Legt den Namen der Prozessvariablen fest, deren Feldelemente die Y-Koordinaten der Kurve enthalten</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurve.Dispose">
      <summary>Gibt die vom Objekt verwendeten Resourcen frei, die als "unmanaged code" verwendet werden</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphCurveCollection">
      <summary>Auflistung von Trendkurven eines 'XYGraph'-Diagramms</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphCurveCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Elementes. Jedes Element einer Auflistung hat einen Index. Die Indizes der Elemente beginnen mit "0".</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurveCollection.Add(VisiWinNET.Forms.Trend.XYGraphCurve)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <returns>Index des neu hinzugefügten Elementes</returns>
      <param name="pCurve">Objekt vom Typ 'XYGraphCurve', das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurveCollection.Contains(VisiWinNET.Forms.Trend.XYGraphCurve)">
      <summary>Gibt zurück, ob das angegebene Element bereits in der Auflistung vorhanden ist</summary>
      <returns>True: Das Element ist bereits in der Auflistung vorhanden False: das Element ist noch nicht in der Auflistung enthalten</returns>
      <param name="pCurve">Objekt vom Typ 'XYGraphCurve', das mit den Elementen in der Auflistung verglichen wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurveCollection.IndexOf(VisiWinNET.Forms.Trend.XYGraphCurve)">
      <summary>Gibt den Index eines Elementes aus der Auflistung zurück</summary>
      <returns>Index des Elementes aus der Auflistung, wenn vorhanden, ansonsten -1.</returns>
      <param name="pCurve">Objekt, dessen Index zurückgegeben werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurveCollection.Insert(System.Int32,VisiWinNET.Forms.Trend.XYGraphCurve)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <param name="index">Index, das das neue Element haben soll. Die Indizes aller folgenden Elemente verschieben sich um jeweils 1.</param>
      <param name="pCurve">Objekt, das hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphCurveCollection.Remove(VisiWinNET.Forms.Trend.XYGraphCurve)">
      <summary>Löscht ein Element aus der Auflistung</summary>
      <param name="pCurve">Objekt, das gelöscht werden soll</param>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphGrid">
      <summary>Klasse, die die Farben der Gitternetzlinien im Diagramm eines 'XYGraph'-Steuerelementes zusammenfasst</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphGrid.MajorLineColor">
      <summary>Legt die Farbe der Hauptgitternetzlinien fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphGrid.MinorLineColor">
      <summary>Legt die Farbe der Nebengitternetzlinien fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphPlotArea">
      <summary>Klasse, die das Aussehen der Diagrammfläche eines 'XYGraph'-Steuerelementes festlegt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphPlotArea.BackColor">
      <summary>Legt die Hintergrundfarbe der Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphPlotArea.BorderColor">
      <summary>Legt die Rahmenfarbe der Diagrammfläche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphPlotArea.BorderStyle">
      <summary>Legt den Rahmenart der Diagrammfläche fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphPoint">
      <summary>Kapselt die Informationen eines Kurvenpunktes im 'XYGraph'-Steuerelement</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPoint.#ctor">
      <summary>Initialisiert eine neue Instanz der 'XYGraphPoint'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPoint.#ctor(System.Double,System.Double,System.DateTime)">
      <summary>Initialisiert eine neue Instanz der 'XYGraphPoint'-Klasse.</summary>
      <param name="xVal">Wert für die Eigenschaft 'XValue'</param>
      <param name="yVal">Wert für die Eigenschaft 'YValue'</param>
      <param name="t">Wert für die Eigenschaft 'Time'</param>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphPoint.Time">
      <summary>Legt den Zeitstempel des Kurvenpunktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphPoint.XValue">
      <summary>Legt die X-Koordinate des Punktes fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphPoint.YValue">
      <summary>Legt die Y-Koordinate des Punktes fest</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphPointCollection">
      <summary>Auflistung, die die Kurvenpunkte einer Kurve im 'XYGraph'-Steuerelement beinhaltet</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphPointCollection.Item(System.Int32)">
      <summary>Zugriff auf ein Element der Auflistung</summary>
      <param name="index">Index des Elementes. Jedes Element einer Auflistung hat einen Index. Die Indizes der Elemente beginnen mit "0".</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPointCollection.Add(VisiWinNET.Forms.Trend.XYGraphPoint)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <returns>Index des neu hinzugefügten Elementes</returns>
      <param name="pPoint">Objekt vom Typ 'XYGraphPoint', das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPointCollection.AddRange(VisiWinNET.Forms.Trend.XYGraphPoint[])">
      <summary>Fügt der Auflistung mehrere Listenelemente hinzu</summary>
      <param name="pointArr">Feld von 'XYGraphPoint'-Objekten, dass die Kurvenpunkte-Informationen enthält</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPointCollection.Contains(VisiWinNET.Forms.Trend.XYGraphPoint)">
      <summary>Gibt zurück, ob das angegebene Element bereits in der Auflistung vorhanden ist</summary>
      <returns>True: Das Element ist bereits in der Auflistung vorhanden False: das Element ist noch nicht in der Auflistung enthalten</returns>
      <param name="pPoint">Objekt vom Typ 'XYGraphPoint', das mit den Elementen in der Auflistung verglichen wird. </param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPointCollection.IndexOf(VisiWinNET.Forms.Trend.XYGraphPoint)">
      <summary>Gibt den Index eines Elementes aus der Auflistung zurück</summary>
      <returns>Index des Elementes aus der Auflistung, wenn vorhanden, ansonsten -1.</returns>
      <param name="pPoint">Objekt, dessen Index zurückgegeben werden soll.</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPointCollection.Insert(System.Int32,VisiWinNET.Forms.Trend.XYGraphPoint)">
      <summary>Fügt der Auflistung ein neues Element hinzu</summary>
      <param name="index">Index, das das neue Element haben soll. Die Indizes aller folgenden Elemente verschieben sich um jeweils 1.</param>
      <param name="pPoint">Objekt, das hinzugefügt werden soll</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphPointCollection.Remove(VisiWinNET.Forms.Trend.XYGraphPoint)">
      <summary>Löscht ein Element aus der Auflistung</summary>
      <param name="pPoint">Objekt, das gelöscht werden soll</param>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphScale">
      <summary>Legt die Skalierungseigenschaften einer Achse im 'XYGraph'-Steuerelement fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.AutoAlignment">
      <summary>Gibt ein Objekt zurück, dass eine automatische Skalierung unterstützt</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.Bounds">
      <summary>Gibt den Zeichenbereich der Skala im Steuerelement zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.DecPoint">
      <summary>Legt die Anzahl der Nachkommastellen fest oder verschiebt ganzzahlige Werte um die angegebene Anzahl von Dezimalstellen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.EndArrow">
      <summary>Legt fest, ob eine Pfeilspitze am Ende der Skalenlinie gezeichnet wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.EndArrowSize">
      <summary>Legt die Größe der Pfeilspitze am Ende der Skalenlinie fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.Font">
      <summary>Legt die Schriftart für die Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.ForeColorRuler">
      <summary>Legt die Farbe des Lineals und der Skalenstriche fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.ForeColorScale">
      <summary>Legt die Farbe der Skalenwerte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.IsXYScale">
      <summary>Legt fest, ob die Anzeige eines Wertes am Schnittpunkt der Skalen unterdrückt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.LineWidthMajor">
      <summary>Legt die Stärke der Skalenstriche im Hauptraster (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.LineWidthMinor">
      <summary>Legt die Stärke der Skalenstriche im Nebenraster (in Pixeln) fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.MaxValue">
      <summary>Legt den maximal anzeigbaren Wert in der Achse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.MinValue">
      <summary>Legt den minimal anzeigbaren Wert in der Achse fest
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.PointOfIntersection">
      <summary>Legt den Schnittpunkt mit der anderen Achse fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.RulerMajorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Hauptrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.RulerMinorAlign">
      <summary>Gibt die Schrittweite der Skalenlinien des Unterrasters an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.RulerType">
      <summary>Legt fest, welche Bestandteile der Skala gezeichnet werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.ScaleAlign">
      <summary>Gibt die Schrittweite der Skalenwerte an</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.SizeRatio">
      <summary>Legt das Verhältnis zwischen Linealbreite und Skalenwertebreite fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.Visible">
      <summary>Legt fest, ob die Skala gezeichnet werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.Trend.XYGraphScale.Width">
      <summary>Legt die Breite der Skala fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphScale.SetMinMaxValue(System.Double,System.Double)">
      <summary>Legt den unteren und oberen Grenzwert der Anzeige fest</summary>
      <param name="dMinValue">unterer Grenzwert</param>
      <param name="dMaxValue">oberer Grenzwert</param>
    </member>
    <member name="M:VisiWinNET.Forms.Trend.XYGraphScale.ValueToPosition(System.Double)">
      <summary>Errechnet die Anzeigekoordinate für einen Achsenwert</summary>
      <returns>Die Anzeigekoordinate im Steuerelement</returns>
      <param name="val">Der Wert, für den die Anzeigekoordinate berechnet werden soll</param>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.CurvesRequestedTrendDataEventHandler">
      <summary>Delegat für das Ereignis 'CurvesRequestedTrendData'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendMarkerPointsChangedHandler">
      <summary>Delegat für das Ereignis 'MarkerPointsChanged'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendNoteMouseDownEventHandler">
      <summary>Delegat für das Ereignis 'TrendNoteMouseDown'</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.CurveLineStyles">
      <summary>Aufzählung, die die verschiedenen Zeichenarten einer Trendkurve enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.CurveLineStyles.Dash">
      <summary>Zeichnet eine Kurve, die aus zusammenhängenden Strichen besteht.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.CurveLineStyles.DashDot">
      <summary>Zeichnet eine Kurve, die aus einer sich wiederholenden Strich-Punkt-Folge besteht.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.CurveLineStyles.DashDotDot">
      <summary>Zeichnet eine Kurve, die aus einer sich wiederholenden Strich-Punkt-Punkt-Folge besteht.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.CurveLineStyles.Dot">
      <summary>Zeichnet eine Kurve, die aus Punkten besteht.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.CurveLineStyles.Solid">
      <summary>Zeichnet eine durchgehende Kurve.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.RequestedTrendDataState">
      <summary>Beschreibt, ob eine asynchrone Abfrage von Trenddaten gestartet wurde</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.RequestedTrendDataState.Completed">
      <summary>Eine asynchrone Abfrage von Daten läuft zur Zeit nicht. Das Steuerelement kann bedient werden.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.RequestedTrendDataState.Started">
      <summary>Es wird auf das Ergebnis einer asynchronen Abfrage gewartet. Eine Bedienung des Steuerelementes (z.B. das Ändern der Zeitachse, weil es zu einer weiteren Abfrage von Daten führen kann) sollte blockiert werden.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TransferModes">
      <summary>Aufzählung, die die unterschiedlichen Modi für die Abfrage von Trenddaten im Steuerelement umfasst</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TransferModes.Asynchron">
      <summary>Die Abfrage wird asynchron ausgeführt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TransferModes.Synchron">
      <summary>Die Abfrage wird synchron ausgeführt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendChartScaleLayouts">
      <summary>Aufzählung, die die unterschiedlichen möglichen Verhalten der Kurvenskalen eines 'TrendChart'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendChartScaleLayouts.Inside">
      <summary>Die Skalen der Trendkurven werden auf der Diagrammfläche positioniert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendChartScaleLayouts.Manual">
      <summary>Die Skalen der Trendkurven werden auf der Diagrammfläche positioniert. Zur Laufzeit können die Skalen verschoben werden.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendChartScaleLayouts.Outside">
      <summary>Die Skalen der Trendkurven werden neben der Diagrammfläche positioniert</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendCurveStyles">
      <summary>Aufzählung, die die unterschiedlichen Ausgabearten einer Trendkurve im 'TrendChart'-Steuerelement enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendCurveStyles.Interpolated">
      <summary>Die im Archiv aufgezeichneten Trendwerte werden im Steuerelement durch eine Gerade miteinander verbunden</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendCurveStyles.Step">
      <summary>Die im Archiv aufgezeichneten Trendwerte werden im Steuerelement durch eine Stufe miteinander verbunden</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendLegendProperties">
      <summary>Aufzählung, die die möglichen Anzeigeinformationen eines 'TrendLegend'-Steuerelementes beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.ArchiveText">
      <summary>Sprachumschaltbarer Text der Archivdefinition, in der der Trend definiert wurde</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.Color">
      <summary>Kurvenfarbe im 'TrendChart'-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.ItemText">
      <summary>Sprachumschaltbarer Text zur Prozessvariablen, das durch die Trenddefinition aufgezeichnet wird</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.MarkedValue">
      <summary>Kurvenwert unter der Markierungslinie im 'TrendChart'-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.Maximum">
      <summary>Maximalwert der Skala im 'TrendChart'-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.Minimum">
      <summary>Minimalwert der Skala im 'TrendChart'-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.Style">
      <summary>Anzeige eines Symbols für den Kurvenstil</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.TrendText">
      <summary>Sprachumschaltbarer Text der Textdefinition</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendLegendProperties.Unit">
      <summary>Sprachumschaltbarer Einheitentext</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendNotesModes">
      <summary>Aufzählung, die die möglichen Darstellungsarten für Archivnotizen im 'TrendChart'-Steuerelement enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendNotesModes.Graphic">
      <summary>Die Trendnotizen werden als Symbole (Eigenschaft 'Image' des 'TrendNotes'-Objektes) ausgegeben. Ein Doppelklick auf ein Symbol öffnet ein Fenster, in der die Notizinformationen (Text und Zeitstempel der Notiz) angezeigt werden.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendNotesModes.Note">
      <summary>Die Trendnotizen werden direkt als senkrecht stehende Texte im Diagramm angezeigt
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendPlotAreaBorderStyles">
      <summary>Aufzählung, die die möglichen Rahmenarten der Diagrammfläche eines 'TrendChart'-Steuerelementes beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendPlotAreaBorderStyles.FixedSingle">
      <summary>Die Diagrammfläche wird durch eine einfache Linie umrahmt (1 Pixel Breite). Die Farbe dieser Linie wird über die Eigenschaft 'BorderColor' des als 'PlotArea'-Eigenschaft verwendeten Objektes vom Typ 'TrendPlotArea' bestimmt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendPlotAreaBorderStyles.None">
      <summary>Die Diagrammfläche wird nicht umrahmt</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendScaleUnitLayouts">
      <summary>Umfasst die Einstellungen zur Positionierung des Einheitentextes in einer Trendkurvenskala </summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendScaleUnitLayouts.AtMaxValue">
      <summary>Angabe des Einheitentextes am Maximalwert der Skala</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendScaleUnitLayouts.AtMinValue">
      <summary>Angabe des Einheitentextes am Minimalwert der Skala</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendScaleUnitLayouts.BehindScaleValues">
      <summary>Angabe des Einheitentextes an jedem Skalenwert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendScaleUnitLayouts.None">
      <summary>Keine Angabe des Einheitentextes</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendTimeDisplayModes">
      <summary>Aufzählung, die die möglichen Konfigurationen für die Bedienoberfläche des 'TrendTime'-Steuerelementes beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeDisplayModes.DateTimeIn">
      <summary>Ein Feld zur Eingabe eines Zeitpunktes wird angezeigt. Nach der Eingabe wird im verknüpften 'TrendChart' ein Bildlauf zum hier angegebenen Zeitpunkt durchgeführt.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeDisplayModes.OnlineButton">
      <summary>Eine Schaltfläche wird eingeblendet, die die Umschaltung zwischen aktueller und aufgezeichneter Ansicht zulässt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeDisplayModes.ScrollBar">
      <summary>Eine Bildlaufleiste wird eingeblendet
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeDisplayModes.ScrollButtons">
      <summary>Eine Schaltflächenleiste wird eingeblendet. Die einzelnen Schaltflächen erlauben den schrittweisen Bildlauf in zwei Intervallen (Eigenschaften 'Max-/MinChange/-Interval')
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendTimeScaleOrientations">
      <summary>Aufzählung, die die unterschiedlichen Anzeigerichtungen des 'TrendChart'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeScaleOrientations.BottomTop">
      <summary>Die jüngsten Kurvenwerte werden an der unteren Kante der Diagrammfläche dargestellt. Ältere Werte laufen an der oberen Kante des Steuerelementes aus der Anzeige hinaus.
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeScaleOrientations.LeftRight">
      <summary>Die jüngsten Kurvenwerte werden an der linken Kante der Diagrammfläche dargestellt. Ältere Werte laufen an der rechten Kante des Steuerelementes aus der Anzeige hinaus.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeScaleOrientations.RightLeft">
      <summary>Die jüngsten Kurvenwerte werden an der rechten Kante der Diagrammfläche dargestellt. Ältere Werte laufen an der linken Kante des Steuerelementes aus der Anzeige hinaus.

</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeScaleOrientations.TopBottom">
      <summary>Die jüngsten Kurvenwerte werden an der oberen Kante der Diagrammfläche dargestellt. Ältere Werte laufen an der unteren Kante des Steuerelementes aus der Anzeige hinaus.
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendTimeScalePositions">
      <summary>Aufzählung, die die unterschiedlichen Zeitachsenpositionen eines 'TrendChart'-Steuerelementes enthält</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeScalePositions.Both">
      <summary>- 'Orientation' = 'BottomTop'/'TopBottom': Die Zeitskalenwerte werden links und rechts von der Diagrammfläche angezeigt
- 'Orientation' = 'LeftRight'/'RightLeft': Die Zeitskalenwerte werden oberhalb und unterhalb der Diagrammfläche angezeigt</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeScalePositions.Primary">
      <summary>- 'Orientation' = 'BottomTop'/'TopBottom': Die Zeitskalenwerte werden links von der Diagrammfläche angezeigt
- 'Orientation' = 'LeftRight'/'RightLeft': Die Zeitskalenwerte werden unterhalb der Diagrammfläche angezeigt
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeScalePositions.Secondary">
      <summary>- 'Orientation' = 'BottomTop'/'TopBottom': Die Zeitskalenwerte werden rechts von der Diagrammfläche angezeigt
- 'Orientation' = 'LeftRight'/'RightLeft': Die Zeitskalenwerte werden oberhalb der Diagrammfläche angezeigt
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.TrendTimeShiftIntervals">
      <summary>Aufzählung, die die verschiedenen Intervalle zum Steuern der Zeitachse eines 'TrendChart' über ein 'TrendTime'-Steuerelement beinhaltet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeShiftIntervals.inDay">
      <summary>Tageweiser Bildlauf der Zeitachse</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeShiftIntervals.inHour">
      <summary>Stundenweiser Bildlauf der Zeitachse</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeShiftIntervals.inMinute">
      <summary>Minutenweiser Bildlauf der Zeitachse
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeShiftIntervals.inMonth">
      <summary>Monateweiser Bildlauf der Zeitachse
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeShiftIntervals.inSecound">
      <summary>Sekundenweiser Bildlauf der Zeitachse
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.TrendTimeShiftIntervals.inYear">
      <summary>Jahreweiser Bildlauf der Zeitachse
</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.XYGraphPlotArea.BorderStyles">
      <summary>Aufzählung, die die möglichen Rahmenstile eines 'XYGraphPlotArea'-Objektes beinhaltet
</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.XYGraphPlotArea.BorderStyles.FixedSingle">
      <summary>Der Rahmen wird als einfache Linie gezeichnet</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.XYGraphPlotArea.BorderStyles.None">
      <summary>Der Rahmen wird nicht gezeichnet</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.ZoomModes">
      <summary>Enthält die möglichen Zoom-Betriebsmodi eines TrendChart-Steuerelementes</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.ZoomModes.Disabled">
      <summary>Die Zoom-Funktion im Steuerelement ist deaktiviert</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.ZoomModes.Rectangle">
      <summary>Der Benutzer wählt die obere rechte Ecke des Zoombereiches durch drücken der linken Maustaste. Bei gehaltener Taste zieht der Benutzer ein Rechteck auf, das den Zoom-Bereich markiert.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.ZoomModes.TwoClicks">
      <summary>Durch zwei aufeinanderfolgende Mausklicks im Steuerelemnt markiert der Benutzer die obere linke und die untere rechte Ecke des Zoombereiches.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.Trend.ZoomScaleBehaviors">
      <summary>Aufzählung der möglichen Skalenpositionen bei der Zoom-Funktion im XYGraph-Steuerelement</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.ZoomScaleBehaviors.HoldAtBorders">
      <summary>Gegebenenfalls werden die Skalen beim Zoomen bis an die Ränder des Steuerelementes verschoben. Es wird versucht, die Skalenposition bezogen auf die Kurvenposition nicht zu verändern. Wird in einen Bereich gezoomt, der sich nicht mit einer Skala schneidet, befindet sich die Skala nach dem Zoomen am Rand des sichtbaren Bereiches.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.ZoomScaleBehaviors.NonSpecific">
      <summary>Gegebenenfalls verschwinden die Skalen beim Zoomen aus dem Steuerelement, da die Skalenposition bezogen auf die Kurvenposition nicht verändert wird. Wird also in einen Bereich gezoomt, der sich nicht mit einer Skala schneidet, befindet sich die Skala nach dem Zoomen außerhalb des sichtbaren Bereiches.</summary>
    </member>
    <member name="F:VisiWinNET.Forms.Trend.ZoomScaleBehaviors.TranslateRelativ">
      <summary>Die Skala befindet sich nach dem Zoomen an genau der gleichen Stelle im Steuerelement, wie vor dem Zoomen</summary>
    </member>
    <member name="T:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance">
      <summary>Kapselt Einstellungen für die Darstellung der Bedienelemente in den Dialogen 'AddUser' und 'ChangeUser'</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance.FontClassButtons">
      <summary>Legt die Fontklassendefinition für die Schaltflächen der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance.FontClassCaptions">
      <summary>Legt die Fontklassendefinition für die Titelzeile der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance.FontClassInputs">
      <summary>Legt die Fontklassendefinition für die Eingabeelemente der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance.FontClassLabels">
      <summary>Legt die Fontklassendefinition für die Beschriftungen der Dialoge fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance.MinHeightButtons">
      <summary>Legt die minimale Höhe der Schaltflächen auf den Dialogen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance.MinHeightInputs">
      <summary>Legt die minimale Höhe der Eingabeelemente auf den Dialogen fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.ConfigDialogAppearance.Padding">
      <summary>Gibt den Abstand (in Pixeln) der einzelnen Elemente auf den Dialogen an</summary>
    </member>
    <member name="T:VisiWinNET.Forms.UserManagement.UserManagementList">
      <summary>Steuerelement, das die Benutzer der Applikation in tabellarischer Form darstellt und Funktionen zum Administrieren der Benutzer bereitstellt</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.#ctor">
      <summary>Initialisiert eine neue Instanz der 'UserManagementList'-Klasse.</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.AutoUpdate">
      <summary>Legt fest, ob beim Laden des Steuerelementes automatisch Daten angezeigt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.Columns">
      <summary>Legt fest, welche Benutzerinformationan als Spalten im Steuerelement angezeigt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.ConfigDialogAppearance">
      <summary>Legt fest, wie die Elemente auf den Dialogen zum Hinzufügen oder Ändern eines Benutzers dargestellt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.ConfigUserDialog">
      <summary>Legt fest, welche Elemente auf den Dialogen zum Hinzufügen oder Ändern eines Benutzers angezeigt werden</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.ConfirmDelete">
      <summary>Legt fest, ob vor dem Löschen eines Benutzers eine Abfrage angezeigt werden soll</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.DefaultSortColumn">
      <summary>Gibt den Index der Spalte an, nach deren Inhalt die Daten sortiert werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.DefaultSortMode">
      <summary>Legt fest, wie die Daten sortiert werden sollen</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.SelectedUser">
      <summary>Gibt zurück, welcher Benutzer im Steuerelement markiert ist</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementList.SupportedCommands">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.ActivateUser">
      <summary>Aktiviert den im Steuerelement markierten Benutzer</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.AddUser">
      <summary>Öffnet den Dialog zum Hinzufügen eines neuen Benutzers</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.ChangeUser">
      <summary>Öffnet den Dialog zum Ändern der Einstellungen des im Steuerelement markierten Benutzers</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.DeactivateUser">
      <summary>Deaktiviert den im Steuerelement markierten Benutzer</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.DeleteUser">
      <summary>Löscht den im Steuerelement markierten Benutzer</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.ExecuteCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.GetCommand(System.Type)">
      <summary>Unterstützt die VisiWinNET Infrastruktur</summary>
      <returns>-</returns>
      <param name="commandType">-</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementList.UpdateUsersView">
      <summary>Lädt die Liste der Benutzer in das Steuerelement</summary>
    </member>
    <member name="T:VisiWinNET.Forms.UserManagement.UserManagementListColumn">
      <summary>Klasse, die eine Spalte im 'UserManagementList'-Steuerelement repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementListColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'UserManagementListColumn'-Klasse.</summary>
    </member>
    <member name="T:VisiWinNET.Forms.UserManagement.UserManagementListUserItem">
      <summary>Kapselt die Informationen des im 'UserManagementList'-Steuerelement markierten Benutzers</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.#ctor(VisiWinNET.Forms.UserManagement.UserManagementList,VisiWinNET.UserManagement.User)">
      <summary>Initialisiert eine neue Instanz der 'UserManagementListUserItem'-Klasse.</summary>
      <param name="listView">Angabe des 'UserManagementList' Steuerelementes</param>
      <param name="user">Angabe des markierten 'User'-Objektes</param>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.Code">
      <summary>Gibt den Wert für den Parameter "maschineller Code" zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.Comment">
      <summary>Kommentar zum Benutzer</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.DeactivationTime">
      <summary>Gibt den Zeitpunkt an, an dem der Benutzer gesperrt oder deaktiviert wurde</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.FullName">
      <summary>Gibt den Parameter "voller Name" aus der Projektdatenbank zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.Group">
      <summary>Gibt den sprachumschaltbaren Text der Benutzergruppe zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.GroupName">
      <summary>Gibt den Namen der Benutzergruppe zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.Name">
      <summary>Gibt den Anmeldenamen des Benutzers zurück</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.RemainingLogOns">
      <summary>Gibt zurück, wie oft der Benutzer noch versuchen kann, sich anzumelden, bevor er gesperrt wird</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.RenewPassword">
      <summary>Gibt an, wie viele Tage das aktuell vergebene Passwort des Benutzers noch gültig sein kann</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.State">
      <summary>Gibt den Zustand des Benutzers an</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Boolean,System.Int32,System.Boolean)">
      <summary>Zeichnet das Element in das übergebene Graphics-Objekt.
</summary>
      <param name="g">Graphics-Objekt, in das sich das Element zeichnet.</param>
      <param name="rectangle">Rechteck, in das sich das Element zeichnet.</param>
      <param name="font">Schriftart.</param>
      <param name="itemAutoHeight">True: Das Element berechnet seine Höhe selbst, ansonsten false.</param>
      <param name="hScrollValue">Optionale Angabe eines Offsets, der durch einen horizontalen Bildlauf das gezeichnete Element nach links verschiebt.</param>
      <param name="drawFocus">True: Das Element wird mit einem Fokusrahmen gekennzeichnet.</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UserManagementListUserItem.GetStateText">
      <summary>Holt den sprachumgeschalteten Text, der den Status (deaktiviert/ aktiviert/ beim nächsten mal Passwort ändern) des Benutzers beschreibt.
</summary>
      <returns>Der angeforderte Text.</returns>
    </member>
    <member name="T:VisiWinNET.Forms.UserManagement.UsersViewColumn">
      <summary>Klasse, die eine Spalte im 'UserManagementList'-Steuerelement repräsentiert</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.#ctor(VisiWinNET.Forms.UserManagement.UsersViewColumns,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'UsersViewColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'UserManagementListProperty'</param>
      <param name="name">Wert für die Eigenschaft 'Name'</param>
      <param name="header">Text im Spaltenkopf</param>
      <param name="width">Breiote der Spalte (in Pixeln)</param>
      <param name="alignment">Ausrichtung der Spalteninhalte</param>
      <param name="sortable">Angabe, ob nach dem Inhalt der Spalte sortiert werden kann</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.#ctor(VisiWinNET.Forms.UserManagement.UsersViewColumns,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
      <summary>Initialisiert eine neue Instanz der 'UsersViewColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'UserManagementListProperty'</param>
      <param name="name">Wert für die Eigenschaft 'Name'</param>
      <param name="header">Text im Spaltenkopf</param>
      <param name="width">Breiote der Spalte (in Pixeln)</param>
      <param name="alignment">Ausrichtung der Spalteninhalte</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der 'UsersViewColumn'-Klasse.</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.#ctor(VisiWinNET.Forms.UserManagement.UsersViewColumns,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der 'UsersViewColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'UserManagementListProperty'</param>
      <param name="name">Wert für die Eigenschaft 'Name'</param>
      <param name="header">Text im Spaltenkopf</param>
      <param name="width">Breiote der Spalte (in Pixeln)</param>
      <param name="alignment">Ausrichtung der Spalteninhalte</param>
      <param name="sortable">Angabe, ob nach dem Inhalt der Spalte sortiert werden kann</param>
      <param name="visible">Legt fest, ob die Spalte sichtbar oder ausgeblendet wird.</param>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.#ctor(VisiWinNET.Forms.UserManagement.UsersViewColumns)">
      <summary>Initialisiert eine neue Instanz der 'UsersViewColumn'-Klasse.</summary>
      <param name="property">Wert für die Eigenschaft 'UserManagementListProperty'</param>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UsersViewColumn.HeaderText">
      <summary>Legt den festen, nicht sprachumschaltbaren Text im Spaltenkopf fest, wenn keine Angaben in 'LocalizedHederText' vorgenommen werden.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UsersViewColumn.LocalizedHeaderText">
      <summary>Legt den Bezeichner für einen Text aus der Sprachumschaltung fest, der im Spaltenkopf dargestellt wird.
</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UsersViewColumn.Name">
      <summary>Legt den Namen der Spalte fest</summary>
    </member>
    <member name="P:VisiWinNET.Forms.UserManagement.UsersViewColumn.UserManagementListProperty">
      <summary>Legt den Inhalt der Spalte fest</summary>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.Clone">
      <summary>Erzeugt ein Kopie des Objektes.
</summary>
      <returns>Die erzeugte Kopie.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.GetComparer">
      <summary>Gibt ein Objekt mit der Schnittstelle ICompare zurück, mit dessen Hilfe sich zwei Instanzen dieses Typs vergleichen lassen.
</summary>
      <returns>Das angeforderte Objekt mit der ICompare Schnittstelle.</returns>
    </member>
    <member name="M:VisiWinNET.Forms.UserManagement.UsersViewColumn.ToString">
      <summary>Gibt einen String zurück, der das aktuelle Objekt darstellt.</summary>
      <returns>Der Wert der Eigenschaft 'UserManagementListProperty'</returns>
    </member>
    <member name="T:VisiWinNET.Forms.UserManagement.UsersViewColumns">
      <summary>Beinhaltet die möglichen Informationstypen der Spalten einer 'UserManagementList'</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.Code">
      <summary>maschineller Code des Benutzers</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.Comment">
      <summary>Kommentar für den Benutzer</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.DeactivationTime">
      <summary>Deaktivierungszeit des Benutzers</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.FullName">
      <summary>Voller Name des Benutzers</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.Group">
      <summary>Sprachumschaltbarer Text der Benutzergruppe</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.Name">
      <summary>Anmeldename des Benutzers</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.None">
      <summary>Keine Information</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.RemainingLogOns">
      <summary>Anzahl der verbleibenden Anmeldefehlversuche bis zum automatischen Deaktivieren</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.RenewPassword">
      <summary>Angabe der Gültigkeit des aktuellen Passwortes in Tagen</summary>
    </member>
    <member name="F:VisiWinNET.Forms.UserManagement.UsersViewColumns.State">
      <summary>Status des Benutzers</summary>
    </member>
  </members>
</doc>